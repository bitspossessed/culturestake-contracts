{
  "contractName": "Culturestake",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_questionMasterCopy",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "AddedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        }
      ],
      "name": "DeactivateFestival",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "question",
          "type": "bytes32"
        }
      ],
      "name": "DeactivateQuestion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "boothAddress",
          "type": "address"
        }
      ],
      "name": "DeactivateVotingBooth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "InitFestival",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "question",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "questionAddress",
          "type": "address"
        }
      ],
      "name": "InitQuestion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "boothAddress",
          "type": "address"
        }
      ],
      "name": "InitVotingBooth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Proxy",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "ProxyCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RemovedOwner",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "questionMasterCopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "questionsByAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "swapOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voteRelayer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newQuestionMasterCopy",
          "type": "address"
        }
      ],
      "name": "setQuestionMasterCopy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVoteRelayer",
          "type": "address"
        }
      ],
      "name": "setVoteRelayer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "isVoteRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "isActiveFestival",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_answers",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "sigV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "sigS",
          "type": "bytes32"
        }
      ],
      "name": "checkBoothSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_answers",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "burnNonce",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        }
      ],
      "name": "initVotingBooth",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        }
      ],
      "name": "deactivateVotingBooth",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        }
      ],
      "name": "getVotingBooth",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "isValidVotingNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "initFestival",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "deactivateFestival",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "getFestival",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_question",
          "type": "bytes32"
        }
      ],
      "name": "deactivateQuestion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_question",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_maxVoteTokens",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "initQuestion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_question",
          "type": "bytes32"
        }
      ],
      "name": "getQuestion",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_questionMasterCopy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"}],\"name\":\"DeactivateFestival\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question\",\"type\":\"bytes32\"}],\"name\":\"DeactivateQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boothAddress\",\"type\":\"address\"}],\"name\":\"DeactivateVotingBooth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"InitFestival\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"questionAddress\",\"type\":\"address\"}],\"name\":\"InitQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boothAddress\",\"type\":\"address\"}],\"name\":\"InitVotingBooth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract Proxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"burnNonce\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_answers\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"}],\"name\":\"checkBoothSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"deactivateFestival\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_question\",\"type\":\"bytes32\"}],\"name\":\"deactivateQuestion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"}],\"name\":\"deactivateVotingBooth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"getFestival\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_answers\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_question\",\"type\":\"bytes32\"}],\"name\":\"getQuestion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"}],\"name\":\"getVotingBooth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"initFestival\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_question\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_maxVoteTokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"initQuestion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"}],\"name\":\"initVotingBooth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"isActiveFestival\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"isValidVotingNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isVoteRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"questionMasterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"questionsByAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newQuestionMasterCopy\",\"type\":\"address\"}],\"name\":\"setQuestionMasterCopy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVoteRelayer\",\"type\":\"address\"}],\"name\":\"setVoteRelayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"swapOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voteRelayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sarah Friend @ana0\",\"methods\":{\"burnNonce(address,uint256)\":{\"details\":\"Destructive method that burns the nonce - marked onlyQuestions to prevent griefing\",\"params\":{\"_booth\":\"The booth using the nonce (nonces are stored per booth)\",\"_nonce\":\"The nonce\"}},\"checkBoothSignature(bytes32,bytes32[],uint256,uint8,bytes32,bytes32)\":{\"details\":\"Used by server to validate vote data - the booth signs the answers array and a nonce\",\"params\":{\"_answers\":\"An array of answer ids\",\"_festival\":\"The festival chain id\",\"_nonce\":\"A random number added to the answers array by the booth - prevents a booth signature from being used for more than one vote package\",\"sigR\":\"Booth signature data\",\"sigS\":\"Booth signature data\",\"sigV\":\"Booth signature data\"},\"return\":\"True if the signature provided is a signature of an active booth, signing the correct data, and active on the claimed festival\"},\"constructor\":{\"details\":\"The owners array is used in the Admin contract this inherits from\",\"params\":{\"_owners\":\"An array of all addresses that have admin permissions over this contract\",\"_questionMasterCopy\":\"The address of the master copy that holds the logic for each question\"}},\"deactivateFestival(bytes32)\":{\"details\":\"Destructive method, questions from deactivated festivals cannot be voted on\",\"params\":{\"_festival\":\"The chain id of the festival\"}},\"deactivateQuestion(bytes32)\":{\"details\":\"Destructive method, deactivated questions cannot be voted on and do not pass the onlyQuestions modifier\",\"params\":{\"_question\":\"The question chain id\"}},\"deactivateVotingBooth(address)\":{\"details\":\"Destructive method, signatures from deactivated booths can not be used to vote\",\"params\":{\"_booth\":\"The booth address\"}},\"getFestival(bytes32)\":{\"details\":\"Getter for a festival struct\",\"params\":{\"_festival\":\"The chain id of the festival\"},\"return\":\"Bool for if the festival was initializedBool for the if the festival was deactivatedTimestamp for festival start timeTimestamp for festival end time\"},\"getHash(bytes32[],uint256)\":{\"params\":{\"_answers\":\"An array of answer ids\",\"_nonce\":\"A random number added to the answers array by the booth\"},\"return\":\"Keccak sha3 of the packed answers array and nonce\"},\"getQuestion(bytes32)\":{\"details\":\"Getter for a question struct\",\"params\":{\"_question\":\"The question chain is\"},\"return\":\"Bool for if the booth was initializedBool for if the booth was deactivatedThe address of the question contractThe festival chain id the question is associated withThe maximum tokens given in this question per answer\"},\"getVotingBooth(address)\":{\"details\":\"Getter for a voting booth struct\",\"params\":{\"_booth\":\"The booth address\"},\"return\":\"Bool for if the booth was initializedBool for the if the booth was deactivatedChain id of the festival the booth was registered to\"},\"initFestival(bytes32,uint256,uint256)\":{\"details\":\"Creates a festival\",\"params\":{\"_endTime\":\"Timestamp for festival end\",\"_festival\":\"The chain id of the festival\",\"_startTime\":\"Timestamp for festival start\"}},\"initQuestion(bytes32,uint256,bytes32)\":{\"details\":\"Deploys a question contract\",\"params\":{\"_festival\":\"The festival chain id\",\"_maxVoteTokens\":\"The amount of vote tokens given to each voter per answer\",\"_question\":\"The question chain id\"}},\"initVotingBooth(bytes32,address)\":{\"details\":\"Registers a voting booth with this contract\",\"params\":{\"_booth\":\"The booth address\",\"_festival\":\"The festival chain is\"}},\"isActiveFestival(bytes32)\":{\"details\":\"Used by server to validate vote data\",\"params\":{\"_festival\":\"The festival chain id\"},\"return\":\"True if the festival is currently open for voting\"},\"isValidVotingNonce(address,uint256)\":{\"details\":\"Used by the server to validate vote data\",\"params\":{\"_booth\":\"The booth address\",\"_nonce\":\"The nonce\"},\"return\":\"True if the challenged booth has not used this nonce\"},\"isVoteRelayer(address)\":{\"details\":\"Used by question contracts to validate the vote relayer\",\"params\":{\"_sender\":\"The address being challenged\"},\"return\":\"True if the address given is the current vote relayer\"},\"setQuestionMasterCopy(address)\":{\"details\":\"Provided the setup parameters of a question contract don't change, the logic on future questions can be updated\",\"params\":{\"_newQuestionMasterCopy\":\"The address of the master copy to use for new questions\"}},\"setVoteRelayer(address)\":{\"details\":\"The vote relayer is the server key that sends votes to question contracts. It should be cycled periodically and must be set before any votes can take place\",\"params\":{\"_newVoteRelayer\":\"The address of the new vote relayer\"}}},\"title\":\"Culturestake admin hub\"},\"userdoc\":{\"methods\":{},\"notice\":\"Deploys questions and manages festivals and voting booths within the culturestake system\"}},\"settings\":{\"compilationTarget\":{\"/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol\":\"Culturestake\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Admin.sol\":{\"keccak256\":\"0x8326857dafa2e97d0161c93de4d7fafc2ed4a610291e28a2e653880504bcce6c\",\"urls\":[\"bzz-raw://f6e54b738aa89b9aae7eee22c274ad249a0082d35687209cd9b9d4f9dc8f59d1\",\"dweb:/ipfs/QmWcafj9DYRuExCjLLWSNrihVeWRjvbFnwBJi6KRNhMM8g\"]},\"/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol\":{\"keccak256\":\"0xbef4ae94246112f6c5ecdbb84feb0db5230c7fc5e40ed7f79c0ab216de4795a7\",\"urls\":[\"bzz-raw://55320d771f54083aa20e2b7247cd3ab966a5ce693e37386a38b03bde33134b3c\",\"dweb:/ipfs/QmXByMxTpTRAm2f8pP2Y3hDvL8bxF5eCyoD7TKKVmaSQzW\"]},\"/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Proxy.sol\":{\"keccak256\":\"0x4cb0484ebdc4e2a48717550dfc93d97680bc515ddc291050b611b8c1d3aa95e4\",\"urls\":[\"bzz-raw://c2f2dec4b0ca39dbb9d476fac2db214bc346fc24722b0475471a02a752f818ff\",\"dweb:/ipfs/QmTNJX3A6E72VzMk59DaQm5pemdPd3eBYEEUFN5yyBP9aJ\"]},\"/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Question.sol\":{\"keccak256\":\"0xf70e82ab28d2d7c543054ff3c66f8718b0fba7f9416e54fb2880ac757f86dfa4\",\"urls\":[\"bzz-raw://38e8b7958fab9bac4c5f3c2b9ba5e1f721bdd5ffd2c64f0706c47eae57a986b2\",\"dweb:/ipfs/QmPw3n2UCKbaRzoaAWNazkaKHimkfYE6bpzM9eDkXi3msw\"]},\"/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/interfaces/CulturestakeI.sol\":{\"keccak256\":\"0xc19be1cc31057671a9c233d69634c0b13b65a4d2b4f879d768b453d843c0934f\",\"urls\":[\"bzz-raw://87b2668eb8ecd93d68b7e104e68cd25ab5d63f2bb8eef91948ab3507829ae3fb\",\"dweb:/ipfs/QmR1cPxWzuSBDF5A1v32H8fzwvvCEF8xaFvWrGQmVtxw52\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80637b50b1af116100de578063b8a81f9a11610097578063e3077d9b11610071578063e3077d9b14610954578063e318b52b146109b3578063e4288a7814610a37578063fbe5ce0a14610a9d57610173565b8063b8a81f9a14610866578063c7b75307146108c2578063d00403821461091057610173565b80637b50b1af146106a9578063807df2b314610705578063825ea758146107495780638dc47f3b146107775780638fb66365146107c5578063a0e67e2b1461080757610173565b80634e53d09d116101305780634e53d09d146104af5780635223c7901461051d57806358c039cd146105635780636418741d146105f55780637065cb4814610623578063798da56b1461066757610173565b80630a5336c6146101785780631d17390a146101c257806324a448921461020c5780632f54bf6e146102e2578063307eb6621461033e5780634892c56c1461046b575b600080fd5b610180610b01565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ca610b27565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102cc6004803603604081101561022257600080fd5b810190808035906020019064010000000081111561023f57600080fd5b82018360208201111561025157600080fd5b8035906020019184602083028401116401000000008311171561027357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050610b4d565b6040518082815260200191505060405180910390f35b610324600480360360208110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc7565b604051808215151515815260200191505060405180910390f35b610429600480360360c081101561035457600080fd5b81019080803590602001909291908035906020019064010000000081111561037b57600080fd5b82018360208201111561038d57600080fd5b803590602001918460208302840111640100000000831117156103af57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050610c98565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ad6004803603602081101561048157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e4e565b005b6104f1600480360360208110156104c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4d565b604051808415151515815260200183151515158152602001828152602001935050505060405180910390f35b6105496004803603602081101561053357600080fd5b8101908080359060200190929190505050611042565b604051808215151515815260200191505060405180910390f35b61058f6004803603602081101561057957600080fd5b81019080803590602001909291905050506110ff565b6040518086151515158152602001851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019550505050505060405180910390f35b6106216004803603602081101561060b57600080fd5b81019080803590602001909291905050506111c7565b005b6106656004803603602081101561063957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611312565b005b6106a76004803603606081101561067d57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061171e565b005b6106eb600480360360208110156106bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a96565b604051808215151515815260200191505060405180910390f35b6107476004803603602081101561071b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab6565b005b6107756004803603602081101561075f57600080fd5b8101908080359060200190929190505050611b58565b005b6107c36004803603604081101561078d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c15565b005b610805600480360360608110156107db57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611e99565b005b61080f612051565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610852578082015181840152602081019050610837565b505050509050019250505060405180910390f35b6108a86004803603602081101561087c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121e4565b604051808215151515815260200191505060405180910390f35b61090e600480360360408110156108d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061223e565b005b6109526004803603602081101561092657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122ee565b005b6109806004803603602081101561096a57600080fd5b8101908080359060200190929190505050612390565b60405180851515151581526020018415151515815260200183815260200182815260200194505050505060405180910390f35b610a35600480360360608110156109c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061241b565b005b610a8360048036036040811015610a4d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612ab4565b604051808215151515815260200191505060405180910390f35b610aff60048036036040811015610ab357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b20565b005b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082826040516020018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610b9d578082015181840152602081019050610b82565b50505050905001935050505060405160208183030381529060405280519060200120905092915050565b6000600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015610c915750600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b9050919050565b600080610ca58787610b4d565b9050600060018287878760405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610d06573d6000803e3d6000fd5b505050602060405103519050600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610d7157600092505050610e44565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615610dd157600092505050610e44565b88600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414610e2557600092505050610e44565b610e2f8188612ab4565b610e3e57600092505050610e44565b80925050505b9695505050505050565b610e5733610bc7565b610eac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fafbb4aa0f013cf60d928c38db1e3425d09ca11fdcd41516eee577abcef7cd2a460405160405180910390a250565b6000806000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549250925092509193909250565b60006002600083815260200190815260200160002060000160009054906101000a900460ff1661107557600090506110fa565b6002600083815260200190815260200160002060000160019054906101000a900460ff16156110a757600090506110fa565b42600260008481526020019081526020016000206001015411156110ce57600090506110fa565b42600260008481526020019081526020016000206002015410156110f557600090506110fa565b600190505b919050565b60008060008060006003600087815260200190815260200160002060000160009054906101000a900460ff166003600088815260200190815260200160002060000160019054906101000a900460ff166003600089815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008a815260200190815260200160002060010154600360008b8152602001908152602001600020600201549450945094509450945091939590929450565b6111d033610bc7565b611225576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b60016003600083815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506000600560006003600085815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550807fa7609dc65daa4aef2b5398974fc443f78f8f44703963fccde2f3e508b57994ed60405160405180910390a250565b61131b33610bc7565b611370576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156113da5750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b61144c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461154c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4164647265737320697320616c726561647920616e206f776e6572000000000081525060200191505060405180910390fd5b600080600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600080600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600081548092919060010191905055507f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b61172733610bc7565b61177c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b6002600082815260200190815260200160002060000160009054906101000a900460ff16611812576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f466573746976616c206d75737420626520696e6974656400000000000000000081525060200191505060405180910390fd5b6003600084815260200190815260200160002060000160009054906101000a900460ff161561188c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061331b6025913960400191505060405180910390fd5b6060632fa97de730858585604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019450505050506040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600061193682612f0f565b90506001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600087815260200190815260200160002060000160006101000a81548160ff021916908315150217905550826003600087815260200190815260200160002060010181905550806003600087815260200190815260200160002060000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360036000878152602001908152602001600020600201819055508073ffffffffffffffffffffffffffffffffffffffff1683867fb370cad5e23aaf054a0abd15ae3794b1a99ecf72dd0642cb0db1474a679eafcb60405160405180910390a45050505050565b60056020528060005260406000206000915054906101000a900460ff1681565b611abf33610bc7565b611b14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611b6133610bc7565b611bb6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b60016002600083815260200190815260200160002060000160016101000a81548160ff021916908315150217905550807f6b7ca7d367bb287c2641eecf063be04b9c10b283dc77970ae7f9c7cedf14a02e60405160405180910390a250565b611c1e33610bc7565b611c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b6002600083815260200190815260200160002060000160009054906101000a900460ff16611d09576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f466573746976616c206d75737420626520696e6974656400000000000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615611daf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806132886025913960400191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055508073ffffffffffffffffffffffffffffffffffffffff16827fb19d4fd999959d9d0075148221b684d4ebf7e97d11e7ea9af2af2026783489f760405160405180910390a35050565b611ea233610bc7565b611ef7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b6002600084815260200190815260200160002060000160009054906101000a900460ff1615611f8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f466573746976616c206d75737420626520696e6974656400000000000000000081525060200191505060405180910390fd5b42821015611f9b57600080fd5b818111611fa757600080fd5b60016002600085815260200190815260200160002060000160006101000a81548160ff021916908315150217905550816002600085815260200190815260200160002060010181905550806002600085815260200190815260200160002060020181905550827f890f4e89c76488160aacf9a41549a0e1bc74be23625284e4b75d98924189e2198383604051808381526020018281526020019250505060405180910390a2505050565b6060806001546040519080825280602002602001820160405280156120855781602001602082028038833980820191505090505b50905060008090506000806000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146121db578083838151811061213357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081806001019250506120f2565b82935050505090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166122e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806132cf6026913960400191505060405180910390fd5b6122ea8282613023565b5050565b6122f733610bc7565b61234c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000806002600086815260200190815260200160002060000160009054906101000a900460ff166002600087815260200190815260200160002060000160019054906101000a900460ff166002600088815260200190815260200160002060010154600260008981526020019081526020016000206002015493509350935093509193509193565b61242433610bc7565b612479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156124e35750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b612555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4164647265737320697320616c726561647920616e206f776e6572000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156126bf5750600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b612731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612813576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806132f56026913960400191505060405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600083815260200190815260200160002060009054906101000a900460ff1615905092915050565b612b2933610bc7565b612b7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806132ad6022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015612be85750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b612c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806132f56026913960400191505060405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008154809291906001900391905055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051612f4090613093565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015612f92573d6000803e3d6000fd5b509050600082511115612fbb5760008060008451602086016000865af11415612fba57600080fd5b5b7fa38789425dbeee0239e16ff2d2567e31720127fbc6430758c1a4efc6aef29f8081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1919050565b6001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6101e7806130a18339019056fe608060405234801561001057600080fd5b506040516101e73803806101e78339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806101c36024913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060aa806101196000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e60008114156070573d6000fd5b3d6000f3fea265627a7a72315820c4617e6a3323d8c1077fd665ffed31179dfe7b82e96745ba6b941f64c7bd4ae964736f6c63430005100032496e76616c6964206d617374657220636f707920616464726573732070726f7669646564566f74696e6720626f6f7468732063616e206f6e6c7920626520696e69746564206f6e63654d6574686f642063616e206f6e6c792062652063616c6c6564206279206f776e65724d6574686f642063616e206f6e6c792062652063616c6c6564206279207175657374696f6e73496e76616c696420707265764f776e65722c206f776e657220706169722070726f766964656454686973207175657374696f6e2063616e206f6e6c7920626520696e69746564206f6e6365a265627a7a72315820ac273dcd3e883a03d1edf381c18f3f6ae9d26244ef8054ceebe37e7c604a14fd64736f6c63430005100032",
  "sourceMap": "322:12070:1:-;;;2004:140;8:9:-1;5:2;;;30:1;27;20:12;5:2;2004:140:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2004:140:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;2004:140:1;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2004:140:1;;;;;;;;;;;;;;;;;;;;;;2084:7;315:20:0;327:7;315:11;;;:20;;:::i;:::-;260:82;2120:19:1;2099:18;;:40;;;;;;;;;;;;;;;;;;2004:140;;322:12070;;470:741:0;585:20;175:3;585:38;;638:9;650:1;638:13;;633:487;657:7;:14;653:1;:18;633:487;;;737:13;753:7;761:1;753:10;;;;;;;;;;;;;;737:26;;802:1;785:19;;:5;:19;;;;:47;;;;;175:3;808:24;;:5;:24;;;;785:47;777:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:1;933:27;;:6;:13;940:5;933:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;925:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:5;1011:6;:20;1018:12;1011:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1068:5;1053:20;;1092:17;1103:5;1092:17;;;;;;;;;;;;;;;;;;;;;;633:487;673:3;;;;;;;633:487;;;;175:3;1129:6;:20;1136:12;1129:20;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1190:7;:14;1177:10;:27;;;;470:741;;:::o;322:12070:1:-;;;;;;;",
  "deployedSourceMap": "322:12070:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;322:12070:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;621:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;584:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5360:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5360:159:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5360:159:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5360:159:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5360:159:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5360:159:1;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3076:166:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3076:166:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4401:770:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4401:770:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4401:770:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4401:770:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4401:770:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4401:770:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6845:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6845:155:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;7261:194;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7261:194:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:503;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3298:503:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12068:322;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12068:322:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9530:225;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9530:225:1;;;;;;;;;;;;;;;;;:::i;:::-;;1217:480:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1217:480:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;9973:1104:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9973:1104:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;529:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;529:51:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2734:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2734:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;8643:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8643:155:1;;;;;;;;;;;;;;;;;:::i;:::-;;6249:464;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6249:464:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7977:523;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7977:523:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3248:465:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3248:465:0;;;;;;;;;;;;;;;;;3030:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3030:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5998:109;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5998:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2363:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2363:135:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;9102:264;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9102:264:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2211:859:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2211:859:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7646:143:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7646:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1703:502:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1703:502:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;621:26:1;;;;;;;;;;;;;:::o;584:33::-;;;;;;;;;;;;;:::o;5360:159::-;5453:7;5496:8;5506:6;5485:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5485:28:1;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5485:28:1;;;5475:39;;;;;;5468:46;;5360:159;;;;:::o;3076:166:0:-;3153:4;175:3;3180:24;;:5;:24;;;;:55;;;;;3233:1;3208:27;;:6;:13;3215:5;3208:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;3180:55;3173:62;;3076:166;;;:::o;4401:770:1:-;4581:7;4598:9;4610:25;4618:8;4628:6;4610:7;:25::i;:::-;4598:37;;4643:22;4668:30;4678:1;4681:4;4687;4693;4668:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4668:30:1;;;;;;;;4643:55;;4740:12;:28;4753:14;4740:28;;;;;;;;;;;;;;;:35;;;;;;;;;;;;4735:59;;4792:1;4777:17;;;;;;4735:59;4845:12;:28;4858:14;4845:28;;;;;;;;;;;;;;;:40;;;;;;;;;;;;4841:63;;;4902:1;4887:17;;;;;;4841:63;5000:9;4959:12;:28;4972:14;4959:28;;;;;;;;;;;;;;;:37;;;:50;4953:76;;5027:1;5012:17;;;;;;4953:76;5076:42;5095:14;5111:6;5076:18;:42::i;:::-;5071:66;;5135:1;5120:17;;;;;;5071:66;5152:14;5145:21;;;;4401:770;;;;;;;;;:::o;6845:155::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6951:4:1;6916:12;:20;6929:6;6916:20;;;;;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;6988:6;6966:29;;;;;;;;;;;;6845:155;:::o;7261:194::-;7322:4;7328;7334:7;7357:12;:20;7370:6;7357:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;7386:12;:20;7399:6;7386:20;;;;;;;;;;;;;;;:32;;;;;;;;;;;;7420:12;:20;7433:6;7420:20;;;;;;;;;;;;;;;:29;;;7349:101;;;;;;7261:194;;;;;:::o;3298:503::-;3364:4;3422:9;:20;3432:9;3422:20;;;;;;;;;;;:27;;;;;;;;;;;;3417:46;;3458:5;3451:12;;;;3417:46;3524:9;:20;3534:9;3524:20;;;;;;;;;;;:32;;;;;;;;;;;;3520:50;;;3565:5;3558:12;;;;3520:50;3649:15;3616:9;:20;3626:9;3616:20;;;;;;;;;;;:30;;;:48;3612:66;;;3673:5;3666:12;;;;3612:66;3750:15;3719:9;:20;3729:9;3719:20;;;;;;;;;;;:28;;;:46;3715:64;;;3774:5;3767:12;;;;3715:64;3792:4;3785:11;;3298:503;;;;:::o;12068:322::-;12129:4;12135;12141:7;12150;12159;12189:9;:20;12199:9;12189:20;;;;;;;;;;;:27;;;;;;;;;;;;12224:9;:20;12234:9;12224:20;;;;;;;;;;;:32;;;;;;;;;;;;12264:9;:20;12274:9;12264:20;;;;;;;;;;;:36;;;;;;;;;;;;12308:9;:20;12318:9;12308:20;;;;;;;;;;;:29;;;12345:9;:20;12355:9;12345:20;;;;;;;;;;;:34;;;12174:211;;;;;;;;;;12068:322;;;;;;;:::o;9530:225::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9636:4:1;9601:9;:20;9611:9;9601:20;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;9705:5;9646:18;:56;9665:9;:20;9675:9;9665:20;;;;;;;;;;;:36;;;;;;;;;;;;9646:56;;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;9740:9;9721:29;;;;;;;;;;9530:225;:::o;1217:480:0:-;388:19;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:1;1347:19;;:5;:19;;;;:47;;;;;175:3;1370:24;;:5;:24;;;;1347:47;1339:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:1;1487:27;;:6;:13;1494:5;1487:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1479:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:6;:23;175:3;1572:23;;;;;;;;;;;;;;;;;;;;;;;;;1556:6;:13;1563:5;1556:13;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1631:5;1605:6;:23;175:3;1605:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1646:10;;:12;;;;;;;;;;;;;1673:17;1684:5;1673:17;;;;;;;;;;;;;;;;;;;;;;1217:480;:::o;9973:1104:1:-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10105:9:1;:20;10115:9;10105:20;;;;;;;;;;;:27;;;;;;;;;;;;10097:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10240:9;:20;10250:9;10240:20;;;;;;;;;;;:27;;;;;;;;;;;;10239:28;10231:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10373:17;10423:10;10443:4;10450:9;10461:14;10477:9;10393:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10393:99:1;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;10393:99:1;10373:119;;10561:22;10586:17;10598:4;10586:11;:17::i;:::-;10561:42;;10747:4;10699:18;:45;10726:16;10699:45;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;10821:4;10791:9;:20;10801:9;10791:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;10863:9;10831;:20;10841:9;10831:20;;;;;;;;;;;:29;;:41;;;;10925:16;10878:9;:20;10888:9;10878:20;;;;;;;;;;;:36;;;:64;;;;;;;;;;;;;;;;;;10985:14;10948:9;:20;10958:9;10948:20;;;;;;;;;;;:34;;:51;;;;11054:16;11011:61;;11035:9;11024;11011:61;;;;;;;;;;456:1:0;;9973:1104:1;;;:::o;529:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;2734:107::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2821:15:1;2807:11;;:29;;;;;;;;;;;;;;;;;;2734:107;:::o;8643:155::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8749:4:1;8714:9;:20;8724:9;8714:20;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;8783:9;8764:29;;;;;;;;;;8643:155;:::o;6249:464::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6396:9:1;:20;6406:9;6396:20;;;;;;;;;;;:27;;;;;;;;;;;;6388:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6501:12;:20;6514:6;6501:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;6500:28;6492:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6608:4;6578:12;:20;6591:6;6578:20;;;;;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;6652:9;6620:12;:20;6633:6;6620:20;;;;;;;;;;;;;;;:29;;:41;;;;6701:6;6674:34;;6690:9;6674:34;;;;;;;;;;6249:464;;:::o;7977:523::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8170:9:1;:20;8180:9;8170:20;;;;;;;;;;;:27;;;;;;;;;;;;8169:28;8161:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8253:15;8239:10;:29;;8231:38;;;;;;8294:10;8283:8;:21;8275:30;;;;;;8341:4;8311:9;:20;8321:9;8311:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8384:10;8351:9;:20;8361:9;8351:20;;;;;;;;;;;:30;;:43;;;;8431:8;8400:9;:20;8410:9;8400:20;;;;;;;;;;;:28;;:39;;;;8463:9;8450:45;8474:10;8486:8;8450:45;;;;;;;;;;;;;;;;;;;;;;;;7977:523;;;:::o;3248:465:0:-;3314:16;3346:22;3385:10;;3371:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3371:25:0;;;;3346:50;;3440:13;3456:1;3440:17;;3467:20;3490:6;:23;175:3;3490:23;;;;;;;;;;;;;;;;;;;;;;;;;3467:46;;3523:162;175:3;3529:31;;:12;:31;;;3523:162;;3591:12;3576:5;3582;3576:12;;;;;;;;;;;;;:27;;;;;;;;;;;3632:6;:20;3639:12;3632:20;;;;;;;;;;;;;;;;;;;;;;;;;3617:35;;3666:8;;;;;;;3523:162;;;3701:5;3694:12;;;;;3248:465;:::o;3030:107:1:-;3091:4;3121:11;;;;;;;;;;;3110:22;;:7;:22;;;3103:29;;3030:107;;;:::o;5998:109::-;1639:18;:30;1658:10;1639:30;;;;;;;;;;;;;;;;;;;;;;;;;1631:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6076:26;6087:6;6095;6076:10;:26::i;:::-;5998:109;;:::o;2363:135::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:22:1;2450:18;;:43;;;;;;;;;;;;;;;;;;2363:135;:::o;9102:264::-;9163:4;9169;9175:7;9184;9214:9;:20;9224:9;9214:20;;;;;;;;;;;:27;;;;;;;;;;;;9249:9;:20;9259:9;9249:20;;;;;;;;;;;:32;;;;;;;;;;;;9289:9;:20;9299:9;9289:20;;;;;;;;;;;:30;;;9327:9;:20;9337:9;9327:20;;;;;;;;;;;:28;;;9199:162;;;;;;;;9102:264;;;;;:::o;2211:859:0:-;388:19;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:1;2382:22;;:8;:22;;;;:53;;;;;175:3;2408:27;;:8;:27;;;;2382:53;2374:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:1;2528:30;;:6;:16;2535:8;2528:16;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;2520:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:1;2691:22;;:8;:22;;;;:53;;;;;175:3;2717:27;;:8;:27;;;;2691:53;2683:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:8;2797:29;;:6;:17;2804:9;2797:17;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;2789:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:6;:16;2905:8;2898:16;;;;;;;;;;;;;;;;;;;;;;;;;2879:6;:16;2886:8;2879:16;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2944:8;2924:6;:17;2931:9;2924:17;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2989:1;2962:6;:16;2969:8;2962:16;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3006:22;3019:8;3006:22;;;;;;;;;;;;;;;;;;;;;;3043:20;3054:8;3043:20;;;;;;;;;;;;;;;;;;;;;;2211:859;;;:::o;7646:143:1:-;7727:4;7748:12;:20;7761:6;7748:20;;;;;;;;;;;;;;;:27;;:35;7776:6;7748:35;;;;;;;;;;;;;;;;;;;;;7747:36;7739:45;;7646:143;;;;:::o;1703:502:0:-;388:19;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:1;1894:19;;:5;:19;;;;:47;;;;;175:3;1917:24;;:5;:24;;;;1894:47;1886:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2015:5;1994:26;;:6;:17;2001:9;1994:17;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;1986:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:6;:13;2100:5;2093:13;;;;;;;;;;;;;;;;;;;;;;;;;2073:6;:17;2080:9;2073:17;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;2140:1;2116:6;:13;2123:5;2116:13;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2152:10;;:12;;;;;;;;;;;;;;2179:19;2192:5;2179:19;;;;;;;;;;;;;;;;;;;;;;1703:502;;:::o;11298:391:1:-;11368:11;11409:18;;;;;;;;;;;11399:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11399:29:1;11391:37;;11454:1;11440:4;:11;:15;11436:216;;;11621:1;11617;11614;11607:4;11601:11;11594:4;11588;11584:15;11581:1;11574:5;11569:3;11564:55;11561:62;11558:2;;;11636:1;11633;11626:12;11558:2;11542:110;11664:20;11678:5;11664:20;;;;;;;;;;;;;;;;;;;;;;11298:391;;;:::o;5680:114::-;5785:4;5747:12;:20;5760:6;5747:20;;;;;;;;;;;;;;;:27;;:35;5775:6;5747:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;5680:114;;:::o;322:12070::-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\nimport './Admin.sol';\nimport './Question.sol';\nimport \"./Proxy.sol\";\n\n/// @title Culturestake admin hub\n/// @author Sarah Friend @ana0\n/// @notice Deploys questions and manages festivals and voting booths within the culturestake system\ncontract Culturestake is Admin {\n  using SafeMath for uint256;\n\n  mapping (bytes32 => Festival) festivals;\n  mapping (bytes32 => QuestionStruct) questions;\n  mapping (address => VotingBooth) votingBooths;\n  mapping (address => bool) public questionsByAddress;\n  address public questionMasterCopy;\n  address public voteRelayer;\n\n  struct VotingBooth {\n    bool inited;\n    bool deactivated;\n    bytes32 festival;\n    mapping (uint256 => bool) nonces;\n  }\n\n  struct Festival {\n    bool inited;\n    bool deactivated;\n    uint256 startTime;\n    uint256 endTime;\n  }\n\n  struct QuestionStruct {\n    bool inited;\n    bool deactivated;\n    address contractAddress;\n    bytes32 festival;\n    uint256 maxVoteTokens;\n  }\n\n  event InitQuestion(bytes32 indexed question, bytes32 indexed festival, address indexed questionAddress);\n  event InitFestival(bytes32 indexed festival, uint256 startTime, uint256 endTime);\n  event InitVotingBooth(bytes32 indexed festival, address indexed boothAddress);\n\n  event DeactivateQuestion(bytes32 indexed question);\n  event DeactivateFestival(bytes32 indexed festival);\n  event DeactivateVotingBooth(address indexed boothAddress);\n\n  event ProxyCreation(Proxy proxy);\n\n  /// @return True if the caller is a question contract deployed by this admin hub\n  modifier onlyQuestions() {\n      require(questionsByAddress[msg.sender], \"Method can only be called by questions\");\n      _;\n  }\n\n  /// @dev The owners array is used in the Admin contract this inherits from\n  /// @param _owners An array of all addresses that have admin permissions over this contract\n  /// @param _questionMasterCopy The address of the master copy that holds the logic for each question\n  constructor(address[] memory _owners, address _questionMasterCopy) public Admin(_owners) {\n    questionMasterCopy = _questionMasterCopy;\n  }\n\n  /// @dev Provided the setup parameters of a question contract don't change, the logic on future questions can be updated\n  /// @param _newQuestionMasterCopy The address of the master copy to use for new questions\n  function setQuestionMasterCopy(address _newQuestionMasterCopy) public authorized {\n    questionMasterCopy = _newQuestionMasterCopy;\n  }\n\n  /// @dev The vote relayer is the server key that sends votes to question contracts. It should be cycled periodically and must be set before any votes can take place\n  /// @param _newVoteRelayer The address of the new vote relayer\n  function setVoteRelayer(address _newVoteRelayer) public authorized {\n    voteRelayer = _newVoteRelayer;\n  }\n\n  /// @dev Used by question contracts to validate the vote relayer\n  /// @param _sender The address being challenged\n  /// @return True if the address given is the current vote relayer\n  function isVoteRelayer(address _sender) public view returns (bool) {\n    return _sender == voteRelayer;\n  }\n\n  /// @dev Used by server to validate vote data\n  /// @param _festival The festival chain id\n  /// @return True if the festival is currently open for voting\n  function isActiveFestival(bytes32 _festival) public view returns (bool) {\n    // case festival has not been inited\n    if (!festivals[_festival].inited) return false;\n    // case festival has been manually deactivated\n    if (festivals[_festival].deactivated) return false;\n    // case festival hasn't started\n    if (festivals[_festival].startTime > block.timestamp) return false;\n    // case festival has ended\n    if (festivals[_festival].endTime < block.timestamp) return false;\n    return true;\n  }\n\n  /// @dev Used by server to validate vote data - the booth signs the answers array and a nonce\n  /// @param _festival The festival chain id\n  /// @param _answers An array of answer ids\n  /// @param _nonce A random number added to the answers array by the booth - prevents a booth signature from being used for more than one vote package\n  /// @param sigV Booth signature data\n  /// @param sigR Booth signature data\n  /// @param sigS Booth signature data\n  /// @return True if the signature provided is a signature of an active booth, signing the correct data, and active on the claimed festival\n  function checkBoothSignature(\n    bytes32 _festival,\n    bytes32[] memory _answers,\n    uint256 _nonce,\n    uint8 sigV,\n    bytes32 sigR,\n    bytes32 sigS\n  ) public view returns (address) {\n      bytes32 h = getHash(_answers, _nonce);\n      address addressFromSig = ecrecover(h, sigV, sigR, sigS);\n      // case is not a booth\n      if (!votingBooths[addressFromSig].inited) return address(0);\n      // case was manually deactivated\n      if (votingBooths[addressFromSig].deactivated) return address(0);\n      // case is from the wrong festival\n      if (!(votingBooths[addressFromSig].festival == _festival)) return address(0);\n      // case nonce has been used\n      if (!isValidVotingNonce(addressFromSig, _nonce)) return address(0);\n      return addressFromSig;\n  }\n\n  /// @param _answers An array of answer ids\n  /// @param _nonce A random number added to the answers array by the booth\n  /// @return Keccak sha3 of the packed answers array and nonce\n  function getHash(\n    bytes32[] memory _answers,\n    uint256 _nonce\n  ) public view returns (bytes32) {\n    return keccak256(abi.encode(_answers, _nonce));\n  }\n\n  /// @dev Destructive method that burns the nonce\n  /// @param _booth The booth using the nonce (nonces are stored per booth)\n  /// @param _nonce The nonce\n  function _burnNonce(address _booth, uint256 _nonce) internal {\n    votingBooths[_booth].nonces[_nonce] = true;\n  }\n\n  /// @dev Destructive method that burns the nonce - marked onlyQuestions to prevent griefing\n  /// @param _booth The booth using the nonce (nonces are stored per booth)\n  /// @param _nonce The nonce\n  function burnNonce(address _booth, uint256 _nonce) public onlyQuestions {\n    _burnNonce(_booth, _nonce);\n  }\n\n  /// @dev Registers a voting booth with this contract\n  /// @param _festival The festival chain is\n  /// @param _booth The booth address\n  function initVotingBooth(\n    bytes32 _festival,\n    address _booth\n  ) public authorized {\n      // booth are only for one festival\n      require(festivals[_festival].inited, 'Festival must be inited');\n      // booths are one-time use\n      require(!votingBooths[_booth].inited, 'Voting booths can only be inited once');\n      votingBooths[_booth].inited = true;\n      votingBooths[_booth].festival = _festival;\n      emit InitVotingBooth(_festival, _booth);\n  }\n\n  /// @dev Destructive method, signatures from deactivated booths can not be used to vote\n  /// @param _booth The booth address\n  function deactivateVotingBooth(address _booth) public authorized {\n    votingBooths[_booth].deactivated = true;\n    emit DeactivateVotingBooth(_booth);\n  }\n\n  /// @dev Getter for a voting booth struct\n  /// @param _booth The booth address\n  /// @return Bool for if the booth was initialized\n  /// @return Bool for the if the booth was deactivated\n  /// @return Chain id of the festival the booth was registered to\n  function getVotingBooth(address _booth) public view returns (bool, bool, bytes32) {\n    return (votingBooths[_booth].inited, votingBooths[_booth].deactivated, votingBooths[_booth].festival);\n  }\n\n  /// @dev Used by the server to validate vote data\n  /// @param _booth The booth address\n  /// @param _nonce The nonce\n  /// @return True if the challenged booth has not used this nonce\n  function isValidVotingNonce(address _booth, uint256 _nonce) public view returns (bool) {\n    return (!votingBooths[_booth].nonces[_nonce]);\n  }\n\n  /// @dev Creates a festival\n  /// @param _festival The chain id of the festival\n  /// @param _startTime Timestamp for festival start\n  /// @param _endTime Timestamp for festival end\n  function initFestival(\n    bytes32 _festival,\n    uint256 _startTime,\n    uint256 _endTime\n  ) public authorized {\n    // this method can only be called once per festival chain id\n    require(!festivals[_festival].inited, 'Festival must be inited');\n    require(_startTime >= block.timestamp);\n    require(_endTime > _startTime);\n    festivals[_festival].inited = true;\n    festivals[_festival].startTime = _startTime;\n    festivals[_festival].endTime = _endTime;\n    emit InitFestival(_festival, _startTime, _endTime);\n  }\n\n  /// @dev Destructive method, questions from deactivated festivals cannot be voted on\n  /// @param _festival The chain id of the festival\n  function deactivateFestival(bytes32 _festival) public authorized {\n    festivals[_festival].deactivated = true;\n    emit DeactivateFestival(_festival);\n  }\n\n  /// @dev Getter for a festival struct\n  /// @param _festival The chain id of the festival\n  /// @return Bool for if the festival was initialized\n  /// @return Bool for the if the festival was deactivated\n  /// @return Timestamp for festival start time\n  /// @return Timestamp for festival end time\n  function getFestival(bytes32 _festival) public view returns (bool, bool, uint256, uint256) {\n    return (\n      festivals[_festival].inited,\n      festivals[_festival].deactivated,\n      festivals[_festival].startTime,\n      festivals[_festival].endTime\n    );\n  }\n\n  /// @dev Destructive method, deactivated questions cannot be voted on and do not pass the onlyQuestions modifier\n  /// @param _question The question chain id\n  function deactivateQuestion(bytes32 _question) public authorized {\n    questions[_question].deactivated = true;\n    questionsByAddress[questions[_question].contractAddress] = false;\n    emit DeactivateQuestion(_question);\n  }\n\n  /// @dev Deploys a question contract\n  /// @param _question The question chain id\n  /// @param _maxVoteTokens The amount of vote tokens given to each voter per answer\n  /// @param _festival The festival chain id\n  function initQuestion(\n    bytes32 _question,\n    uint256 _maxVoteTokens,\n    bytes32 _festival\n  ) public authorized {\n    require(festivals[_festival].inited, 'Festival must be inited');\n    // this method can only be called once per question chain id\n    require(!questions[_question].inited, 'This question can only be inited once');\n\n    // encode the data used in the question setup method\n    bytes memory data = abi.encodeWithSelector(\n      0x2fa97de7, address(this), _question, _maxVoteTokens, _festival\n    );\n\n    // question contracts are a proxy of question master copy\n    Proxy questionContract = createProxy(data);\n    // store the question so it can be looked up by address in the onlyQuestions modifier\n    questionsByAddress[address(questionContract)] = true;\n\n    // store the question struct\n    questions[_question].inited = true;\n    questions[_question].festival = _festival;\n    questions[_question].contractAddress = address(questionContract);\n    questions[_question].maxVoteTokens = _maxVoteTokens;\n\n    emit InitQuestion(_question, _festival, address(questionContract));\n  }\n\n  /// @dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n  /// @param data Payload for message call sent to new proxy contract.\n  /// @return The created proxy\n  function createProxy(bytes memory data)\n      internal\n      returns (Proxy proxy)\n  {\n      proxy = new Proxy(questionMasterCopy);\n      if (data.length > 0)\n          // solium-disable-next-line security/no-inline-assembly\n          assembly {\n              if eq(call(gas, proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) { revert(0, 0) }\n          }\n      emit ProxyCreation(proxy);\n  }\n\n  /// @dev Getter for a question struct\n  /// @param _question The question chain is\n  /// @return Bool for if the booth was initialized\n  /// @return Bool for if the booth was deactivated\n  /// @return The address of the question contract\n  /// @return The festival chain id the question is associated with\n  /// @return The maximum tokens given in this question per answer\n  function getQuestion(bytes32 _question) public view returns (bool, bool, address, bytes32, uint256) {\n    return (\n      questions[_question].inited,\n      questions[_question].deactivated,\n      questions[_question].contractAddress,\n      questions[_question].festival,\n      questions[_question].maxVoteTokens\n    );\n  }\n}",
  "sourcePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol",
  "ast": {
    "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol",
    "exportedSymbols": {
      "Culturestake": [
        1135
      ]
    },
    "id": 1136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 390,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 391,
        "nodeType": "ImportDirective",
        "scope": 1136,
        "sourceUnit": 1924,
        "src": "25:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Admin.sol",
        "file": "./Admin.sol",
        "id": 392,
        "nodeType": "ImportDirective",
        "scope": 1136,
        "sourceUnit": 389,
        "src": "86:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Question.sol",
        "file": "./Question.sol",
        "id": 393,
        "nodeType": "ImportDirective",
        "scope": 1136,
        "sourceUnit": 1611,
        "src": "108:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Proxy.sol",
        "file": "./Proxy.sol",
        "id": 394,
        "nodeType": "ImportDirective",
        "scope": 1136,
        "sourceUnit": 1228,
        "src": "133:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 395,
              "name": "Admin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 388,
              "src": "347:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$388",
                "typeString": "contract Admin"
              }
            },
            "id": 396,
            "nodeType": "InheritanceSpecifier",
            "src": "347:5:1"
          }
        ],
        "contractDependencies": [
          388,
          1227
        ],
        "contractKind": "contract",
        "documentation": "@title Culturestake admin hub\n @author Sarah Friend @ana0\n @notice Deploys questions and manages festivals and voting booths within the culturestake system",
        "fullyImplemented": true,
        "id": 1135,
        "linearizedBaseContracts": [
          1135,
          388
        ],
        "name": "Culturestake",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 399,
            "libraryName": {
              "contractScope": null,
              "id": 397,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1923,
              "src": "363:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1923",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "357:27:1",
            "typeName": {
              "id": 398,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 403,
            "name": "festivals",
            "nodeType": "VariableDeclaration",
            "scope": 1135,
            "src": "388:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
              "typeString": "mapping(bytes32 => struct Culturestake.Festival)"
            },
            "typeName": {
              "id": 402,
              "keyType": {
                "id": 400,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "397:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "388:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                "typeString": "mapping(bytes32 => struct Culturestake.Festival)"
              },
              "valueType": {
                "contractScope": null,
                "id": 401,
                "name": "Festival",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 439,
                "src": "408:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Festival_$439_storage_ptr",
                  "typeString": "struct Culturestake.Festival"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 407,
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 1135,
            "src": "431:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
              "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct)"
            },
            "typeName": {
              "id": 406,
              "keyType": {
                "id": 404,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "440:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "431:35:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct)"
              },
              "valueType": {
                "contractScope": null,
                "id": 405,
                "name": "QuestionStruct",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 450,
                "src": "451:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_QuestionStruct_$450_storage_ptr",
                  "typeString": "struct Culturestake.QuestionStruct"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 411,
            "name": "votingBooths",
            "nodeType": "VariableDeclaration",
            "scope": 1135,
            "src": "480:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
              "typeString": "mapping(address => struct Culturestake.VotingBooth)"
            },
            "typeName": {
              "id": 410,
              "keyType": {
                "id": 408,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "489:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "480:32:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                "typeString": "mapping(address => struct Culturestake.VotingBooth)"
              },
              "valueType": {
                "contractScope": null,
                "id": 409,
                "name": "VotingBooth",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 430,
                "src": "500:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VotingBooth_$430_storage_ptr",
                  "typeString": "struct Culturestake.VotingBooth"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 415,
            "name": "questionsByAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1135,
            "src": "529:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 414,
              "keyType": {
                "id": 412,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "538:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "529:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 413,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "549:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 417,
            "name": "questionMasterCopy",
            "nodeType": "VariableDeclaration",
            "scope": 1135,
            "src": "584:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 416,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 419,
            "name": "voteRelayer",
            "nodeType": "VariableDeclaration",
            "scope": 1135,
            "src": "621:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 418,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "621:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Culturestake.VotingBooth",
            "id": 430,
            "members": [
              {
                "constant": false,
                "id": 421,
                "name": "inited",
                "nodeType": "VariableDeclaration",
                "scope": 430,
                "src": "677:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 420,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "677:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 423,
                "name": "deactivated",
                "nodeType": "VariableDeclaration",
                "scope": 430,
                "src": "694:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 422,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 425,
                "name": "festival",
                "nodeType": "VariableDeclaration",
                "scope": 430,
                "src": "716:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 424,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 429,
                "name": "nonces",
                "nodeType": "VariableDeclaration",
                "scope": 430,
                "src": "738:32:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "typeName": {
                  "id": 428,
                  "keyType": {
                    "id": 426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "738:25:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "valueType": {
                    "id": 427,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "VotingBooth",
            "nodeType": "StructDefinition",
            "scope": 1135,
            "src": "652:123:1",
            "visibility": "public"
          },
          {
            "canonicalName": "Culturestake.Festival",
            "id": 439,
            "members": [
              {
                "constant": false,
                "id": 432,
                "name": "inited",
                "nodeType": "VariableDeclaration",
                "scope": 439,
                "src": "801:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 431,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "801:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 434,
                "name": "deactivated",
                "nodeType": "VariableDeclaration",
                "scope": 439,
                "src": "818:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 433,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 436,
                "name": "startTime",
                "nodeType": "VariableDeclaration",
                "scope": 439,
                "src": "840:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 435,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "840:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 438,
                "name": "endTime",
                "nodeType": "VariableDeclaration",
                "scope": 439,
                "src": "863:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 437,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "863:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Festival",
            "nodeType": "StructDefinition",
            "scope": 1135,
            "src": "779:104:1",
            "visibility": "public"
          },
          {
            "canonicalName": "Culturestake.QuestionStruct",
            "id": 450,
            "members": [
              {
                "constant": false,
                "id": 441,
                "name": "inited",
                "nodeType": "VariableDeclaration",
                "scope": 450,
                "src": "915:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 440,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "915:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 443,
                "name": "deactivated",
                "nodeType": "VariableDeclaration",
                "scope": 450,
                "src": "932:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 442,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "932:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 445,
                "name": "contractAddress",
                "nodeType": "VariableDeclaration",
                "scope": 450,
                "src": "954:23:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 444,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "954:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 447,
                "name": "festival",
                "nodeType": "VariableDeclaration",
                "scope": 450,
                "src": "983:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 446,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "983:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 449,
                "name": "maxVoteTokens",
                "nodeType": "VariableDeclaration",
                "scope": 450,
                "src": "1005:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 448,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1005:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "QuestionStruct",
            "nodeType": "StructDefinition",
            "scope": 1135,
            "src": "887:144:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 458,
            "name": "InitQuestion",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "indexed": true,
                  "name": "question",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1054:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 454,
                  "indexed": true,
                  "name": "festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1080:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "indexed": true,
                  "name": "questionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1106:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1053:85:1"
            },
            "src": "1035:104:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 466,
            "name": "InitFestival",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "indexed": true,
                  "name": "festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "1161:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 462,
                  "indexed": false,
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "1187:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 464,
                  "indexed": false,
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "1206:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1160:62:1"
            },
            "src": "1142:81:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 472,
            "name": "InitVotingBooth",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "indexed": true,
                  "name": "festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "1248:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 470,
                  "indexed": true,
                  "name": "boothAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "1274:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1247:56:1"
            },
            "src": "1226:78:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 476,
            "name": "DeactivateQuestion",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "indexed": true,
                  "name": "question",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "1333:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1332:26:1"
            },
            "src": "1308:51:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 480,
            "name": "DeactivateFestival",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "indexed": true,
                  "name": "festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "1387:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1386:26:1"
            },
            "src": "1362:51:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 484,
            "name": "DeactivateVotingBooth",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "indexed": true,
                  "name": "boothAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "1444:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1443:30:1"
            },
            "src": "1416:58:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 488,
            "name": "ProxyCreation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "indexed": false,
                  "name": "proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "1498:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proxy_$1227",
                    "typeString": "contract Proxy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 485,
                    "name": "Proxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1227,
                    "src": "1498:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proxy_$1227",
                      "typeString": "contract Proxy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1497:13:1"
            },
            "src": "1478:33:1"
          },
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "1623:103:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 491,
                          "name": "questionsByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "1639:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 494,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 492,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "1658:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1658:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1639:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6574686f642063616e206f6e6c792062652063616c6c6564206279207175657374696f6e73",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:40:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64528c6c5820592853337894472690f9dc34a3591c326063e7750f41e6ccb3fe",
                          "typeString": "literal_string \"Method can only be called by questions\""
                        },
                        "value": "Method can only be called by questions"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64528c6c5820592853337894472690f9dc34a3591c326063e7750f41e6ccb3fe",
                          "typeString": "literal_string \"Method can only be called by questions\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1942,
                      "src": "1631:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1631:81:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:81:1"
                },
                {
                  "id": 498,
                  "nodeType": "PlaceholderStatement",
                  "src": "1720:1:1"
                }
              ]
            },
            "documentation": "@return True if the caller is a question contract deployed by this admin hub",
            "id": 500,
            "name": "onlyQuestions",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1620:2:1"
            },
            "src": "1598:128:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 515,
              "nodeType": "Block",
              "src": "2093:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "questionMasterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "2099:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 512,
                      "name": "_questionMasterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "2120:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2099:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:40:1"
                }
              ]
            },
            "documentation": "@dev The owners array is used in the Admin contract this inherits from\n @param _owners An array of all addresses that have admin permissions over this contract\n @param _questionMasterCopy The address of the master copy that holds the logic for each question",
            "id": 516,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 508,
                    "name": "_owners",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 503,
                    "src": "2084:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 509,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 507,
                  "name": "Admin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 388,
                  "src": "2078:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Admin_$388_$",
                    "typeString": "type(contract Admin)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2078:14:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "name": "_owners",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "2016:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 501,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2016:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 502,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2016:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "name": "_questionMasterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "2042:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2015:55:1"
            },
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2093:0:1"
            },
            "scope": 1135,
            "src": "2004:140:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 527,
              "nodeType": "Block",
              "src": "2444:54:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 523,
                      "name": "questionMasterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "2450:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 524,
                      "name": "_newQuestionMasterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "2471:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2450:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 526,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:43:1"
                }
              ]
            },
            "documentation": "@dev Provided the setup parameters of a question contract don't change, the logic on future questions can be updated\n @param _newQuestionMasterCopy The address of the master copy to use for new questions",
            "id": 528,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "2433:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2433:10:1"
              }
            ],
            "name": "setQuestionMasterCopy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "name": "_newQuestionMasterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "2394:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2394:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2393:32:1"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:0:1"
            },
            "scope": 1135,
            "src": "2363:135:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "2801:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 535,
                      "name": "voteRelayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "2807:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "_newVoteRelayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "2821:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2807:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "2807:29:1"
                }
              ]
            },
            "documentation": "@dev The vote relayer is the server key that sends votes to question contracts. It should be cycled periodically and must be set before any votes can take place\n @param _newVoteRelayer The address of the new vote relayer",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 533,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 532,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "2790:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2790:10:1"
              }
            ],
            "name": "setVoteRelayer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "name": "_newVoteRelayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "2758:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2757:25:1"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2801:0:1"
            },
            "scope": 1135,
            "src": "2734:107:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 551,
              "nodeType": "Block",
              "src": "3097:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 547,
                      "name": "_sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "3110:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 548,
                      "name": "voteRelayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "3121:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3110:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 546,
                  "id": 550,
                  "nodeType": "Return",
                  "src": "3103:29:1"
                }
              ]
            },
            "documentation": "@dev Used by question contracts to validate the vote relayer\n @param _sender The address being challenged\n @return True if the address given is the current vote relayer",
            "id": 552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVoteRelayer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "3053:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3052:17:1"
            },
            "returnParameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "3091:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3091:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3090:6:1"
            },
            "scope": 1135,
            "src": "3030:107:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 596,
              "nodeType": "Block",
              "src": "3370:431:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3421:28:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 559,
                          "name": "festivals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "3422:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                          }
                        },
                        "id": 561,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 560,
                          "name": "_festival",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "3432:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3422:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Festival_$439_storage",
                          "typeString": "struct Culturestake.Festival storage ref"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "inited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 432,
                      "src": "3422:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 566,
                  "nodeType": "IfStatement",
                  "src": "3417:46:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3458:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 558,
                    "id": 565,
                    "nodeType": "Return",
                    "src": "3451:12:1"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "festivals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "3524:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                          "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                        }
                      },
                      "id": 569,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 568,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "3534:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3524:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Festival_$439_storage",
                        "typeString": "struct Culturestake.Festival storage ref"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deactivated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 434,
                    "src": "3524:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 573,
                  "nodeType": "IfStatement",
                  "src": "3520:50:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3565:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 558,
                    "id": 572,
                    "nodeType": "Return",
                    "src": "3558:12:1"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 574,
                          "name": "festivals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "3616:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                          }
                        },
                        "id": 576,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 575,
                          "name": "_festival",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "3626:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3616:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Festival_$439_storage",
                          "typeString": "struct Culturestake.Festival storage ref"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "3616:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1928,
                        "src": "3649:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3649:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3616:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 583,
                  "nodeType": "IfStatement",
                  "src": "3612:66:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3673:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 558,
                    "id": 582,
                    "nodeType": "Return",
                    "src": "3666:12:1"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 584,
                          "name": "festivals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "3719:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                          }
                        },
                        "id": 586,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "_festival",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "3729:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3719:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Festival_$439_storage",
                          "typeString": "struct Culturestake.Festival storage ref"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "3719:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1928,
                        "src": "3750:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3750:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3719:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 593,
                  "nodeType": "IfStatement",
                  "src": "3715:64:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3774:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 558,
                    "id": 592,
                    "nodeType": "Return",
                    "src": "3767:12:1"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3792:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 558,
                  "id": 595,
                  "nodeType": "Return",
                  "src": "3785:11:1"
                }
              ]
            },
            "documentation": "@dev Used by server to validate vote data\n @param _festival The festival chain id\n @return True if the festival is currently open for voting",
            "id": 597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActiveFestival",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "3324:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3323:19:1"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "3364:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3363:6:1"
            },
            "scope": 1135,
            "src": "3298:503:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "4590:581:1",
              "statements": [
                {
                  "assignments": [
                    616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 616,
                      "name": "h",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "4598:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 615,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4598:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 621,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "_answers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "4618:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "4628:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 617,
                      "name": "getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "4610:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32[] memory,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4610:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4598:37:1"
                },
                {
                  "assignments": [
                    623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 623,
                      "name": "addressFromSig",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "4643:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 622,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4643:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 625,
                        "name": "h",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "4678:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 626,
                        "name": "sigV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "4681:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 627,
                        "name": "sigR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "4687:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "sigS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "4693:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 624,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1930,
                      "src": "4668:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4668:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4643:55:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4739:36:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 631,
                          "name": "votingBooths",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "4740:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                            "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                          }
                        },
                        "id": 633,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 632,
                          "name": "addressFromSig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "4753:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4740:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                          "typeString": "struct Culturestake.VotingBooth storage ref"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "inited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 421,
                      "src": "4740:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 640,
                  "nodeType": "IfStatement",
                  "src": "4735:59:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4792:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4784:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4784:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "functionReturnParameters": 614,
                    "id": 639,
                    "nodeType": "Return",
                    "src": "4777:17:1"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 641,
                        "name": "votingBooths",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "4845:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                          "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "addressFromSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "4858:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4845:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                        "typeString": "struct Culturestake.VotingBooth storage ref"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deactivated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 423,
                    "src": "4845:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 649,
                  "nodeType": "IfStatement",
                  "src": "4841:63:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4902:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4894:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4894:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "functionReturnParameters": 614,
                    "id": 648,
                    "nodeType": "Return",
                    "src": "4887:17:1"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4957:53:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "votingBooths",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "4959:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                                  "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                                }
                              },
                              "id": 652,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 651,
                                "name": "addressFromSig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 623,
                                "src": "4972:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4959:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                                "typeString": "struct Culturestake.VotingBooth storage ref"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "festival",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 425,
                            "src": "4959:37:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 654,
                            "name": "_festival",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "5000:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4959:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 656,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4958:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 662,
                  "nodeType": "IfStatement",
                  "src": "4953:76:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5027:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5019:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5019:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "functionReturnParameters": 614,
                    "id": 661,
                    "nodeType": "Return",
                    "src": "5012:17:1"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5075:43:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 664,
                          "name": "addressFromSig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "5095:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 665,
                          "name": "_nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "5111:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 663,
                        "name": "isValidVotingNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "5076:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5076:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 672,
                  "nodeType": "IfStatement",
                  "src": "5071:66:1",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5135:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5127:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5127:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "functionReturnParameters": 614,
                    "id": 671,
                    "nodeType": "Return",
                    "src": "5120:17:1"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 673,
                    "name": "addressFromSig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 623,
                    "src": "5152:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 614,
                  "id": 674,
                  "nodeType": "Return",
                  "src": "5145:21:1"
                }
              ]
            },
            "documentation": "@dev Used by server to validate vote data - the booth signs the answers array and a nonce\n @param _festival The festival chain id\n @param _answers An array of answer ids\n @param _nonce A random number added to the answers array by the booth - prevents a booth signature from being used for more than one vote package\n @param sigV Booth signature data\n @param sigR Booth signature data\n @param sigS Booth signature data\n @return True if the signature provided is a signature of an active booth, signing the correct data, and active on the claimed festival",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBoothSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "4435:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4435:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "name": "_answers",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "4458:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 600,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 601,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4458:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 604,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "4489:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4489:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "name": "sigV",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "4509:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4509:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 608,
                  "name": "sigR",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "4525:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4525:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "name": "sigS",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "4543:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4543:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4429:130:1"
            },
            "returnParameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "4581:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4580:9:1"
            },
            "scope": 1135,
            "src": "4401:770:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 694,
              "nodeType": "Block",
              "src": "5462:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 689,
                            "name": "_answers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "5496:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "5506:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 687,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1925,
                            "src": "5485:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5485:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5485:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 686,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "5475:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5475:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 685,
                  "id": 693,
                  "nodeType": "Return",
                  "src": "5468:46:1"
                }
              ]
            },
            "documentation": "@param _answers An array of answer ids\n @param _nonce A random number added to the answers array by the booth\n @return Keccak sha3 of the packed answers array and nonce",
            "id": 695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "name": "_answers",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "5382:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 677,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5382:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 678,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5382:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "5413:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5413:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5376:55:1"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "5453:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5453:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5452:9:1"
            },
            "scope": 1135,
            "src": "5360:159:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "5741:53:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 702,
                            "name": "votingBooths",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "5747:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                              "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                            }
                          },
                          "id": 704,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 703,
                            "name": "_booth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "5760:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5747:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                            "typeString": "struct Culturestake.VotingBooth storage ref"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonces",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 429,
                        "src": "5747:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 707,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "5775:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5747:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5785:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5747:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:42:1"
                }
              ]
            },
            "documentation": "@dev Destructive method that burns the nonce\n @param _booth The booth using the nonce (nonces are stored per booth)\n @param _nonce The nonce",
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "name": "_booth",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "5700:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5700:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 699,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "5716:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5716:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5699:32:1"
            },
            "returnParameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5741:0:1"
            },
            "scope": 1135,
            "src": "5680:114:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "6070:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "_booth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "6087:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 723,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "6095:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 721,
                      "name": "_burnNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "6076:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6076:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "6076:26:1"
                }
              ]
            },
            "documentation": "@dev Destructive method that burns the nonce - marked onlyQuestions to prevent griefing\n @param _booth The booth using the nonce (nonces are stored per booth)\n @param _nonce The nonce",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 719,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 718,
                  "name": "onlyQuestions",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 500,
                  "src": "6056:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6056:13:1"
              }
            ],
            "name": "burnNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "name": "_booth",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "6017:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6017:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 716,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "6033:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6033:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6016:32:1"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6070:0:1"
            },
            "scope": 1135,
            "src": "5998:109:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "6339:374:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 737,
                            "name": "festivals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "6396:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                            }
                          },
                          "id": 739,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 738,
                            "name": "_festival",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "6406:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6396:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Festival_$439_storage",
                            "typeString": "struct Culturestake.Festival storage ref"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 432,
                        "src": "6396:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466573746976616c206d75737420626520696e69746564",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6425:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                          "typeString": "literal_string \"Festival must be inited\""
                        },
                        "value": "Festival must be inited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                          "typeString": "literal_string \"Festival must be inited\""
                        }
                      ],
                      "id": 736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1942,
                      "src": "6388:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6388:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "6388:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6500:28:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 745,
                              "name": "votingBooths",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 411,
                              "src": "6501:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                                "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                              }
                            },
                            "id": 747,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 746,
                              "name": "_booth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "6514:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6501:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                              "typeString": "struct Culturestake.VotingBooth storage ref"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inited",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 421,
                          "src": "6501:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566f74696e6720626f6f7468732063616e206f6e6c7920626520696e69746564206f6e6365",
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6530:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a221fda91620cc96447377e61e367bd3b83f1e987d4ebd63ad48415eeb3daef",
                          "typeString": "literal_string \"Voting booths can only be inited once\""
                        },
                        "value": "Voting booths can only be inited once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a221fda91620cc96447377e61e367bd3b83f1e987d4ebd63ad48415eeb3daef",
                          "typeString": "literal_string \"Voting booths can only be inited once\""
                        }
                      ],
                      "id": 744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1942,
                      "src": "6492:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6492:78:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "6492:78:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 753,
                          "name": "votingBooths",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "6578:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                            "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                          }
                        },
                        "id": 755,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 754,
                          "name": "_booth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "6591:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6578:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                          "typeString": "struct Culturestake.VotingBooth storage ref"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 421,
                      "src": "6578:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6608:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6578:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "6578:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 760,
                          "name": "votingBooths",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "6620:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                            "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                          }
                        },
                        "id": 762,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 761,
                          "name": "_booth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "6633:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6620:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                          "typeString": "struct Culturestake.VotingBooth storage ref"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "festival",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "6620:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 764,
                      "name": "_festival",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "6652:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6620:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "6620:41:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 768,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "6690:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 769,
                        "name": "_booth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "6701:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 767,
                      "name": "InitVotingBooth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "6674:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6674:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 771,
                  "nodeType": "EmitStatement",
                  "src": "6669:39:1"
                }
              ]
            },
            "documentation": "@dev Registers a voting booth with this contract\n @param _festival The festival chain is\n @param _booth The booth address",
            "id": 773,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 734,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 733,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "6328:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6328:10:1"
              }
            ],
            "name": "initVotingBooth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "6279:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6279:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "name": "_booth",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "6302:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6302:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6273:47:1"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:0:1"
            },
            "scope": 1135,
            "src": "6249:464:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 791,
              "nodeType": "Block",
              "src": "6910:90:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 780,
                          "name": "votingBooths",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "6916:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                            "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                          }
                        },
                        "id": 782,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 781,
                          "name": "_booth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "6929:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6916:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                          "typeString": "struct Culturestake.VotingBooth storage ref"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deactivated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 423,
                      "src": "6916:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6951:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6916:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "6916:39:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 788,
                        "name": "_booth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "6988:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 787,
                      "name": "DeactivateVotingBooth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "6966:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6966:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 790,
                  "nodeType": "EmitStatement",
                  "src": "6961:34:1"
                }
              ]
            },
            "documentation": "@dev Destructive method, signatures from deactivated booths can not be used to vote\n @param _booth The booth address",
            "id": 792,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 778,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 777,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "6899:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6899:10:1"
              }
            ],
            "name": "deactivateVotingBooth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "name": "_booth",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "6876:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6876:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6875:16:1"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6910:0:1"
            },
            "scope": 1135,
            "src": "6845:155:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 817,
              "nodeType": "Block",
              "src": "7343:112:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 803,
                            "name": "votingBooths",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "7357:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                              "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                            }
                          },
                          "id": 805,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 804,
                            "name": "_booth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "7370:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7357:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                            "typeString": "struct Culturestake.VotingBooth storage ref"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 421,
                        "src": "7357:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 807,
                            "name": "votingBooths",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "7386:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                              "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                            }
                          },
                          "id": 809,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 808,
                            "name": "_booth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "7399:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7386:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                            "typeString": "struct Culturestake.VotingBooth storage ref"
                          }
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deactivated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 423,
                        "src": "7386:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 811,
                            "name": "votingBooths",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "7420:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                              "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                            }
                          },
                          "id": 813,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 812,
                            "name": "_booth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "7433:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7420:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                            "typeString": "struct Culturestake.VotingBooth storage ref"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "festival",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 425,
                        "src": "7420:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 815,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7356:94:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bool,bytes32)"
                    }
                  },
                  "functionReturnParameters": 802,
                  "id": 816,
                  "nodeType": "Return",
                  "src": "7349:101:1"
                }
              ]
            },
            "documentation": "@dev Getter for a voting booth struct\n @param _booth The booth address\n @return Bool for if the booth was initialized\n @return Bool for the if the booth was deactivated\n @return Chain id of the festival the booth was registered to",
            "id": 818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotingBooth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "name": "_booth",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "7285:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7285:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7284:16:1"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "7322:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7322:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "7328:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7328:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "7334:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7334:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7321:21:1"
            },
            "scope": 1135,
            "src": "7261:194:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "7733:56:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7747:36:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 827,
                                "name": "votingBooths",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "7748:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VotingBooth_$430_storage_$",
                                  "typeString": "mapping(address => struct Culturestake.VotingBooth storage ref)"
                                }
                              },
                              "id": 829,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 828,
                                "name": "_booth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 820,
                                "src": "7761:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7748:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VotingBooth_$430_storage",
                                "typeString": "struct Culturestake.VotingBooth storage ref"
                              }
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonces",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 429,
                            "src": "7748:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 832,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 831,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "7776:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7748:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 834,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7746:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 826,
                  "id": 835,
                  "nodeType": "Return",
                  "src": "7739:45:1"
                }
              ]
            },
            "documentation": "@dev Used by the server to validate vote data\n @param _booth The booth address\n @param _nonce The nonce\n @return True if the challenged booth has not used this nonce",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidVotingNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "name": "_booth",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "7674:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7674:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "7690:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7690:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7673:32:1"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "7727:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7727:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7726:6:1"
            },
            "scope": 1135,
            "src": "7646:143:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "8090:410:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8169:28:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 849,
                              "name": "festivals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "8170:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                                "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                              }
                            },
                            "id": 851,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 850,
                              "name": "_festival",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "8180:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8170:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Festival_$439_storage",
                              "typeString": "struct Culturestake.Festival storage ref"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inited",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 432,
                          "src": "8170:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466573746976616c206d75737420626520696e69746564",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8199:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                          "typeString": "literal_string \"Festival must be inited\""
                        },
                        "value": "Festival must be inited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                          "typeString": "literal_string \"Festival must be inited\""
                        }
                      ],
                      "id": 848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1942,
                      "src": "8161:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8161:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "8161:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 858,
                          "name": "_startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "8239:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 859,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "8253:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8253:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8239:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1941,
                      "src": "8231:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8231:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "8231:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 865,
                          "name": "_endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "8283:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 866,
                          "name": "_startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "8294:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8283:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1941,
                      "src": "8275:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8275:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "8275:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 870,
                          "name": "festivals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "8311:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                          }
                        },
                        "id": 872,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 871,
                          "name": "_festival",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "8321:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8311:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Festival_$439_storage",
                          "typeString": "struct Culturestake.Festival storage ref"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 432,
                      "src": "8311:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8341:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8311:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "8311:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 877,
                          "name": "festivals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "8351:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                          }
                        },
                        "id": 879,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 878,
                          "name": "_festival",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "8361:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8351:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Festival_$439_storage",
                          "typeString": "struct Culturestake.Festival storage ref"
                        }
                      },
                      "id": 880,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "8351:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 881,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "8384:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8351:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "8351:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 884,
                          "name": "festivals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "8400:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                          }
                        },
                        "id": 886,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "_festival",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "8410:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8400:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Festival_$439_storage",
                          "typeString": "struct Culturestake.Festival storage ref"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "8400:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 888,
                      "name": "_endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "8431:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8400:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "8400:39:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 892,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "8463:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 893,
                        "name": "_startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "8474:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "_endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "8486:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 891,
                      "name": "InitFestival",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "8450:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8450:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "EmitStatement",
                  "src": "8445:50:1"
                }
              ]
            },
            "documentation": "@dev Creates a festival\n @param _festival The chain id of the festival\n @param _startTime Timestamp for festival start\n @param _endTime Timestamp for festival end",
            "id": 898,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 846,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 845,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "8079:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8079:10:1"
              }
            ],
            "name": "initFestival",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "8004:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8004:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "8027:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8027:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "8051:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8051:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7998:73:1"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8090:0:1"
            },
            "scope": 1135,
            "src": "7977:523:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "8708:90:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 905,
                          "name": "festivals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "8714:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                          }
                        },
                        "id": 907,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 906,
                          "name": "_festival",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "8724:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8714:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Festival_$439_storage",
                          "typeString": "struct Culturestake.Festival storage ref"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deactivated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 434,
                      "src": "8714:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8749:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8714:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "8714:39:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 913,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "8783:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 912,
                      "name": "DeactivateFestival",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "8764:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8764:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "EmitStatement",
                  "src": "8759:34:1"
                }
              ]
            },
            "documentation": "@dev Destructive method, questions from deactivated festivals cannot be voted on\n @param _festival The chain id of the festival",
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 903,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 902,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "8697:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8697:10:1"
              }
            ],
            "name": "deactivateFestival",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "8671:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8671:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8670:19:1"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8708:0:1"
            },
            "scope": 1135,
            "src": "8643:155:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 948,
              "nodeType": "Block",
              "src": "9193:173:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 930,
                            "name": "festivals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "9214:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                            }
                          },
                          "id": 932,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 931,
                            "name": "_festival",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "9224:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9214:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Festival_$439_storage",
                            "typeString": "struct Culturestake.Festival storage ref"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 432,
                        "src": "9214:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 934,
                            "name": "festivals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "9249:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                            }
                          },
                          "id": 936,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 935,
                            "name": "_festival",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "9259:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9249:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Festival_$439_storage",
                            "typeString": "struct Culturestake.Festival storage ref"
                          }
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deactivated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 434,
                        "src": "9249:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 938,
                            "name": "festivals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "9289:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                            }
                          },
                          "id": 940,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 939,
                            "name": "_festival",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "9299:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9289:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Festival_$439_storage",
                            "typeString": "struct Culturestake.Festival storage ref"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 436,
                        "src": "9289:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 942,
                            "name": "festivals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "9327:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                            }
                          },
                          "id": 944,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 943,
                            "name": "_festival",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "9337:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9327:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Festival_$439_storage",
                            "typeString": "struct Culturestake.Festival storage ref"
                          }
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 438,
                        "src": "9327:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 946,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9206:155:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 929,
                  "id": 947,
                  "nodeType": "Return",
                  "src": "9199:162:1"
                }
              ]
            },
            "documentation": "@dev Getter for a festival struct\n @param _festival The chain id of the festival\n @return Bool for if the festival was initialized\n @return Bool for the if the festival was deactivated\n @return Timestamp for festival start time\n @return Timestamp for festival end time",
            "id": 949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFestival",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "9123:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9123:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9122:19:1"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "9163:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9163:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 924,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "9169:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9169:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 926,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "9175:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9175:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 928,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "9184:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9184:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9162:30:1"
            },
            "scope": 1135,
            "src": "9102:264:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 976,
              "nodeType": "Block",
              "src": "9595:160:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 956,
                          "name": "questions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "9601:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                          }
                        },
                        "id": 958,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 957,
                          "name": "_question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 951,
                          "src": "9611:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9601:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                          "typeString": "struct Culturestake.QuestionStruct storage ref"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deactivated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 443,
                      "src": "9601:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9636:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9601:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "9601:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 963,
                        "name": "questionsByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "9646:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 968,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 964,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "9665:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                            }
                          },
                          "id": 966,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 965,
                            "name": "_question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "9675:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9665:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                            "typeString": "struct Culturestake.QuestionStruct storage ref"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 445,
                        "src": "9665:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9646:56:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9705:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9646:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "9646:64:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 973,
                        "name": "_question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "9740:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 972,
                      "name": "DeactivateQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "9721:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9721:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "EmitStatement",
                  "src": "9716:34:1"
                }
              ]
            },
            "documentation": "@dev Destructive method, deactivated questions cannot be voted on and do not pass the onlyQuestions modifier\n @param _question The question chain id",
            "id": 977,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 954,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 953,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "9584:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9584:10:1"
              }
            ],
            "name": "deactivateQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "name": "_question",
                  "nodeType": "VariableDeclaration",
                  "scope": 977,
                  "src": "9558:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9558:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9557:19:1"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9595:0:1"
            },
            "scope": 1135,
            "src": "9530:225:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "10091:986:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 989,
                            "name": "festivals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "10105:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Festival_$439_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.Festival storage ref)"
                            }
                          },
                          "id": 991,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 990,
                            "name": "_festival",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "10115:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10105:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Festival_$439_storage",
                            "typeString": "struct Culturestake.Festival storage ref"
                          }
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 432,
                        "src": "10105:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466573746976616c206d75737420626520696e69746564",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10134:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                          "typeString": "literal_string \"Festival must be inited\""
                        },
                        "value": "Festival must be inited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                          "typeString": "literal_string \"Festival must be inited\""
                        }
                      ],
                      "id": 988,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1942,
                      "src": "10097:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10097:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "10097:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10239:28:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 997,
                              "name": "questions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "10240:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                                "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                              }
                            },
                            "id": 999,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 998,
                              "name": "_question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "10250:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10240:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                              "typeString": "struct Culturestake.QuestionStruct storage ref"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inited",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 441,
                          "src": "10240:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686973207175657374696f6e2063616e206f6e6c7920626520696e69746564206f6e6365",
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10269:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e24d8c64e9e566354061acf15ba86669fca2c372ccdd25a1533356a995db8bc3",
                          "typeString": "literal_string \"This question can only be inited once\""
                        },
                        "value": "This question can only be inited once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e24d8c64e9e566354061acf15ba86669fca2c372ccdd25a1533356a995db8bc3",
                          "typeString": "literal_string \"This question can only be inited once\""
                        }
                      ],
                      "id": 996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1941,
                        1942
                      ],
                      "referencedDeclaration": 1942,
                      "src": "10231:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10231:78:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "10231:78:1"
                },
                {
                  "assignments": [
                    1006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1006,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "10373:17:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1005,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10373:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1017,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30783266613937646537",
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10423:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_799636967_by_1",
                          "typeString": "int_const 799636967"
                        },
                        "value": "0x2fa97de7"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1011,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1964,
                            "src": "10443:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Culturestake_$1135",
                              "typeString": "contract Culturestake"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Culturestake_$1135",
                              "typeString": "contract Culturestake"
                            }
                          ],
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10435:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10435:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1013,
                        "name": "_question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "10450:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1014,
                        "name": "_maxVoteTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "10461:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1015,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "10477:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_799636967_by_1",
                          "typeString": "int_const 799636967"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1007,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "10393:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10393:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10393:99:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10373:119:1"
                },
                {
                  "assignments": [
                    1019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1019,
                      "name": "questionContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "10561:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proxy_$1227",
                        "typeString": "contract Proxy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1018,
                        "name": "Proxy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1227,
                        "src": "10561:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proxy_$1227",
                          "typeString": "contract Proxy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1023,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1021,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "10598:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1020,
                      "name": "createProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "10586:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_contract$_Proxy_$1227_$",
                        "typeString": "function (bytes memory) returns (contract Proxy)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10586:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proxy_$1227",
                      "typeString": "contract Proxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10561:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1024,
                        "name": "questionsByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "10699:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1028,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1026,
                            "name": "questionContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "10726:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proxy_$1227",
                              "typeString": "contract Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Proxy_$1227",
                              "typeString": "contract Proxy"
                            }
                          ],
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10718:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10718:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10699:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10747:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10699:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "10699:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1032,
                          "name": "questions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "10791:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                          }
                        },
                        "id": 1034,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1033,
                          "name": "_question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 979,
                          "src": "10801:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10791:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                          "typeString": "struct Culturestake.QuestionStruct storage ref"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "10791:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10821:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10791:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "10791:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1039,
                          "name": "questions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "10831:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                          }
                        },
                        "id": 1041,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "_question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 979,
                          "src": "10841:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10831:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                          "typeString": "struct Culturestake.QuestionStruct storage ref"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "festival",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 447,
                      "src": "10831:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1043,
                      "name": "_festival",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "10863:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10831:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "10831:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1046,
                          "name": "questions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "10878:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                          }
                        },
                        "id": 1048,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1047,
                          "name": "_question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 979,
                          "src": "10888:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10878:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                          "typeString": "struct Culturestake.QuestionStruct storage ref"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "contractAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 445,
                      "src": "10878:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1051,
                          "name": "questionContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1019,
                          "src": "10925:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proxy_$1227",
                            "typeString": "contract Proxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Proxy_$1227",
                            "typeString": "contract Proxy"
                          }
                        ],
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10917:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10917:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "10878:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "10878:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1055,
                          "name": "questions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "10948:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                            "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                          }
                        },
                        "id": 1057,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1056,
                          "name": "_question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 979,
                          "src": "10958:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10948:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                          "typeString": "struct Culturestake.QuestionStruct storage ref"
                        }
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxVoteTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 449,
                      "src": "10948:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1059,
                      "name": "_maxVoteTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "10985:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10948:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "10948:51:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "_question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "11024:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "11035:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1066,
                            "name": "questionContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "11054:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proxy_$1227",
                              "typeString": "contract Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Proxy_$1227",
                              "typeString": "contract Proxy"
                            }
                          ],
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11046:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11046:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1062,
                      "name": "InitQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "11011:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11011:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1069,
                  "nodeType": "EmitStatement",
                  "src": "11006:66:1"
                }
              ]
            },
            "documentation": "@dev Deploys a question contract\n @param _question The question chain id\n @param _maxVoteTokens The amount of vote tokens given to each voter per answer\n @param _festival The festival chain id",
            "id": 1071,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 986,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 985,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43,
                  "src": "10080:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10080:10:1"
              }
            ],
            "name": "initQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 979,
                  "name": "_question",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "10000:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "name": "_maxVoteTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "10023:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10023:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 983,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "10051:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10051:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9994:78:1"
            },
            "returnParameters": {
              "id": 987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10091:0:1"
            },
            "scope": 1135,
            "src": "9973:1104:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "11383:306:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1078,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "11391:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proxy_$1227",
                        "typeString": "contract Proxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1081,
                          "name": "questionMasterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "11409:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "11399:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Proxy_$1227_$",
                          "typeString": "function (address) returns (contract Proxy)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1079,
                          "name": "Proxy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1227,
                          "src": "11403:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proxy_$1227",
                            "typeString": "contract Proxy"
                          }
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11399:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proxy_$1227",
                        "typeString": "contract Proxy"
                      }
                    },
                    "src": "11391:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proxy_$1227",
                      "typeString": "contract Proxy"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "11391:37:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1085,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "11440:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11440:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11454:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11440:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1090,
                  "nodeType": "IfStatement",
                  "src": "11436:216:1",
                  "trueBody": {
                    "externalReferences": [
                      {
                        "data": {
                          "declaration": 1073,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "11607:4:1",
                          "valueSize": 1
                        }
                      },
                      {
                        "data": {
                          "declaration": 1073,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "11588:4:1",
                          "valueSize": 1
                        }
                      },
                      {
                        "proxy": {
                          "declaration": 1076,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "11574:5:1",
                          "valueSize": 1
                        }
                      }
                    ],
                    "id": 1089,
                    "nodeType": "InlineAssembly",
                    "operations": "{\n    if eq(call(gas(), proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) { revert(0, 0) }\n}",
                    "src": "11533:119:1"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1092,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "11678:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proxy_$1227",
                          "typeString": "contract Proxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Proxy_$1227",
                          "typeString": "contract Proxy"
                        }
                      ],
                      "id": 1091,
                      "name": "ProxyCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "11664:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Proxy_$1227_$returns$__$",
                        "typeString": "function (contract Proxy)"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11664:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "EmitStatement",
                  "src": "11659:25:1"
                }
              ]
            },
            "documentation": "@dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n @param data Payload for message call sent to new proxy contract.\n @return The created proxy",
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "11319:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11319:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11318:19:1"
            },
            "returnParameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1076,
                  "name": "proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "11368:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proxy_$1227",
                    "typeString": "contract Proxy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1075,
                    "name": "Proxy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1227,
                    "src": "11368:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proxy_$1227",
                      "typeString": "contract Proxy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11367:13:1"
            },
            "scope": 1135,
            "src": "11298:391:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1133,
              "nodeType": "Block",
              "src": "12168:222:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1111,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "12189:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                            }
                          },
                          "id": 1113,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1112,
                            "name": "_question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "12199:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12189:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                            "typeString": "struct Culturestake.QuestionStruct storage ref"
                          }
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 441,
                        "src": "12189:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1115,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "12224:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                            }
                          },
                          "id": 1117,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1116,
                            "name": "_question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "12234:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12224:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                            "typeString": "struct Culturestake.QuestionStruct storage ref"
                          }
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deactivated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 443,
                        "src": "12224:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1119,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "12264:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                            }
                          },
                          "id": 1121,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1120,
                            "name": "_question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "12274:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12264:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                            "typeString": "struct Culturestake.QuestionStruct storage ref"
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 445,
                        "src": "12264:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1123,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "12308:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                            }
                          },
                          "id": 1125,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1124,
                            "name": "_question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "12318:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12308:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                            "typeString": "struct Culturestake.QuestionStruct storage ref"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "festival",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 447,
                        "src": "12308:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1127,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "12345:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionStruct_$450_storage_$",
                              "typeString": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)"
                            }
                          },
                          "id": 1129,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1128,
                            "name": "_question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "12355:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12345:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionStruct_$450_storage",
                            "typeString": "struct Culturestake.QuestionStruct storage ref"
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxVoteTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 449,
                        "src": "12345:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1131,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12181:204:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_address_$_t_bytes32_$_t_uint256_$",
                      "typeString": "tuple(bool,bool,address,bytes32,uint256)"
                    }
                  },
                  "functionReturnParameters": 1110,
                  "id": 1132,
                  "nodeType": "Return",
                  "src": "12174:211:1"
                }
              ]
            },
            "documentation": "@dev Getter for a question struct\n @param _question The question chain is\n @return Bool for if the booth was initialized\n @return Bool for if the booth was deactivated\n @return The address of the question contract\n @return The festival chain id the question is associated with\n @return The maximum tokens given in this question per answer",
            "id": 1134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1098,
                  "name": "_question",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "12089:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12089:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12088:19:1"
            },
            "returnParameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "12129:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12129:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1103,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "12135:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12135:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "12141:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12141:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "12150:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12150:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "12159:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12159:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12128:39:1"
            },
            "scope": 1135,
            "src": "12068:322:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1136,
        "src": "322:12070:1"
      }
    ],
    "src": "0:12392:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol",
      "exportedSymbols": {
        "Culturestake": [
          1135
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 390,
        "name": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 1924,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 1136,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 391,
        "name": "ImportDirective",
        "src": "25:59:1"
      },
      {
        "attributes": {
          "SourceUnit": 389,
          "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Admin.sol",
          "file": "./Admin.sol",
          "scope": 1136,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 392,
        "name": "ImportDirective",
        "src": "86:21:1"
      },
      {
        "attributes": {
          "SourceUnit": 1611,
          "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Question.sol",
          "file": "./Question.sol",
          "scope": 1136,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 393,
        "name": "ImportDirective",
        "src": "108:24:1"
      },
      {
        "attributes": {
          "SourceUnit": 1228,
          "absolutePath": "/media/anon/data/Documents/culturestake/culturestake-contracts/contracts/Proxy.sol",
          "file": "./Proxy.sol",
          "scope": 1136,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 394,
        "name": "ImportDirective",
        "src": "133:21:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            388,
            1227
          ],
          "contractKind": "contract",
          "documentation": "@title Culturestake admin hub\n @author Sarah Friend @ana0\n @notice Deploys questions and manages festivals and voting booths within the culturestake system",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1135,
            388
          ],
          "name": "Culturestake",
          "scope": 1136
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Admin",
                  "referencedDeclaration": 388,
                  "type": "contract Admin"
                },
                "id": 395,
                "name": "UserDefinedTypeName",
                "src": "347:5:1"
              }
            ],
            "id": 396,
            "name": "InheritanceSpecifier",
            "src": "347:5:1"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 1923,
                  "type": "library SafeMath"
                },
                "id": 397,
                "name": "UserDefinedTypeName",
                "src": "363:8:1"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 398,
                "name": "ElementaryTypeName",
                "src": "376:7:1"
              }
            ],
            "id": 399,
            "name": "UsingForDirective",
            "src": "357:27:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "festivals",
              "scope": 1135,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct Culturestake.Festival)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct Culturestake.Festival)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 400,
                    "name": "ElementaryTypeName",
                    "src": "397:7:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Festival",
                      "referencedDeclaration": 439,
                      "type": "struct Culturestake.Festival"
                    },
                    "id": 401,
                    "name": "UserDefinedTypeName",
                    "src": "408:8:1"
                  }
                ],
                "id": 402,
                "name": "Mapping",
                "src": "388:29:1"
              }
            ],
            "id": 403,
            "name": "VariableDeclaration",
            "src": "388:39:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "questions",
              "scope": 1135,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct Culturestake.QuestionStruct)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct Culturestake.QuestionStruct)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 404,
                    "name": "ElementaryTypeName",
                    "src": "440:7:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "QuestionStruct",
                      "referencedDeclaration": 450,
                      "type": "struct Culturestake.QuestionStruct"
                    },
                    "id": 405,
                    "name": "UserDefinedTypeName",
                    "src": "451:14:1"
                  }
                ],
                "id": 406,
                "name": "Mapping",
                "src": "431:35:1"
              }
            ],
            "id": 407,
            "name": "VariableDeclaration",
            "src": "431:45:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "votingBooths",
              "scope": 1135,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Culturestake.VotingBooth)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Culturestake.VotingBooth)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 408,
                    "name": "ElementaryTypeName",
                    "src": "489:7:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "VotingBooth",
                      "referencedDeclaration": 430,
                      "type": "struct Culturestake.VotingBooth"
                    },
                    "id": 409,
                    "name": "UserDefinedTypeName",
                    "src": "500:11:1"
                  }
                ],
                "id": 410,
                "name": "Mapping",
                "src": "480:32:1"
              }
            ],
            "id": 411,
            "name": "VariableDeclaration",
            "src": "480:45:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "questionsByAddress",
              "scope": 1135,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 412,
                    "name": "ElementaryTypeName",
                    "src": "538:7:1"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 413,
                    "name": "ElementaryTypeName",
                    "src": "549:4:1"
                  }
                ],
                "id": 414,
                "name": "Mapping",
                "src": "529:25:1"
              }
            ],
            "id": 415,
            "name": "VariableDeclaration",
            "src": "529:51:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "questionMasterCopy",
              "scope": 1135,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 416,
                "name": "ElementaryTypeName",
                "src": "584:7:1"
              }
            ],
            "id": 417,
            "name": "VariableDeclaration",
            "src": "584:33:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "voteRelayer",
              "scope": 1135,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 418,
                "name": "ElementaryTypeName",
                "src": "621:7:1"
              }
            ],
            "id": 419,
            "name": "VariableDeclaration",
            "src": "621:26:1"
          },
          {
            "attributes": {
              "canonicalName": "Culturestake.VotingBooth",
              "name": "VotingBooth",
              "scope": 1135,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "inited",
                  "scope": 430,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 420,
                    "name": "ElementaryTypeName",
                    "src": "677:4:1"
                  }
                ],
                "id": 421,
                "name": "VariableDeclaration",
                "src": "677:11:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "deactivated",
                  "scope": 430,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 422,
                    "name": "ElementaryTypeName",
                    "src": "694:4:1"
                  }
                ],
                "id": 423,
                "name": "VariableDeclaration",
                "src": "694:16:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "festival",
                  "scope": 430,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 424,
                    "name": "ElementaryTypeName",
                    "src": "716:7:1"
                  }
                ],
                "id": 425,
                "name": "VariableDeclaration",
                "src": "716:16:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "nonces",
                  "scope": 430,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "mapping(uint256 => bool)",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "mapping(uint256 => bool)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 426,
                        "name": "ElementaryTypeName",
                        "src": "747:7:1"
                      },
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 427,
                        "name": "ElementaryTypeName",
                        "src": "758:4:1"
                      }
                    ],
                    "id": 428,
                    "name": "Mapping",
                    "src": "738:25:1"
                  }
                ],
                "id": 429,
                "name": "VariableDeclaration",
                "src": "738:32:1"
              }
            ],
            "id": 430,
            "name": "StructDefinition",
            "src": "652:123:1"
          },
          {
            "attributes": {
              "canonicalName": "Culturestake.Festival",
              "name": "Festival",
              "scope": 1135,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "inited",
                  "scope": 439,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 431,
                    "name": "ElementaryTypeName",
                    "src": "801:4:1"
                  }
                ],
                "id": 432,
                "name": "VariableDeclaration",
                "src": "801:11:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "deactivated",
                  "scope": 439,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 433,
                    "name": "ElementaryTypeName",
                    "src": "818:4:1"
                  }
                ],
                "id": 434,
                "name": "VariableDeclaration",
                "src": "818:16:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "startTime",
                  "scope": 439,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 435,
                    "name": "ElementaryTypeName",
                    "src": "840:7:1"
                  }
                ],
                "id": 436,
                "name": "VariableDeclaration",
                "src": "840:17:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "endTime",
                  "scope": 439,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 437,
                    "name": "ElementaryTypeName",
                    "src": "863:7:1"
                  }
                ],
                "id": 438,
                "name": "VariableDeclaration",
                "src": "863:15:1"
              }
            ],
            "id": 439,
            "name": "StructDefinition",
            "src": "779:104:1"
          },
          {
            "attributes": {
              "canonicalName": "Culturestake.QuestionStruct",
              "name": "QuestionStruct",
              "scope": 1135,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "inited",
                  "scope": 450,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 440,
                    "name": "ElementaryTypeName",
                    "src": "915:4:1"
                  }
                ],
                "id": 441,
                "name": "VariableDeclaration",
                "src": "915:11:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "deactivated",
                  "scope": 450,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 442,
                    "name": "ElementaryTypeName",
                    "src": "932:4:1"
                  }
                ],
                "id": 443,
                "name": "VariableDeclaration",
                "src": "932:16:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "contractAddress",
                  "scope": 450,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 444,
                    "name": "ElementaryTypeName",
                    "src": "954:7:1"
                  }
                ],
                "id": 445,
                "name": "VariableDeclaration",
                "src": "954:23:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "festival",
                  "scope": 450,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 446,
                    "name": "ElementaryTypeName",
                    "src": "983:7:1"
                  }
                ],
                "id": 447,
                "name": "VariableDeclaration",
                "src": "983:16:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "maxVoteTokens",
                  "scope": 450,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 448,
                    "name": "ElementaryTypeName",
                    "src": "1005:7:1"
                  }
                ],
                "id": 449,
                "name": "VariableDeclaration",
                "src": "1005:21:1"
              }
            ],
            "id": 450,
            "name": "StructDefinition",
            "src": "887:144:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "InitQuestion"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "question",
                      "scope": 458,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 451,
                        "name": "ElementaryTypeName",
                        "src": "1054:7:1"
                      }
                    ],
                    "id": 452,
                    "name": "VariableDeclaration",
                    "src": "1054:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "festival",
                      "scope": 458,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 453,
                        "name": "ElementaryTypeName",
                        "src": "1080:7:1"
                      }
                    ],
                    "id": 454,
                    "name": "VariableDeclaration",
                    "src": "1080:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "questionAddress",
                      "scope": 458,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 455,
                        "name": "ElementaryTypeName",
                        "src": "1106:7:1"
                      }
                    ],
                    "id": 456,
                    "name": "VariableDeclaration",
                    "src": "1106:31:1"
                  }
                ],
                "id": 457,
                "name": "ParameterList",
                "src": "1053:85:1"
              }
            ],
            "id": 458,
            "name": "EventDefinition",
            "src": "1035:104:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "InitFestival"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "festival",
                      "scope": 466,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 459,
                        "name": "ElementaryTypeName",
                        "src": "1161:7:1"
                      }
                    ],
                    "id": 460,
                    "name": "VariableDeclaration",
                    "src": "1161:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "startTime",
                      "scope": 466,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 461,
                        "name": "ElementaryTypeName",
                        "src": "1187:7:1"
                      }
                    ],
                    "id": 462,
                    "name": "VariableDeclaration",
                    "src": "1187:17:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "endTime",
                      "scope": 466,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 463,
                        "name": "ElementaryTypeName",
                        "src": "1206:7:1"
                      }
                    ],
                    "id": 464,
                    "name": "VariableDeclaration",
                    "src": "1206:15:1"
                  }
                ],
                "id": 465,
                "name": "ParameterList",
                "src": "1160:62:1"
              }
            ],
            "id": 466,
            "name": "EventDefinition",
            "src": "1142:81:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "InitVotingBooth"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "festival",
                      "scope": 472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 467,
                        "name": "ElementaryTypeName",
                        "src": "1248:7:1"
                      }
                    ],
                    "id": 468,
                    "name": "VariableDeclaration",
                    "src": "1248:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "boothAddress",
                      "scope": 472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 469,
                        "name": "ElementaryTypeName",
                        "src": "1274:7:1"
                      }
                    ],
                    "id": 470,
                    "name": "VariableDeclaration",
                    "src": "1274:28:1"
                  }
                ],
                "id": 471,
                "name": "ParameterList",
                "src": "1247:56:1"
              }
            ],
            "id": 472,
            "name": "EventDefinition",
            "src": "1226:78:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "DeactivateQuestion"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "question",
                      "scope": 476,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 473,
                        "name": "ElementaryTypeName",
                        "src": "1333:7:1"
                      }
                    ],
                    "id": 474,
                    "name": "VariableDeclaration",
                    "src": "1333:24:1"
                  }
                ],
                "id": 475,
                "name": "ParameterList",
                "src": "1332:26:1"
              }
            ],
            "id": 476,
            "name": "EventDefinition",
            "src": "1308:51:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "DeactivateFestival"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "festival",
                      "scope": 480,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 477,
                        "name": "ElementaryTypeName",
                        "src": "1387:7:1"
                      }
                    ],
                    "id": 478,
                    "name": "VariableDeclaration",
                    "src": "1387:24:1"
                  }
                ],
                "id": 479,
                "name": "ParameterList",
                "src": "1386:26:1"
              }
            ],
            "id": 480,
            "name": "EventDefinition",
            "src": "1362:51:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "DeactivateVotingBooth"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "boothAddress",
                      "scope": 484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 481,
                        "name": "ElementaryTypeName",
                        "src": "1444:7:1"
                      }
                    ],
                    "id": 482,
                    "name": "VariableDeclaration",
                    "src": "1444:28:1"
                  }
                ],
                "id": 483,
                "name": "ParameterList",
                "src": "1443:30:1"
              }
            ],
            "id": 484,
            "name": "EventDefinition",
            "src": "1416:58:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ProxyCreation"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "proxy",
                      "scope": 488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract Proxy",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proxy",
                          "referencedDeclaration": 1227,
                          "type": "contract Proxy"
                        },
                        "id": 485,
                        "name": "UserDefinedTypeName",
                        "src": "1498:5:1"
                      }
                    ],
                    "id": 486,
                    "name": "VariableDeclaration",
                    "src": "1498:11:1"
                  }
                ],
                "id": 487,
                "name": "ParameterList",
                "src": "1497:13:1"
              }
            ],
            "id": 488,
            "name": "EventDefinition",
            "src": "1478:33:1"
          },
          {
            "attributes": {
              "documentation": "@return True if the caller is a question contract deployed by this admin hub",
              "name": "onlyQuestions",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 489,
                "name": "ParameterList",
                "src": "1620:2:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_64528c6c5820592853337894472690f9dc34a3591c326063e7750f41e6ccb3fe",
                                  "typeString": "literal_string \"Method can only be called by questions\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1942,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 490,
                            "name": "Identifier",
                            "src": "1631:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 415,
                                  "type": "mapping(address => bool)",
                                  "value": "questionsByAddress"
                                },
                                "id": 491,
                                "name": "Identifier",
                                "src": "1639:18:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1938,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 492,
                                    "name": "Identifier",
                                    "src": "1658:3:1"
                                  }
                                ],
                                "id": 493,
                                "name": "MemberAccess",
                                "src": "1658:10:1"
                              }
                            ],
                            "id": 494,
                            "name": "IndexAccess",
                            "src": "1639:30:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d6574686f642063616e206f6e6c792062652063616c6c6564206279207175657374696f6e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Method can only be called by questions\"",
                              "value": "Method can only be called by questions"
                            },
                            "id": 495,
                            "name": "Literal",
                            "src": "1671:40:1"
                          }
                        ],
                        "id": 496,
                        "name": "FunctionCall",
                        "src": "1631:81:1"
                      }
                    ],
                    "id": 497,
                    "name": "ExpressionStatement",
                    "src": "1631:81:1"
                  },
                  {
                    "id": 498,
                    "name": "PlaceholderStatement",
                    "src": "1720:1:1"
                  }
                ],
                "id": 499,
                "name": "Block",
                "src": "1623:103:1"
              }
            ],
            "id": 500,
            "name": "ModifierDefinition",
            "src": "1598:128:1"
          },
          {
            "attributes": {
              "documentation": "@dev The owners array is used in the Admin contract this inherits from\n @param _owners An array of all addresses that have admin permissions over this contract\n @param _questionMasterCopy The address of the master copy that holds the logic for each question",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owners",
                      "scope": 516,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 501,
                            "name": "ElementaryTypeName",
                            "src": "2016:7:1"
                          }
                        ],
                        "id": 502,
                        "name": "ArrayTypeName",
                        "src": "2016:9:1"
                      }
                    ],
                    "id": 503,
                    "name": "VariableDeclaration",
                    "src": "2016:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_questionMasterCopy",
                      "scope": 516,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 504,
                        "name": "ElementaryTypeName",
                        "src": "2042:7:1"
                      }
                    ],
                    "id": 505,
                    "name": "VariableDeclaration",
                    "src": "2042:27:1"
                  }
                ],
                "id": 506,
                "name": "ParameterList",
                "src": "2015:55:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 510,
                "name": "ParameterList",
                "src": "2093:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 388,
                      "type": "type(contract Admin)",
                      "value": "Admin"
                    },
                    "id": 507,
                    "name": "Identifier",
                    "src": "2078:5:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 503,
                      "type": "address[] memory",
                      "value": "_owners"
                    },
                    "id": 508,
                    "name": "Identifier",
                    "src": "2084:7:1"
                  }
                ],
                "id": 509,
                "name": "ModifierInvocation",
                "src": "2078:14:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 417,
                              "type": "address",
                              "value": "questionMasterCopy"
                            },
                            "id": 511,
                            "name": "Identifier",
                            "src": "2099:18:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 505,
                              "type": "address",
                              "value": "_questionMasterCopy"
                            },
                            "id": 512,
                            "name": "Identifier",
                            "src": "2120:19:1"
                          }
                        ],
                        "id": 513,
                        "name": "Assignment",
                        "src": "2099:40:1"
                      }
                    ],
                    "id": 514,
                    "name": "ExpressionStatement",
                    "src": "2099:40:1"
                  }
                ],
                "id": 515,
                "name": "Block",
                "src": "2093:51:1"
              }
            ],
            "id": 516,
            "name": "FunctionDefinition",
            "src": "2004:140:1"
          },
          {
            "attributes": {
              "documentation": "@dev Provided the setup parameters of a question contract don't change, the logic on future questions can be updated\n @param _newQuestionMasterCopy The address of the master copy to use for new questions",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setQuestionMasterCopy",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_newQuestionMasterCopy",
                      "scope": 528,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 517,
                        "name": "ElementaryTypeName",
                        "src": "2394:7:1"
                      }
                    ],
                    "id": 518,
                    "name": "VariableDeclaration",
                    "src": "2394:30:1"
                  }
                ],
                "id": 519,
                "name": "ParameterList",
                "src": "2393:32:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 522,
                "name": "ParameterList",
                "src": "2444:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 520,
                    "name": "Identifier",
                    "src": "2433:10:1"
                  }
                ],
                "id": 521,
                "name": "ModifierInvocation",
                "src": "2433:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 417,
                              "type": "address",
                              "value": "questionMasterCopy"
                            },
                            "id": 523,
                            "name": "Identifier",
                            "src": "2450:18:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 518,
                              "type": "address",
                              "value": "_newQuestionMasterCopy"
                            },
                            "id": 524,
                            "name": "Identifier",
                            "src": "2471:22:1"
                          }
                        ],
                        "id": 525,
                        "name": "Assignment",
                        "src": "2450:43:1"
                      }
                    ],
                    "id": 526,
                    "name": "ExpressionStatement",
                    "src": "2450:43:1"
                  }
                ],
                "id": 527,
                "name": "Block",
                "src": "2444:54:1"
              }
            ],
            "id": 528,
            "name": "FunctionDefinition",
            "src": "2363:135:1"
          },
          {
            "attributes": {
              "documentation": "@dev The vote relayer is the server key that sends votes to question contracts. It should be cycled periodically and must be set before any votes can take place\n @param _newVoteRelayer The address of the new vote relayer",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setVoteRelayer",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_newVoteRelayer",
                      "scope": 540,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 529,
                        "name": "ElementaryTypeName",
                        "src": "2758:7:1"
                      }
                    ],
                    "id": 530,
                    "name": "VariableDeclaration",
                    "src": "2758:23:1"
                  }
                ],
                "id": 531,
                "name": "ParameterList",
                "src": "2757:25:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 534,
                "name": "ParameterList",
                "src": "2801:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 532,
                    "name": "Identifier",
                    "src": "2790:10:1"
                  }
                ],
                "id": 533,
                "name": "ModifierInvocation",
                "src": "2790:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 419,
                              "type": "address",
                              "value": "voteRelayer"
                            },
                            "id": 535,
                            "name": "Identifier",
                            "src": "2807:11:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 530,
                              "type": "address",
                              "value": "_newVoteRelayer"
                            },
                            "id": 536,
                            "name": "Identifier",
                            "src": "2821:15:1"
                          }
                        ],
                        "id": 537,
                        "name": "Assignment",
                        "src": "2807:29:1"
                      }
                    ],
                    "id": 538,
                    "name": "ExpressionStatement",
                    "src": "2807:29:1"
                  }
                ],
                "id": 539,
                "name": "Block",
                "src": "2801:40:1"
              }
            ],
            "id": 540,
            "name": "FunctionDefinition",
            "src": "2734:107:1"
          },
          {
            "attributes": {
              "documentation": "@dev Used by question contracts to validate the vote relayer\n @param _sender The address being challenged\n @return True if the address given is the current vote relayer",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isVoteRelayer",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_sender",
                      "scope": 552,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 541,
                        "name": "ElementaryTypeName",
                        "src": "3053:7:1"
                      }
                    ],
                    "id": 542,
                    "name": "VariableDeclaration",
                    "src": "3053:15:1"
                  }
                ],
                "id": 543,
                "name": "ParameterList",
                "src": "3052:17:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 552,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 544,
                        "name": "ElementaryTypeName",
                        "src": "3091:4:1"
                      }
                    ],
                    "id": 545,
                    "name": "VariableDeclaration",
                    "src": "3091:4:1"
                  }
                ],
                "id": 546,
                "name": "ParameterList",
                "src": "3090:6:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 546
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 542,
                              "type": "address",
                              "value": "_sender"
                            },
                            "id": 547,
                            "name": "Identifier",
                            "src": "3110:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 419,
                              "type": "address",
                              "value": "voteRelayer"
                            },
                            "id": 548,
                            "name": "Identifier",
                            "src": "3121:11:1"
                          }
                        ],
                        "id": 549,
                        "name": "BinaryOperation",
                        "src": "3110:22:1"
                      }
                    ],
                    "id": 550,
                    "name": "Return",
                    "src": "3103:29:1"
                  }
                ],
                "id": 551,
                "name": "Block",
                "src": "3097:40:1"
              }
            ],
            "id": 552,
            "name": "FunctionDefinition",
            "src": "3030:107:1"
          },
          {
            "attributes": {
              "documentation": "@dev Used by server to validate vote data\n @param _festival The festival chain id\n @return True if the festival is currently open for voting",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isActiveFestival",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_festival",
                      "scope": 597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 553,
                        "name": "ElementaryTypeName",
                        "src": "3324:7:1"
                      }
                    ],
                    "id": 554,
                    "name": "VariableDeclaration",
                    "src": "3324:17:1"
                  }
                ],
                "id": 555,
                "name": "ParameterList",
                "src": "3323:19:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 556,
                        "name": "ElementaryTypeName",
                        "src": "3364:4:1"
                      }
                    ],
                    "id": 557,
                    "name": "VariableDeclaration",
                    "src": "3364:4:1"
                  }
                ],
                "id": 558,
                "name": "ParameterList",
                "src": "3363:6:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inited",
                              "referencedDeclaration": 432,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 559,
                                    "name": "Identifier",
                                    "src": "3422:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 554,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 560,
                                    "name": "Identifier",
                                    "src": "3432:9:1"
                                  }
                                ],
                                "id": 561,
                                "name": "IndexAccess",
                                "src": "3422:20:1"
                              }
                            ],
                            "id": 562,
                            "name": "MemberAccess",
                            "src": "3422:27:1"
                          }
                        ],
                        "id": 563,
                        "name": "UnaryOperation",
                        "src": "3421:28:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 558
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 564,
                            "name": "Literal",
                            "src": "3458:5:1"
                          }
                        ],
                        "id": 565,
                        "name": "Return",
                        "src": "3451:12:1"
                      }
                    ],
                    "id": 566,
                    "name": "IfStatement",
                    "src": "3417:46:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "deactivated",
                          "referencedDeclaration": 434,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct Culturestake.Festival storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 403,
                                  "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                  "value": "festivals"
                                },
                                "id": 567,
                                "name": "Identifier",
                                "src": "3524:9:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 554,
                                  "type": "bytes32",
                                  "value": "_festival"
                                },
                                "id": 568,
                                "name": "Identifier",
                                "src": "3534:9:1"
                              }
                            ],
                            "id": 569,
                            "name": "IndexAccess",
                            "src": "3524:20:1"
                          }
                        ],
                        "id": 570,
                        "name": "MemberAccess",
                        "src": "3524:32:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 558
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 571,
                            "name": "Literal",
                            "src": "3565:5:1"
                          }
                        ],
                        "id": 572,
                        "name": "Return",
                        "src": "3558:12:1"
                      }
                    ],
                    "id": 573,
                    "name": "IfStatement",
                    "src": "3520:50:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "startTime",
                              "referencedDeclaration": 436,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 574,
                                    "name": "Identifier",
                                    "src": "3616:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 554,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 575,
                                    "name": "Identifier",
                                    "src": "3626:9:1"
                                  }
                                ],
                                "id": 576,
                                "name": "IndexAccess",
                                "src": "3616:20:1"
                              }
                            ],
                            "id": 577,
                            "name": "MemberAccess",
                            "src": "3616:30:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1928,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 578,
                                "name": "Identifier",
                                "src": "3649:5:1"
                              }
                            ],
                            "id": 579,
                            "name": "MemberAccess",
                            "src": "3649:15:1"
                          }
                        ],
                        "id": 580,
                        "name": "BinaryOperation",
                        "src": "3616:48:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 558
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 581,
                            "name": "Literal",
                            "src": "3673:5:1"
                          }
                        ],
                        "id": 582,
                        "name": "Return",
                        "src": "3666:12:1"
                      }
                    ],
                    "id": 583,
                    "name": "IfStatement",
                    "src": "3612:66:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "endTime",
                              "referencedDeclaration": 438,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 584,
                                    "name": "Identifier",
                                    "src": "3719:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 554,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 585,
                                    "name": "Identifier",
                                    "src": "3729:9:1"
                                  }
                                ],
                                "id": 586,
                                "name": "IndexAccess",
                                "src": "3719:20:1"
                              }
                            ],
                            "id": 587,
                            "name": "MemberAccess",
                            "src": "3719:28:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1928,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 588,
                                "name": "Identifier",
                                "src": "3750:5:1"
                              }
                            ],
                            "id": 589,
                            "name": "MemberAccess",
                            "src": "3750:15:1"
                          }
                        ],
                        "id": 590,
                        "name": "BinaryOperation",
                        "src": "3719:46:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 558
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 591,
                            "name": "Literal",
                            "src": "3774:5:1"
                          }
                        ],
                        "id": 592,
                        "name": "Return",
                        "src": "3767:12:1"
                      }
                    ],
                    "id": 593,
                    "name": "IfStatement",
                    "src": "3715:64:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 558
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 594,
                        "name": "Literal",
                        "src": "3792:4:1"
                      }
                    ],
                    "id": 595,
                    "name": "Return",
                    "src": "3785:11:1"
                  }
                ],
                "id": 596,
                "name": "Block",
                "src": "3370:431:1"
              }
            ],
            "id": 597,
            "name": "FunctionDefinition",
            "src": "3298:503:1"
          },
          {
            "attributes": {
              "documentation": "@dev Used by server to validate vote data - the booth signs the answers array and a nonce\n @param _festival The festival chain id\n @param _answers An array of answer ids\n @param _nonce A random number added to the answers array by the booth - prevents a booth signature from being used for more than one vote package\n @param sigV Booth signature data\n @param sigR Booth signature data\n @param sigS Booth signature data\n @return True if the signature provided is a signature of an active booth, signing the correct data, and active on the claimed festival",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "checkBoothSignature",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_festival",
                      "scope": 676,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 598,
                        "name": "ElementaryTypeName",
                        "src": "4435:7:1"
                      }
                    ],
                    "id": 599,
                    "name": "VariableDeclaration",
                    "src": "4435:17:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_answers",
                      "scope": 676,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes32[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "bytes32[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 600,
                            "name": "ElementaryTypeName",
                            "src": "4458:7:1"
                          }
                        ],
                        "id": 601,
                        "name": "ArrayTypeName",
                        "src": "4458:9:1"
                      }
                    ],
                    "id": 602,
                    "name": "VariableDeclaration",
                    "src": "4458:25:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nonce",
                      "scope": 676,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 603,
                        "name": "ElementaryTypeName",
                        "src": "4489:7:1"
                      }
                    ],
                    "id": 604,
                    "name": "VariableDeclaration",
                    "src": "4489:14:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sigV",
                      "scope": 676,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 605,
                        "name": "ElementaryTypeName",
                        "src": "4509:5:1"
                      }
                    ],
                    "id": 606,
                    "name": "VariableDeclaration",
                    "src": "4509:10:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sigR",
                      "scope": 676,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 607,
                        "name": "ElementaryTypeName",
                        "src": "4525:7:1"
                      }
                    ],
                    "id": 608,
                    "name": "VariableDeclaration",
                    "src": "4525:12:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sigS",
                      "scope": 676,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 609,
                        "name": "ElementaryTypeName",
                        "src": "4543:7:1"
                      }
                    ],
                    "id": 610,
                    "name": "VariableDeclaration",
                    "src": "4543:12:1"
                  }
                ],
                "id": 611,
                "name": "ParameterList",
                "src": "4429:130:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 676,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 612,
                        "name": "ElementaryTypeName",
                        "src": "4581:7:1"
                      }
                    ],
                    "id": 613,
                    "name": "VariableDeclaration",
                    "src": "4581:7:1"
                  }
                ],
                "id": 614,
                "name": "ParameterList",
                "src": "4580:9:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        616
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "h",
                          "scope": 675,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 615,
                            "name": "ElementaryTypeName",
                            "src": "4598:7:1"
                          }
                        ],
                        "id": 616,
                        "name": "VariableDeclaration",
                        "src": "4598:9:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 695,
                              "type": "function (bytes32[] memory,uint256) view returns (bytes32)",
                              "value": "getHash"
                            },
                            "id": 617,
                            "name": "Identifier",
                            "src": "4610:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 602,
                              "type": "bytes32[] memory",
                              "value": "_answers"
                            },
                            "id": 618,
                            "name": "Identifier",
                            "src": "4618:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 604,
                              "type": "uint256",
                              "value": "_nonce"
                            },
                            "id": 619,
                            "name": "Identifier",
                            "src": "4628:6:1"
                          }
                        ],
                        "id": 620,
                        "name": "FunctionCall",
                        "src": "4610:25:1"
                      }
                    ],
                    "id": 621,
                    "name": "VariableDeclarationStatement",
                    "src": "4598:37:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        623
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "addressFromSig",
                          "scope": 675,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 622,
                            "name": "ElementaryTypeName",
                            "src": "4643:7:1"
                          }
                        ],
                        "id": 623,
                        "name": "VariableDeclaration",
                        "src": "4643:22:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1930,
                              "type": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)",
                              "value": "ecrecover"
                            },
                            "id": 624,
                            "name": "Identifier",
                            "src": "4668:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 616,
                              "type": "bytes32",
                              "value": "h"
                            },
                            "id": 625,
                            "name": "Identifier",
                            "src": "4678:1:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 606,
                              "type": "uint8",
                              "value": "sigV"
                            },
                            "id": 626,
                            "name": "Identifier",
                            "src": "4681:4:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 608,
                              "type": "bytes32",
                              "value": "sigR"
                            },
                            "id": 627,
                            "name": "Identifier",
                            "src": "4687:4:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 610,
                              "type": "bytes32",
                              "value": "sigS"
                            },
                            "id": 628,
                            "name": "Identifier",
                            "src": "4693:4:1"
                          }
                        ],
                        "id": 629,
                        "name": "FunctionCall",
                        "src": "4668:30:1"
                      }
                    ],
                    "id": 630,
                    "name": "VariableDeclarationStatement",
                    "src": "4643:55:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inited",
                              "referencedDeclaration": 421,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.VotingBooth storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 411,
                                      "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                      "value": "votingBooths"
                                    },
                                    "id": 631,
                                    "name": "Identifier",
                                    "src": "4740:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 623,
                                      "type": "address",
                                      "value": "addressFromSig"
                                    },
                                    "id": 632,
                                    "name": "Identifier",
                                    "src": "4753:14:1"
                                  }
                                ],
                                "id": 633,
                                "name": "IndexAccess",
                                "src": "4740:28:1"
                              }
                            ],
                            "id": 634,
                            "name": "MemberAccess",
                            "src": "4740:35:1"
                          }
                        ],
                        "id": 635,
                        "name": "UnaryOperation",
                        "src": "4739:36:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 614
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 636,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4784:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 637,
                                "name": "Literal",
                                "src": "4792:1:1"
                              }
                            ],
                            "id": 638,
                            "name": "FunctionCall",
                            "src": "4784:10:1"
                          }
                        ],
                        "id": 639,
                        "name": "Return",
                        "src": "4777:17:1"
                      }
                    ],
                    "id": 640,
                    "name": "IfStatement",
                    "src": "4735:59:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "deactivated",
                          "referencedDeclaration": 423,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct Culturestake.VotingBooth storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 411,
                                  "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                  "value": "votingBooths"
                                },
                                "id": 641,
                                "name": "Identifier",
                                "src": "4845:12:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 623,
                                  "type": "address",
                                  "value": "addressFromSig"
                                },
                                "id": 642,
                                "name": "Identifier",
                                "src": "4858:14:1"
                              }
                            ],
                            "id": 643,
                            "name": "IndexAccess",
                            "src": "4845:28:1"
                          }
                        ],
                        "id": 644,
                        "name": "MemberAccess",
                        "src": "4845:40:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 614
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 645,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4894:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 646,
                                "name": "Literal",
                                "src": "4902:1:1"
                              }
                            ],
                            "id": 647,
                            "name": "FunctionCall",
                            "src": "4894:10:1"
                          }
                        ],
                        "id": 648,
                        "name": "Return",
                        "src": "4887:17:1"
                      }
                    ],
                    "id": 649,
                    "name": "IfStatement",
                    "src": "4841:63:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "festival",
                                      "referencedDeclaration": 425,
                                      "type": "bytes32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Culturestake.VotingBooth storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 411,
                                              "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                              "value": "votingBooths"
                                            },
                                            "id": 650,
                                            "name": "Identifier",
                                            "src": "4959:12:1"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 623,
                                              "type": "address",
                                              "value": "addressFromSig"
                                            },
                                            "id": 651,
                                            "name": "Identifier",
                                            "src": "4972:14:1"
                                          }
                                        ],
                                        "id": 652,
                                        "name": "IndexAccess",
                                        "src": "4959:28:1"
                                      }
                                    ],
                                    "id": 653,
                                    "name": "MemberAccess",
                                    "src": "4959:37:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 599,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 654,
                                    "name": "Identifier",
                                    "src": "5000:9:1"
                                  }
                                ],
                                "id": 655,
                                "name": "BinaryOperation",
                                "src": "4959:50:1"
                              }
                            ],
                            "id": 656,
                            "name": "TupleExpression",
                            "src": "4958:52:1"
                          }
                        ],
                        "id": 657,
                        "name": "UnaryOperation",
                        "src": "4957:53:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 614
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 658,
                                "name": "ElementaryTypeNameExpression",
                                "src": "5019:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 659,
                                "name": "Literal",
                                "src": "5027:1:1"
                              }
                            ],
                            "id": 660,
                            "name": "FunctionCall",
                            "src": "5019:10:1"
                          }
                        ],
                        "id": 661,
                        "name": "Return",
                        "src": "5012:17:1"
                      }
                    ],
                    "id": 662,
                    "name": "IfStatement",
                    "src": "4953:76:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 837,
                                  "type": "function (address,uint256) view returns (bool)",
                                  "value": "isValidVotingNonce"
                                },
                                "id": 663,
                                "name": "Identifier",
                                "src": "5076:18:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 623,
                                  "type": "address",
                                  "value": "addressFromSig"
                                },
                                "id": 664,
                                "name": "Identifier",
                                "src": "5095:14:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 604,
                                  "type": "uint256",
                                  "value": "_nonce"
                                },
                                "id": 665,
                                "name": "Identifier",
                                "src": "5111:6:1"
                              }
                            ],
                            "id": 666,
                            "name": "FunctionCall",
                            "src": "5076:42:1"
                          }
                        ],
                        "id": 667,
                        "name": "UnaryOperation",
                        "src": "5075:43:1"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 614
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 668,
                                "name": "ElementaryTypeNameExpression",
                                "src": "5127:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 669,
                                "name": "Literal",
                                "src": "5135:1:1"
                              }
                            ],
                            "id": 670,
                            "name": "FunctionCall",
                            "src": "5127:10:1"
                          }
                        ],
                        "id": 671,
                        "name": "Return",
                        "src": "5120:17:1"
                      }
                    ],
                    "id": 672,
                    "name": "IfStatement",
                    "src": "5071:66:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 614
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 623,
                          "type": "address",
                          "value": "addressFromSig"
                        },
                        "id": 673,
                        "name": "Identifier",
                        "src": "5152:14:1"
                      }
                    ],
                    "id": 674,
                    "name": "Return",
                    "src": "5145:21:1"
                  }
                ],
                "id": 675,
                "name": "Block",
                "src": "4590:581:1"
              }
            ],
            "id": 676,
            "name": "FunctionDefinition",
            "src": "4401:770:1"
          },
          {
            "attributes": {
              "documentation": "@param _answers An array of answer ids\n @param _nonce A random number added to the answers array by the booth\n @return Keccak sha3 of the packed answers array and nonce",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getHash",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_answers",
                      "scope": 695,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes32[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "bytes32[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 677,
                            "name": "ElementaryTypeName",
                            "src": "5382:7:1"
                          }
                        ],
                        "id": 678,
                        "name": "ArrayTypeName",
                        "src": "5382:9:1"
                      }
                    ],
                    "id": 679,
                    "name": "VariableDeclaration",
                    "src": "5382:25:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nonce",
                      "scope": 695,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 680,
                        "name": "ElementaryTypeName",
                        "src": "5413:7:1"
                      }
                    ],
                    "id": 681,
                    "name": "VariableDeclaration",
                    "src": "5413:14:1"
                  }
                ],
                "id": 682,
                "name": "ParameterList",
                "src": "5376:55:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 695,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 683,
                        "name": "ElementaryTypeName",
                        "src": "5453:7:1"
                      }
                    ],
                    "id": 684,
                    "name": "VariableDeclaration",
                    "src": "5453:7:1"
                  }
                ],
                "id": 685,
                "name": "ParameterList",
                "src": "5452:9:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 685
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1932,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 686,
                            "name": "Identifier",
                            "src": "5475:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encode",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1925,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 687,
                                    "name": "Identifier",
                                    "src": "5485:3:1"
                                  }
                                ],
                                "id": 688,
                                "name": "MemberAccess",
                                "src": "5485:10:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 679,
                                  "type": "bytes32[] memory",
                                  "value": "_answers"
                                },
                                "id": 689,
                                "name": "Identifier",
                                "src": "5496:8:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 681,
                                  "type": "uint256",
                                  "value": "_nonce"
                                },
                                "id": 690,
                                "name": "Identifier",
                                "src": "5506:6:1"
                              }
                            ],
                            "id": 691,
                            "name": "FunctionCall",
                            "src": "5485:28:1"
                          }
                        ],
                        "id": 692,
                        "name": "FunctionCall",
                        "src": "5475:39:1"
                      }
                    ],
                    "id": 693,
                    "name": "Return",
                    "src": "5468:46:1"
                  }
                ],
                "id": 694,
                "name": "Block",
                "src": "5462:57:1"
              }
            ],
            "id": 695,
            "name": "FunctionDefinition",
            "src": "5360:159:1"
          },
          {
            "attributes": {
              "documentation": "@dev Destructive method that burns the nonce\n @param _booth The booth using the nonce (nonces are stored per booth)\n @param _nonce The nonce",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_burnNonce",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_booth",
                      "scope": 712,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 696,
                        "name": "ElementaryTypeName",
                        "src": "5700:7:1"
                      }
                    ],
                    "id": 697,
                    "name": "VariableDeclaration",
                    "src": "5700:14:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nonce",
                      "scope": 712,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 698,
                        "name": "ElementaryTypeName",
                        "src": "5716:7:1"
                      }
                    ],
                    "id": 699,
                    "name": "VariableDeclaration",
                    "src": "5716:14:1"
                  }
                ],
                "id": 700,
                "name": "ParameterList",
                "src": "5699:32:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 701,
                "name": "ParameterList",
                "src": "5741:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "nonces",
                                  "referencedDeclaration": 429,
                                  "type": "mapping(uint256 => bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Culturestake.VotingBooth storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 411,
                                          "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                          "value": "votingBooths"
                                        },
                                        "id": 702,
                                        "name": "Identifier",
                                        "src": "5747:12:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 697,
                                          "type": "address",
                                          "value": "_booth"
                                        },
                                        "id": 703,
                                        "name": "Identifier",
                                        "src": "5760:6:1"
                                      }
                                    ],
                                    "id": 704,
                                    "name": "IndexAccess",
                                    "src": "5747:20:1"
                                  }
                                ],
                                "id": 705,
                                "name": "MemberAccess",
                                "src": "5747:27:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 699,
                                  "type": "uint256",
                                  "value": "_nonce"
                                },
                                "id": 706,
                                "name": "Identifier",
                                "src": "5775:6:1"
                              }
                            ],
                            "id": 707,
                            "name": "IndexAccess",
                            "src": "5747:35:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 708,
                            "name": "Literal",
                            "src": "5785:4:1"
                          }
                        ],
                        "id": 709,
                        "name": "Assignment",
                        "src": "5747:42:1"
                      }
                    ],
                    "id": 710,
                    "name": "ExpressionStatement",
                    "src": "5747:42:1"
                  }
                ],
                "id": 711,
                "name": "Block",
                "src": "5741:53:1"
              }
            ],
            "id": 712,
            "name": "FunctionDefinition",
            "src": "5680:114:1"
          },
          {
            "attributes": {
              "documentation": "@dev Destructive method that burns the nonce - marked onlyQuestions to prevent griefing\n @param _booth The booth using the nonce (nonces are stored per booth)\n @param _nonce The nonce",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "burnNonce",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_booth",
                      "scope": 727,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 713,
                        "name": "ElementaryTypeName",
                        "src": "6017:7:1"
                      }
                    ],
                    "id": 714,
                    "name": "VariableDeclaration",
                    "src": "6017:14:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nonce",
                      "scope": 727,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 715,
                        "name": "ElementaryTypeName",
                        "src": "6033:7:1"
                      }
                    ],
                    "id": 716,
                    "name": "VariableDeclaration",
                    "src": "6033:14:1"
                  }
                ],
                "id": 717,
                "name": "ParameterList",
                "src": "6016:32:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 720,
                "name": "ParameterList",
                "src": "6070:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 500,
                      "type": "modifier ()",
                      "value": "onlyQuestions"
                    },
                    "id": 718,
                    "name": "Identifier",
                    "src": "6056:13:1"
                  }
                ],
                "id": 719,
                "name": "ModifierInvocation",
                "src": "6056:13:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 712,
                              "type": "function (address,uint256)",
                              "value": "_burnNonce"
                            },
                            "id": 721,
                            "name": "Identifier",
                            "src": "6076:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 714,
                              "type": "address",
                              "value": "_booth"
                            },
                            "id": 722,
                            "name": "Identifier",
                            "src": "6087:6:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 716,
                              "type": "uint256",
                              "value": "_nonce"
                            },
                            "id": 723,
                            "name": "Identifier",
                            "src": "6095:6:1"
                          }
                        ],
                        "id": 724,
                        "name": "FunctionCall",
                        "src": "6076:26:1"
                      }
                    ],
                    "id": 725,
                    "name": "ExpressionStatement",
                    "src": "6076:26:1"
                  }
                ],
                "id": 726,
                "name": "Block",
                "src": "6070:37:1"
              }
            ],
            "id": 727,
            "name": "FunctionDefinition",
            "src": "5998:109:1"
          },
          {
            "attributes": {
              "documentation": "@dev Registers a voting booth with this contract\n @param _festival The festival chain is\n @param _booth The booth address",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initVotingBooth",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_festival",
                      "scope": 773,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 728,
                        "name": "ElementaryTypeName",
                        "src": "6279:7:1"
                      }
                    ],
                    "id": 729,
                    "name": "VariableDeclaration",
                    "src": "6279:17:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_booth",
                      "scope": 773,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 730,
                        "name": "ElementaryTypeName",
                        "src": "6302:7:1"
                      }
                    ],
                    "id": 731,
                    "name": "VariableDeclaration",
                    "src": "6302:14:1"
                  }
                ],
                "id": 732,
                "name": "ParameterList",
                "src": "6273:47:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 735,
                "name": "ParameterList",
                "src": "6339:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 733,
                    "name": "Identifier",
                    "src": "6328:10:1"
                  }
                ],
                "id": 734,
                "name": "ModifierInvocation",
                "src": "6328:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                                  "typeString": "literal_string \"Festival must be inited\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1942,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 736,
                            "name": "Identifier",
                            "src": "6388:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inited",
                              "referencedDeclaration": 432,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 737,
                                    "name": "Identifier",
                                    "src": "6396:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 729,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 738,
                                    "name": "Identifier",
                                    "src": "6406:9:1"
                                  }
                                ],
                                "id": 739,
                                "name": "IndexAccess",
                                "src": "6396:20:1"
                              }
                            ],
                            "id": 740,
                            "name": "MemberAccess",
                            "src": "6396:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "466573746976616c206d75737420626520696e69746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Festival must be inited\"",
                              "value": "Festival must be inited"
                            },
                            "id": 741,
                            "name": "Literal",
                            "src": "6425:25:1"
                          }
                        ],
                        "id": 742,
                        "name": "FunctionCall",
                        "src": "6388:63:1"
                      }
                    ],
                    "id": 743,
                    "name": "ExpressionStatement",
                    "src": "6388:63:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0a221fda91620cc96447377e61e367bd3b83f1e987d4ebd63ad48415eeb3daef",
                                  "typeString": "literal_string \"Voting booths can only be inited once\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1942,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 744,
                            "name": "Identifier",
                            "src": "6492:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "inited",
                                  "referencedDeclaration": 421,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Culturestake.VotingBooth storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 411,
                                          "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                          "value": "votingBooths"
                                        },
                                        "id": 745,
                                        "name": "Identifier",
                                        "src": "6501:12:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 731,
                                          "type": "address",
                                          "value": "_booth"
                                        },
                                        "id": 746,
                                        "name": "Identifier",
                                        "src": "6514:6:1"
                                      }
                                    ],
                                    "id": 747,
                                    "name": "IndexAccess",
                                    "src": "6501:20:1"
                                  }
                                ],
                                "id": 748,
                                "name": "MemberAccess",
                                "src": "6501:27:1"
                              }
                            ],
                            "id": 749,
                            "name": "UnaryOperation",
                            "src": "6500:28:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "566f74696e6720626f6f7468732063616e206f6e6c7920626520696e69746564206f6e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Voting booths can only be inited once\"",
                              "value": "Voting booths can only be inited once"
                            },
                            "id": 750,
                            "name": "Literal",
                            "src": "6530:39:1"
                          }
                        ],
                        "id": 751,
                        "name": "FunctionCall",
                        "src": "6492:78:1"
                      }
                    ],
                    "id": 752,
                    "name": "ExpressionStatement",
                    "src": "6492:78:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "inited",
                              "referencedDeclaration": 421,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.VotingBooth storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 411,
                                      "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                      "value": "votingBooths"
                                    },
                                    "id": 753,
                                    "name": "Identifier",
                                    "src": "6578:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 731,
                                      "type": "address",
                                      "value": "_booth"
                                    },
                                    "id": 754,
                                    "name": "Identifier",
                                    "src": "6591:6:1"
                                  }
                                ],
                                "id": 755,
                                "name": "IndexAccess",
                                "src": "6578:20:1"
                              }
                            ],
                            "id": 756,
                            "name": "MemberAccess",
                            "src": "6578:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 757,
                            "name": "Literal",
                            "src": "6608:4:1"
                          }
                        ],
                        "id": 758,
                        "name": "Assignment",
                        "src": "6578:34:1"
                      }
                    ],
                    "id": 759,
                    "name": "ExpressionStatement",
                    "src": "6578:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "festival",
                              "referencedDeclaration": 425,
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.VotingBooth storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 411,
                                      "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                      "value": "votingBooths"
                                    },
                                    "id": 760,
                                    "name": "Identifier",
                                    "src": "6620:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 731,
                                      "type": "address",
                                      "value": "_booth"
                                    },
                                    "id": 761,
                                    "name": "Identifier",
                                    "src": "6633:6:1"
                                  }
                                ],
                                "id": 762,
                                "name": "IndexAccess",
                                "src": "6620:20:1"
                              }
                            ],
                            "id": 763,
                            "name": "MemberAccess",
                            "src": "6620:29:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 729,
                              "type": "bytes32",
                              "value": "_festival"
                            },
                            "id": 764,
                            "name": "Identifier",
                            "src": "6652:9:1"
                          }
                        ],
                        "id": 765,
                        "name": "Assignment",
                        "src": "6620:41:1"
                      }
                    ],
                    "id": 766,
                    "name": "ExpressionStatement",
                    "src": "6620:41:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 472,
                              "type": "function (bytes32,address)",
                              "value": "InitVotingBooth"
                            },
                            "id": 767,
                            "name": "Identifier",
                            "src": "6674:15:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 729,
                              "type": "bytes32",
                              "value": "_festival"
                            },
                            "id": 768,
                            "name": "Identifier",
                            "src": "6690:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 731,
                              "type": "address",
                              "value": "_booth"
                            },
                            "id": 769,
                            "name": "Identifier",
                            "src": "6701:6:1"
                          }
                        ],
                        "id": 770,
                        "name": "FunctionCall",
                        "src": "6674:34:1"
                      }
                    ],
                    "id": 771,
                    "name": "EmitStatement",
                    "src": "6669:39:1"
                  }
                ],
                "id": 772,
                "name": "Block",
                "src": "6339:374:1"
              }
            ],
            "id": 773,
            "name": "FunctionDefinition",
            "src": "6249:464:1"
          },
          {
            "attributes": {
              "documentation": "@dev Destructive method, signatures from deactivated booths can not be used to vote\n @param _booth The booth address",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "deactivateVotingBooth",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_booth",
                      "scope": 792,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 774,
                        "name": "ElementaryTypeName",
                        "src": "6876:7:1"
                      }
                    ],
                    "id": 775,
                    "name": "VariableDeclaration",
                    "src": "6876:14:1"
                  }
                ],
                "id": 776,
                "name": "ParameterList",
                "src": "6875:16:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 779,
                "name": "ParameterList",
                "src": "6910:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 777,
                    "name": "Identifier",
                    "src": "6899:10:1"
                  }
                ],
                "id": 778,
                "name": "ModifierInvocation",
                "src": "6899:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "deactivated",
                              "referencedDeclaration": 423,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.VotingBooth storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 411,
                                      "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                      "value": "votingBooths"
                                    },
                                    "id": 780,
                                    "name": "Identifier",
                                    "src": "6916:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 775,
                                      "type": "address",
                                      "value": "_booth"
                                    },
                                    "id": 781,
                                    "name": "Identifier",
                                    "src": "6929:6:1"
                                  }
                                ],
                                "id": 782,
                                "name": "IndexAccess",
                                "src": "6916:20:1"
                              }
                            ],
                            "id": 783,
                            "name": "MemberAccess",
                            "src": "6916:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 784,
                            "name": "Literal",
                            "src": "6951:4:1"
                          }
                        ],
                        "id": 785,
                        "name": "Assignment",
                        "src": "6916:39:1"
                      }
                    ],
                    "id": 786,
                    "name": "ExpressionStatement",
                    "src": "6916:39:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 484,
                              "type": "function (address)",
                              "value": "DeactivateVotingBooth"
                            },
                            "id": 787,
                            "name": "Identifier",
                            "src": "6966:21:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 775,
                              "type": "address",
                              "value": "_booth"
                            },
                            "id": 788,
                            "name": "Identifier",
                            "src": "6988:6:1"
                          }
                        ],
                        "id": 789,
                        "name": "FunctionCall",
                        "src": "6966:29:1"
                      }
                    ],
                    "id": 790,
                    "name": "EmitStatement",
                    "src": "6961:34:1"
                  }
                ],
                "id": 791,
                "name": "Block",
                "src": "6910:90:1"
              }
            ],
            "id": 792,
            "name": "FunctionDefinition",
            "src": "6845:155:1"
          },
          {
            "attributes": {
              "documentation": "@dev Getter for a voting booth struct\n @param _booth The booth address\n @return Bool for if the booth was initialized\n @return Bool for the if the booth was deactivated\n @return Chain id of the festival the booth was registered to",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVotingBooth",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_booth",
                      "scope": 818,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 793,
                        "name": "ElementaryTypeName",
                        "src": "7285:7:1"
                      }
                    ],
                    "id": 794,
                    "name": "VariableDeclaration",
                    "src": "7285:14:1"
                  }
                ],
                "id": 795,
                "name": "ParameterList",
                "src": "7284:16:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 818,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 796,
                        "name": "ElementaryTypeName",
                        "src": "7322:4:1"
                      }
                    ],
                    "id": 797,
                    "name": "VariableDeclaration",
                    "src": "7322:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 818,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 798,
                        "name": "ElementaryTypeName",
                        "src": "7328:4:1"
                      }
                    ],
                    "id": 799,
                    "name": "VariableDeclaration",
                    "src": "7328:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 818,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 800,
                        "name": "ElementaryTypeName",
                        "src": "7334:7:1"
                      }
                    ],
                    "id": 801,
                    "name": "VariableDeclaration",
                    "src": "7334:7:1"
                  }
                ],
                "id": 802,
                "name": "ParameterList",
                "src": "7321:21:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 802
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(bool,bool,bytes32)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inited",
                              "referencedDeclaration": 421,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.VotingBooth storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 411,
                                      "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                      "value": "votingBooths"
                                    },
                                    "id": 803,
                                    "name": "Identifier",
                                    "src": "7357:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 794,
                                      "type": "address",
                                      "value": "_booth"
                                    },
                                    "id": 804,
                                    "name": "Identifier",
                                    "src": "7370:6:1"
                                  }
                                ],
                                "id": 805,
                                "name": "IndexAccess",
                                "src": "7357:20:1"
                              }
                            ],
                            "id": 806,
                            "name": "MemberAccess",
                            "src": "7357:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "deactivated",
                              "referencedDeclaration": 423,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.VotingBooth storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 411,
                                      "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                      "value": "votingBooths"
                                    },
                                    "id": 807,
                                    "name": "Identifier",
                                    "src": "7386:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 794,
                                      "type": "address",
                                      "value": "_booth"
                                    },
                                    "id": 808,
                                    "name": "Identifier",
                                    "src": "7399:6:1"
                                  }
                                ],
                                "id": 809,
                                "name": "IndexAccess",
                                "src": "7386:20:1"
                              }
                            ],
                            "id": 810,
                            "name": "MemberAccess",
                            "src": "7386:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "festival",
                              "referencedDeclaration": 425,
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.VotingBooth storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 411,
                                      "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                      "value": "votingBooths"
                                    },
                                    "id": 811,
                                    "name": "Identifier",
                                    "src": "7420:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 794,
                                      "type": "address",
                                      "value": "_booth"
                                    },
                                    "id": 812,
                                    "name": "Identifier",
                                    "src": "7433:6:1"
                                  }
                                ],
                                "id": 813,
                                "name": "IndexAccess",
                                "src": "7420:20:1"
                              }
                            ],
                            "id": 814,
                            "name": "MemberAccess",
                            "src": "7420:29:1"
                          }
                        ],
                        "id": 815,
                        "name": "TupleExpression",
                        "src": "7356:94:1"
                      }
                    ],
                    "id": 816,
                    "name": "Return",
                    "src": "7349:101:1"
                  }
                ],
                "id": 817,
                "name": "Block",
                "src": "7343:112:1"
              }
            ],
            "id": 818,
            "name": "FunctionDefinition",
            "src": "7261:194:1"
          },
          {
            "attributes": {
              "documentation": "@dev Used by the server to validate vote data\n @param _booth The booth address\n @param _nonce The nonce\n @return True if the challenged booth has not used this nonce",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isValidVotingNonce",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_booth",
                      "scope": 837,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 819,
                        "name": "ElementaryTypeName",
                        "src": "7674:7:1"
                      }
                    ],
                    "id": 820,
                    "name": "VariableDeclaration",
                    "src": "7674:14:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nonce",
                      "scope": 837,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 821,
                        "name": "ElementaryTypeName",
                        "src": "7690:7:1"
                      }
                    ],
                    "id": 822,
                    "name": "VariableDeclaration",
                    "src": "7690:14:1"
                  }
                ],
                "id": 823,
                "name": "ParameterList",
                "src": "7673:32:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 837,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 824,
                        "name": "ElementaryTypeName",
                        "src": "7727:4:1"
                      }
                    ],
                    "id": 825,
                    "name": "VariableDeclaration",
                    "src": "7727:4:1"
                  }
                ],
                "id": 826,
                "name": "ParameterList",
                "src": "7726:6:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 826
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "nonces",
                                      "referencedDeclaration": 429,
                                      "type": "mapping(uint256 => bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Culturestake.VotingBooth storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 411,
                                              "type": "mapping(address => struct Culturestake.VotingBooth storage ref)",
                                              "value": "votingBooths"
                                            },
                                            "id": 827,
                                            "name": "Identifier",
                                            "src": "7748:12:1"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 820,
                                              "type": "address",
                                              "value": "_booth"
                                            },
                                            "id": 828,
                                            "name": "Identifier",
                                            "src": "7761:6:1"
                                          }
                                        ],
                                        "id": 829,
                                        "name": "IndexAccess",
                                        "src": "7748:20:1"
                                      }
                                    ],
                                    "id": 830,
                                    "name": "MemberAccess",
                                    "src": "7748:27:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 822,
                                      "type": "uint256",
                                      "value": "_nonce"
                                    },
                                    "id": 831,
                                    "name": "Identifier",
                                    "src": "7776:6:1"
                                  }
                                ],
                                "id": 832,
                                "name": "IndexAccess",
                                "src": "7748:35:1"
                              }
                            ],
                            "id": 833,
                            "name": "UnaryOperation",
                            "src": "7747:36:1"
                          }
                        ],
                        "id": 834,
                        "name": "TupleExpression",
                        "src": "7746:38:1"
                      }
                    ],
                    "id": 835,
                    "name": "Return",
                    "src": "7739:45:1"
                  }
                ],
                "id": 836,
                "name": "Block",
                "src": "7733:56:1"
              }
            ],
            "id": 837,
            "name": "FunctionDefinition",
            "src": "7646:143:1"
          },
          {
            "attributes": {
              "documentation": "@dev Creates a festival\n @param _festival The chain id of the festival\n @param _startTime Timestamp for festival start\n @param _endTime Timestamp for festival end",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initFestival",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_festival",
                      "scope": 898,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 838,
                        "name": "ElementaryTypeName",
                        "src": "8004:7:1"
                      }
                    ],
                    "id": 839,
                    "name": "VariableDeclaration",
                    "src": "8004:17:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_startTime",
                      "scope": 898,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 840,
                        "name": "ElementaryTypeName",
                        "src": "8027:7:1"
                      }
                    ],
                    "id": 841,
                    "name": "VariableDeclaration",
                    "src": "8027:18:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_endTime",
                      "scope": 898,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 842,
                        "name": "ElementaryTypeName",
                        "src": "8051:7:1"
                      }
                    ],
                    "id": 843,
                    "name": "VariableDeclaration",
                    "src": "8051:16:1"
                  }
                ],
                "id": 844,
                "name": "ParameterList",
                "src": "7998:73:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 847,
                "name": "ParameterList",
                "src": "8090:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 845,
                    "name": "Identifier",
                    "src": "8079:10:1"
                  }
                ],
                "id": 846,
                "name": "ModifierInvocation",
                "src": "8079:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                                  "typeString": "literal_string \"Festival must be inited\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1942,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 848,
                            "name": "Identifier",
                            "src": "8161:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "inited",
                                  "referencedDeclaration": 432,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Culturestake.Festival storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 403,
                                          "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                          "value": "festivals"
                                        },
                                        "id": 849,
                                        "name": "Identifier",
                                        "src": "8170:9:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 839,
                                          "type": "bytes32",
                                          "value": "_festival"
                                        },
                                        "id": 850,
                                        "name": "Identifier",
                                        "src": "8180:9:1"
                                      }
                                    ],
                                    "id": 851,
                                    "name": "IndexAccess",
                                    "src": "8170:20:1"
                                  }
                                ],
                                "id": 852,
                                "name": "MemberAccess",
                                "src": "8170:27:1"
                              }
                            ],
                            "id": 853,
                            "name": "UnaryOperation",
                            "src": "8169:28:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "466573746976616c206d75737420626520696e69746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Festival must be inited\"",
                              "value": "Festival must be inited"
                            },
                            "id": 854,
                            "name": "Literal",
                            "src": "8199:25:1"
                          }
                        ],
                        "id": 855,
                        "name": "FunctionCall",
                        "src": "8161:64:1"
                      }
                    ],
                    "id": 856,
                    "name": "ExpressionStatement",
                    "src": "8161:64:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1941,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 857,
                            "name": "Identifier",
                            "src": "8231:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 841,
                                  "type": "uint256",
                                  "value": "_startTime"
                                },
                                "id": 858,
                                "name": "Identifier",
                                "src": "8239:10:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1928,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 859,
                                    "name": "Identifier",
                                    "src": "8253:5:1"
                                  }
                                ],
                                "id": 860,
                                "name": "MemberAccess",
                                "src": "8253:15:1"
                              }
                            ],
                            "id": 861,
                            "name": "BinaryOperation",
                            "src": "8239:29:1"
                          }
                        ],
                        "id": 862,
                        "name": "FunctionCall",
                        "src": "8231:38:1"
                      }
                    ],
                    "id": 863,
                    "name": "ExpressionStatement",
                    "src": "8231:38:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1941,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 864,
                            "name": "Identifier",
                            "src": "8275:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 843,
                                  "type": "uint256",
                                  "value": "_endTime"
                                },
                                "id": 865,
                                "name": "Identifier",
                                "src": "8283:8:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 841,
                                  "type": "uint256",
                                  "value": "_startTime"
                                },
                                "id": 866,
                                "name": "Identifier",
                                "src": "8294:10:1"
                              }
                            ],
                            "id": 867,
                            "name": "BinaryOperation",
                            "src": "8283:21:1"
                          }
                        ],
                        "id": 868,
                        "name": "FunctionCall",
                        "src": "8275:30:1"
                      }
                    ],
                    "id": 869,
                    "name": "ExpressionStatement",
                    "src": "8275:30:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "inited",
                              "referencedDeclaration": 432,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 870,
                                    "name": "Identifier",
                                    "src": "8311:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 871,
                                    "name": "Identifier",
                                    "src": "8321:9:1"
                                  }
                                ],
                                "id": 872,
                                "name": "IndexAccess",
                                "src": "8311:20:1"
                              }
                            ],
                            "id": 873,
                            "name": "MemberAccess",
                            "src": "8311:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 874,
                            "name": "Literal",
                            "src": "8341:4:1"
                          }
                        ],
                        "id": 875,
                        "name": "Assignment",
                        "src": "8311:34:1"
                      }
                    ],
                    "id": 876,
                    "name": "ExpressionStatement",
                    "src": "8311:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "startTime",
                              "referencedDeclaration": 436,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 877,
                                    "name": "Identifier",
                                    "src": "8351:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 878,
                                    "name": "Identifier",
                                    "src": "8361:9:1"
                                  }
                                ],
                                "id": 879,
                                "name": "IndexAccess",
                                "src": "8351:20:1"
                              }
                            ],
                            "id": 880,
                            "name": "MemberAccess",
                            "src": "8351:30:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 841,
                              "type": "uint256",
                              "value": "_startTime"
                            },
                            "id": 881,
                            "name": "Identifier",
                            "src": "8384:10:1"
                          }
                        ],
                        "id": 882,
                        "name": "Assignment",
                        "src": "8351:43:1"
                      }
                    ],
                    "id": 883,
                    "name": "ExpressionStatement",
                    "src": "8351:43:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "endTime",
                              "referencedDeclaration": 438,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 884,
                                    "name": "Identifier",
                                    "src": "8400:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 885,
                                    "name": "Identifier",
                                    "src": "8410:9:1"
                                  }
                                ],
                                "id": 886,
                                "name": "IndexAccess",
                                "src": "8400:20:1"
                              }
                            ],
                            "id": 887,
                            "name": "MemberAccess",
                            "src": "8400:28:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 843,
                              "type": "uint256",
                              "value": "_endTime"
                            },
                            "id": 888,
                            "name": "Identifier",
                            "src": "8431:8:1"
                          }
                        ],
                        "id": 889,
                        "name": "Assignment",
                        "src": "8400:39:1"
                      }
                    ],
                    "id": 890,
                    "name": "ExpressionStatement",
                    "src": "8400:39:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 466,
                              "type": "function (bytes32,uint256,uint256)",
                              "value": "InitFestival"
                            },
                            "id": 891,
                            "name": "Identifier",
                            "src": "8450:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 839,
                              "type": "bytes32",
                              "value": "_festival"
                            },
                            "id": 892,
                            "name": "Identifier",
                            "src": "8463:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 841,
                              "type": "uint256",
                              "value": "_startTime"
                            },
                            "id": 893,
                            "name": "Identifier",
                            "src": "8474:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 843,
                              "type": "uint256",
                              "value": "_endTime"
                            },
                            "id": 894,
                            "name": "Identifier",
                            "src": "8486:8:1"
                          }
                        ],
                        "id": 895,
                        "name": "FunctionCall",
                        "src": "8450:45:1"
                      }
                    ],
                    "id": 896,
                    "name": "EmitStatement",
                    "src": "8445:50:1"
                  }
                ],
                "id": 897,
                "name": "Block",
                "src": "8090:410:1"
              }
            ],
            "id": 898,
            "name": "FunctionDefinition",
            "src": "7977:523:1"
          },
          {
            "attributes": {
              "documentation": "@dev Destructive method, questions from deactivated festivals cannot be voted on\n @param _festival The chain id of the festival",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "deactivateFestival",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_festival",
                      "scope": 917,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 899,
                        "name": "ElementaryTypeName",
                        "src": "8671:7:1"
                      }
                    ],
                    "id": 900,
                    "name": "VariableDeclaration",
                    "src": "8671:17:1"
                  }
                ],
                "id": 901,
                "name": "ParameterList",
                "src": "8670:19:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 904,
                "name": "ParameterList",
                "src": "8708:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 902,
                    "name": "Identifier",
                    "src": "8697:10:1"
                  }
                ],
                "id": 903,
                "name": "ModifierInvocation",
                "src": "8697:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "deactivated",
                              "referencedDeclaration": 434,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 905,
                                    "name": "Identifier",
                                    "src": "8714:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 900,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 906,
                                    "name": "Identifier",
                                    "src": "8724:9:1"
                                  }
                                ],
                                "id": 907,
                                "name": "IndexAccess",
                                "src": "8714:20:1"
                              }
                            ],
                            "id": 908,
                            "name": "MemberAccess",
                            "src": "8714:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 909,
                            "name": "Literal",
                            "src": "8749:4:1"
                          }
                        ],
                        "id": 910,
                        "name": "Assignment",
                        "src": "8714:39:1"
                      }
                    ],
                    "id": 911,
                    "name": "ExpressionStatement",
                    "src": "8714:39:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 480,
                              "type": "function (bytes32)",
                              "value": "DeactivateFestival"
                            },
                            "id": 912,
                            "name": "Identifier",
                            "src": "8764:18:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 900,
                              "type": "bytes32",
                              "value": "_festival"
                            },
                            "id": 913,
                            "name": "Identifier",
                            "src": "8783:9:1"
                          }
                        ],
                        "id": 914,
                        "name": "FunctionCall",
                        "src": "8764:29:1"
                      }
                    ],
                    "id": 915,
                    "name": "EmitStatement",
                    "src": "8759:34:1"
                  }
                ],
                "id": 916,
                "name": "Block",
                "src": "8708:90:1"
              }
            ],
            "id": 917,
            "name": "FunctionDefinition",
            "src": "8643:155:1"
          },
          {
            "attributes": {
              "documentation": "@dev Getter for a festival struct\n @param _festival The chain id of the festival\n @return Bool for if the festival was initialized\n @return Bool for the if the festival was deactivated\n @return Timestamp for festival start time\n @return Timestamp for festival end time",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getFestival",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_festival",
                      "scope": 949,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 918,
                        "name": "ElementaryTypeName",
                        "src": "9123:7:1"
                      }
                    ],
                    "id": 919,
                    "name": "VariableDeclaration",
                    "src": "9123:17:1"
                  }
                ],
                "id": 920,
                "name": "ParameterList",
                "src": "9122:19:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 949,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 921,
                        "name": "ElementaryTypeName",
                        "src": "9163:4:1"
                      }
                    ],
                    "id": 922,
                    "name": "VariableDeclaration",
                    "src": "9163:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 949,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 923,
                        "name": "ElementaryTypeName",
                        "src": "9169:4:1"
                      }
                    ],
                    "id": 924,
                    "name": "VariableDeclaration",
                    "src": "9169:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 949,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 925,
                        "name": "ElementaryTypeName",
                        "src": "9175:7:1"
                      }
                    ],
                    "id": 926,
                    "name": "VariableDeclaration",
                    "src": "9175:7:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 949,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 927,
                        "name": "ElementaryTypeName",
                        "src": "9184:7:1"
                      }
                    ],
                    "id": 928,
                    "name": "VariableDeclaration",
                    "src": "9184:7:1"
                  }
                ],
                "id": 929,
                "name": "ParameterList",
                "src": "9162:30:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 929
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(bool,bool,uint256,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inited",
                              "referencedDeclaration": 432,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 930,
                                    "name": "Identifier",
                                    "src": "9214:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 919,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 931,
                                    "name": "Identifier",
                                    "src": "9224:9:1"
                                  }
                                ],
                                "id": 932,
                                "name": "IndexAccess",
                                "src": "9214:20:1"
                              }
                            ],
                            "id": 933,
                            "name": "MemberAccess",
                            "src": "9214:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "deactivated",
                              "referencedDeclaration": 434,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 934,
                                    "name": "Identifier",
                                    "src": "9249:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 919,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 935,
                                    "name": "Identifier",
                                    "src": "9259:9:1"
                                  }
                                ],
                                "id": 936,
                                "name": "IndexAccess",
                                "src": "9249:20:1"
                              }
                            ],
                            "id": 937,
                            "name": "MemberAccess",
                            "src": "9249:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "startTime",
                              "referencedDeclaration": 436,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 938,
                                    "name": "Identifier",
                                    "src": "9289:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 919,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 939,
                                    "name": "Identifier",
                                    "src": "9299:9:1"
                                  }
                                ],
                                "id": 940,
                                "name": "IndexAccess",
                                "src": "9289:20:1"
                              }
                            ],
                            "id": 941,
                            "name": "MemberAccess",
                            "src": "9289:30:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "endTime",
                              "referencedDeclaration": 438,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 942,
                                    "name": "Identifier",
                                    "src": "9327:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 919,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 943,
                                    "name": "Identifier",
                                    "src": "9337:9:1"
                                  }
                                ],
                                "id": 944,
                                "name": "IndexAccess",
                                "src": "9327:20:1"
                              }
                            ],
                            "id": 945,
                            "name": "MemberAccess",
                            "src": "9327:28:1"
                          }
                        ],
                        "id": 946,
                        "name": "TupleExpression",
                        "src": "9206:155:1"
                      }
                    ],
                    "id": 947,
                    "name": "Return",
                    "src": "9199:162:1"
                  }
                ],
                "id": 948,
                "name": "Block",
                "src": "9193:173:1"
              }
            ],
            "id": 949,
            "name": "FunctionDefinition",
            "src": "9102:264:1"
          },
          {
            "attributes": {
              "documentation": "@dev Destructive method, deactivated questions cannot be voted on and do not pass the onlyQuestions modifier\n @param _question The question chain id",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "deactivateQuestion",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_question",
                      "scope": 977,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 950,
                        "name": "ElementaryTypeName",
                        "src": "9558:7:1"
                      }
                    ],
                    "id": 951,
                    "name": "VariableDeclaration",
                    "src": "9558:17:1"
                  }
                ],
                "id": 952,
                "name": "ParameterList",
                "src": "9557:19:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 955,
                "name": "ParameterList",
                "src": "9595:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 953,
                    "name": "Identifier",
                    "src": "9584:10:1"
                  }
                ],
                "id": 954,
                "name": "ModifierInvocation",
                "src": "9584:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "deactivated",
                              "referencedDeclaration": 443,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 956,
                                    "name": "Identifier",
                                    "src": "9601:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 951,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 957,
                                    "name": "Identifier",
                                    "src": "9611:9:1"
                                  }
                                ],
                                "id": 958,
                                "name": "IndexAccess",
                                "src": "9601:20:1"
                              }
                            ],
                            "id": 959,
                            "name": "MemberAccess",
                            "src": "9601:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 960,
                            "name": "Literal",
                            "src": "9636:4:1"
                          }
                        ],
                        "id": 961,
                        "name": "Assignment",
                        "src": "9601:39:1"
                      }
                    ],
                    "id": 962,
                    "name": "ExpressionStatement",
                    "src": "9601:39:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 415,
                                  "type": "mapping(address => bool)",
                                  "value": "questionsByAddress"
                                },
                                "id": 963,
                                "name": "Identifier",
                                "src": "9646:18:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "contractAddress",
                                  "referencedDeclaration": 445,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Culturestake.QuestionStruct storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 407,
                                          "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                          "value": "questions"
                                        },
                                        "id": 964,
                                        "name": "Identifier",
                                        "src": "9665:9:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 951,
                                          "type": "bytes32",
                                          "value": "_question"
                                        },
                                        "id": 965,
                                        "name": "Identifier",
                                        "src": "9675:9:1"
                                      }
                                    ],
                                    "id": 966,
                                    "name": "IndexAccess",
                                    "src": "9665:20:1"
                                  }
                                ],
                                "id": 967,
                                "name": "MemberAccess",
                                "src": "9665:36:1"
                              }
                            ],
                            "id": 968,
                            "name": "IndexAccess",
                            "src": "9646:56:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 969,
                            "name": "Literal",
                            "src": "9705:5:1"
                          }
                        ],
                        "id": 970,
                        "name": "Assignment",
                        "src": "9646:64:1"
                      }
                    ],
                    "id": 971,
                    "name": "ExpressionStatement",
                    "src": "9646:64:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 476,
                              "type": "function (bytes32)",
                              "value": "DeactivateQuestion"
                            },
                            "id": 972,
                            "name": "Identifier",
                            "src": "9721:18:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 951,
                              "type": "bytes32",
                              "value": "_question"
                            },
                            "id": 973,
                            "name": "Identifier",
                            "src": "9740:9:1"
                          }
                        ],
                        "id": 974,
                        "name": "FunctionCall",
                        "src": "9721:29:1"
                      }
                    ],
                    "id": 975,
                    "name": "EmitStatement",
                    "src": "9716:34:1"
                  }
                ],
                "id": 976,
                "name": "Block",
                "src": "9595:160:1"
              }
            ],
            "id": 977,
            "name": "FunctionDefinition",
            "src": "9530:225:1"
          },
          {
            "attributes": {
              "documentation": "@dev Deploys a question contract\n @param _question The question chain id\n @param _maxVoteTokens The amount of vote tokens given to each voter per answer\n @param _festival The festival chain id",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initQuestion",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_question",
                      "scope": 1071,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 978,
                        "name": "ElementaryTypeName",
                        "src": "10000:7:1"
                      }
                    ],
                    "id": 979,
                    "name": "VariableDeclaration",
                    "src": "10000:17:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_maxVoteTokens",
                      "scope": 1071,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 980,
                        "name": "ElementaryTypeName",
                        "src": "10023:7:1"
                      }
                    ],
                    "id": 981,
                    "name": "VariableDeclaration",
                    "src": "10023:22:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_festival",
                      "scope": 1071,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 982,
                        "name": "ElementaryTypeName",
                        "src": "10051:7:1"
                      }
                    ],
                    "id": 983,
                    "name": "VariableDeclaration",
                    "src": "10051:17:1"
                  }
                ],
                "id": 984,
                "name": "ParameterList",
                "src": "9994:78:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 987,
                "name": "ParameterList",
                "src": "10091:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 43,
                      "type": "modifier ()",
                      "value": "authorized"
                    },
                    "id": 985,
                    "name": "Identifier",
                    "src": "10080:10:1"
                  }
                ],
                "id": 986,
                "name": "ModifierInvocation",
                "src": "10080:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4d31f418d7240c8db1597aa577044a7099eb5571f711e5083739fd4237580733",
                                  "typeString": "literal_string \"Festival must be inited\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1942,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 988,
                            "name": "Identifier",
                            "src": "10097:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inited",
                              "referencedDeclaration": 432,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.Festival storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 403,
                                      "type": "mapping(bytes32 => struct Culturestake.Festival storage ref)",
                                      "value": "festivals"
                                    },
                                    "id": 989,
                                    "name": "Identifier",
                                    "src": "10105:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 983,
                                      "type": "bytes32",
                                      "value": "_festival"
                                    },
                                    "id": 990,
                                    "name": "Identifier",
                                    "src": "10115:9:1"
                                  }
                                ],
                                "id": 991,
                                "name": "IndexAccess",
                                "src": "10105:20:1"
                              }
                            ],
                            "id": 992,
                            "name": "MemberAccess",
                            "src": "10105:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "466573746976616c206d75737420626520696e69746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Festival must be inited\"",
                              "value": "Festival must be inited"
                            },
                            "id": 993,
                            "name": "Literal",
                            "src": "10134:25:1"
                          }
                        ],
                        "id": 994,
                        "name": "FunctionCall",
                        "src": "10097:63:1"
                      }
                    ],
                    "id": 995,
                    "name": "ExpressionStatement",
                    "src": "10097:63:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e24d8c64e9e566354061acf15ba86669fca2c372ccdd25a1533356a995db8bc3",
                                  "typeString": "literal_string \"This question can only be inited once\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1941,
                                1942
                              ],
                              "referencedDeclaration": 1942,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 996,
                            "name": "Identifier",
                            "src": "10231:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "inited",
                                  "referencedDeclaration": 441,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Culturestake.QuestionStruct storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 407,
                                          "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                          "value": "questions"
                                        },
                                        "id": 997,
                                        "name": "Identifier",
                                        "src": "10240:9:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 979,
                                          "type": "bytes32",
                                          "value": "_question"
                                        },
                                        "id": 998,
                                        "name": "Identifier",
                                        "src": "10250:9:1"
                                      }
                                    ],
                                    "id": 999,
                                    "name": "IndexAccess",
                                    "src": "10240:20:1"
                                  }
                                ],
                                "id": 1000,
                                "name": "MemberAccess",
                                "src": "10240:27:1"
                              }
                            ],
                            "id": 1001,
                            "name": "UnaryOperation",
                            "src": "10239:28:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686973207175657374696f6e2063616e206f6e6c7920626520696e69746564206f6e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"This question can only be inited once\"",
                              "value": "This question can only be inited once"
                            },
                            "id": 1002,
                            "name": "Literal",
                            "src": "10269:39:1"
                          }
                        ],
                        "id": 1003,
                        "name": "FunctionCall",
                        "src": "10231:78:1"
                      }
                    ],
                    "id": 1004,
                    "name": "ExpressionStatement",
                    "src": "10231:78:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1006
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "data",
                          "scope": 1070,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "bytes",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes",
                              "type": "bytes"
                            },
                            "id": 1005,
                            "name": "ElementaryTypeName",
                            "src": "10373:5:1"
                          }
                        ],
                        "id": 1006,
                        "name": "VariableDeclaration",
                        "src": "10373:17:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_799636967_by_1",
                                  "typeString": "int_const 799636967"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "encodeWithSelector",
                              "referencedDeclaration": null,
                              "type": "function (bytes4) pure returns (bytes memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1925,
                                  "type": "abi",
                                  "value": "abi"
                                },
                                "id": 1007,
                                "name": "Identifier",
                                "src": "10393:3:1"
                              }
                            ],
                            "id": 1008,
                            "name": "MemberAccess",
                            "src": "10393:22:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30783266613937646537",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 799636967",
                              "value": "0x2fa97de7"
                            },
                            "id": 1009,
                            "name": "Literal",
                            "src": "10423:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Culturestake_$1135",
                                      "typeString": "contract Culturestake"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 1010,
                                "name": "ElementaryTypeNameExpression",
                                "src": "10435:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1964,
                                  "type": "contract Culturestake",
                                  "value": "this"
                                },
                                "id": 1011,
                                "name": "Identifier",
                                "src": "10443:4:1"
                              }
                            ],
                            "id": 1012,
                            "name": "FunctionCall",
                            "src": "10435:13:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 979,
                              "type": "bytes32",
                              "value": "_question"
                            },
                            "id": 1013,
                            "name": "Identifier",
                            "src": "10450:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 981,
                              "type": "uint256",
                              "value": "_maxVoteTokens"
                            },
                            "id": 1014,
                            "name": "Identifier",
                            "src": "10461:14:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 983,
                              "type": "bytes32",
                              "value": "_festival"
                            },
                            "id": 1015,
                            "name": "Identifier",
                            "src": "10477:9:1"
                          }
                        ],
                        "id": 1016,
                        "name": "FunctionCall",
                        "src": "10393:99:1"
                      }
                    ],
                    "id": 1017,
                    "name": "VariableDeclarationStatement",
                    "src": "10373:119:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1019
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "questionContract",
                          "scope": 1070,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract Proxy",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Proxy",
                              "referencedDeclaration": 1227,
                              "type": "contract Proxy"
                            },
                            "id": 1018,
                            "name": "UserDefinedTypeName",
                            "src": "10561:5:1"
                          }
                        ],
                        "id": 1019,
                        "name": "VariableDeclaration",
                        "src": "10561:22:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract Proxy",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1096,
                              "type": "function (bytes memory) returns (contract Proxy)",
                              "value": "createProxy"
                            },
                            "id": 1020,
                            "name": "Identifier",
                            "src": "10586:11:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1006,
                              "type": "bytes memory",
                              "value": "data"
                            },
                            "id": 1021,
                            "name": "Identifier",
                            "src": "10598:4:1"
                          }
                        ],
                        "id": 1022,
                        "name": "FunctionCall",
                        "src": "10586:17:1"
                      }
                    ],
                    "id": 1023,
                    "name": "VariableDeclarationStatement",
                    "src": "10561:42:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 415,
                                  "type": "mapping(address => bool)",
                                  "value": "questionsByAddress"
                                },
                                "id": 1024,
                                "name": "Identifier",
                                "src": "10699:18:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Proxy_$1227",
                                          "typeString": "contract Proxy"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 1025,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "10718:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1019,
                                      "type": "contract Proxy",
                                      "value": "questionContract"
                                    },
                                    "id": 1026,
                                    "name": "Identifier",
                                    "src": "10726:16:1"
                                  }
                                ],
                                "id": 1027,
                                "name": "FunctionCall",
                                "src": "10718:25:1"
                              }
                            ],
                            "id": 1028,
                            "name": "IndexAccess",
                            "src": "10699:45:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 1029,
                            "name": "Literal",
                            "src": "10747:4:1"
                          }
                        ],
                        "id": 1030,
                        "name": "Assignment",
                        "src": "10699:52:1"
                      }
                    ],
                    "id": 1031,
                    "name": "ExpressionStatement",
                    "src": "10699:52:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "inited",
                              "referencedDeclaration": 441,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1032,
                                    "name": "Identifier",
                                    "src": "10791:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 979,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1033,
                                    "name": "Identifier",
                                    "src": "10801:9:1"
                                  }
                                ],
                                "id": 1034,
                                "name": "IndexAccess",
                                "src": "10791:20:1"
                              }
                            ],
                            "id": 1035,
                            "name": "MemberAccess",
                            "src": "10791:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 1036,
                            "name": "Literal",
                            "src": "10821:4:1"
                          }
                        ],
                        "id": 1037,
                        "name": "Assignment",
                        "src": "10791:34:1"
                      }
                    ],
                    "id": 1038,
                    "name": "ExpressionStatement",
                    "src": "10791:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "festival",
                              "referencedDeclaration": 447,
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1039,
                                    "name": "Identifier",
                                    "src": "10831:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 979,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1040,
                                    "name": "Identifier",
                                    "src": "10841:9:1"
                                  }
                                ],
                                "id": 1041,
                                "name": "IndexAccess",
                                "src": "10831:20:1"
                              }
                            ],
                            "id": 1042,
                            "name": "MemberAccess",
                            "src": "10831:29:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 983,
                              "type": "bytes32",
                              "value": "_festival"
                            },
                            "id": 1043,
                            "name": "Identifier",
                            "src": "10863:9:1"
                          }
                        ],
                        "id": 1044,
                        "name": "Assignment",
                        "src": "10831:41:1"
                      }
                    ],
                    "id": 1045,
                    "name": "ExpressionStatement",
                    "src": "10831:41:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "contractAddress",
                              "referencedDeclaration": 445,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1046,
                                    "name": "Identifier",
                                    "src": "10878:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 979,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1047,
                                    "name": "Identifier",
                                    "src": "10888:9:1"
                                  }
                                ],
                                "id": 1048,
                                "name": "IndexAccess",
                                "src": "10878:20:1"
                              }
                            ],
                            "id": 1049,
                            "name": "MemberAccess",
                            "src": "10878:36:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Proxy_$1227",
                                      "typeString": "contract Proxy"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 1050,
                                "name": "ElementaryTypeNameExpression",
                                "src": "10917:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1019,
                                  "type": "contract Proxy",
                                  "value": "questionContract"
                                },
                                "id": 1051,
                                "name": "Identifier",
                                "src": "10925:16:1"
                              }
                            ],
                            "id": 1052,
                            "name": "FunctionCall",
                            "src": "10917:25:1"
                          }
                        ],
                        "id": 1053,
                        "name": "Assignment",
                        "src": "10878:64:1"
                      }
                    ],
                    "id": 1054,
                    "name": "ExpressionStatement",
                    "src": "10878:64:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "maxVoteTokens",
                              "referencedDeclaration": 449,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1055,
                                    "name": "Identifier",
                                    "src": "10948:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 979,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1056,
                                    "name": "Identifier",
                                    "src": "10958:9:1"
                                  }
                                ],
                                "id": 1057,
                                "name": "IndexAccess",
                                "src": "10948:20:1"
                              }
                            ],
                            "id": 1058,
                            "name": "MemberAccess",
                            "src": "10948:34:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 981,
                              "type": "uint256",
                              "value": "_maxVoteTokens"
                            },
                            "id": 1059,
                            "name": "Identifier",
                            "src": "10985:14:1"
                          }
                        ],
                        "id": 1060,
                        "name": "Assignment",
                        "src": "10948:51:1"
                      }
                    ],
                    "id": 1061,
                    "name": "ExpressionStatement",
                    "src": "10948:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 458,
                              "type": "function (bytes32,bytes32,address)",
                              "value": "InitQuestion"
                            },
                            "id": 1062,
                            "name": "Identifier",
                            "src": "11011:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 979,
                              "type": "bytes32",
                              "value": "_question"
                            },
                            "id": 1063,
                            "name": "Identifier",
                            "src": "11024:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 983,
                              "type": "bytes32",
                              "value": "_festival"
                            },
                            "id": 1064,
                            "name": "Identifier",
                            "src": "11035:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Proxy_$1227",
                                      "typeString": "contract Proxy"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 1065,
                                "name": "ElementaryTypeNameExpression",
                                "src": "11046:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1019,
                                  "type": "contract Proxy",
                                  "value": "questionContract"
                                },
                                "id": 1066,
                                "name": "Identifier",
                                "src": "11054:16:1"
                              }
                            ],
                            "id": 1067,
                            "name": "FunctionCall",
                            "src": "11046:25:1"
                          }
                        ],
                        "id": 1068,
                        "name": "FunctionCall",
                        "src": "11011:61:1"
                      }
                    ],
                    "id": 1069,
                    "name": "EmitStatement",
                    "src": "11006:66:1"
                  }
                ],
                "id": 1070,
                "name": "Block",
                "src": "10091:986:1"
              }
            ],
            "id": 1071,
            "name": "FunctionDefinition",
            "src": "9973:1104:1"
          },
          {
            "attributes": {
              "documentation": "@dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\n @param data Payload for message call sent to new proxy contract.\n @return The created proxy",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createProxy",
              "scope": 1135,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "data",
                      "scope": 1096,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 1072,
                        "name": "ElementaryTypeName",
                        "src": "11319:5:1"
                      }
                    ],
                    "id": 1073,
                    "name": "VariableDeclaration",
                    "src": "11319:17:1"
                  }
                ],
                "id": 1074,
                "name": "ParameterList",
                "src": "11318:19:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proxy",
                      "scope": 1096,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract Proxy",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proxy",
                          "referencedDeclaration": 1227,
                          "type": "contract Proxy"
                        },
                        "id": 1075,
                        "name": "UserDefinedTypeName",
                        "src": "11368:5:1"
                      }
                    ],
                    "id": 1076,
                    "name": "VariableDeclaration",
                    "src": "11368:11:1"
                  }
                ],
                "id": 1077,
                "name": "ParameterList",
                "src": "11367:13:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Proxy"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1076,
                              "type": "contract Proxy",
                              "value": "proxy"
                            },
                            "id": 1078,
                            "name": "Identifier",
                            "src": "11391:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Proxy",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function (address) returns (contract Proxy)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "Proxy",
                                      "referencedDeclaration": 1227,
                                      "type": "contract Proxy"
                                    },
                                    "id": 1079,
                                    "name": "UserDefinedTypeName",
                                    "src": "11403:5:1"
                                  }
                                ],
                                "id": 1080,
                                "name": "NewExpression",
                                "src": "11399:9:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 417,
                                  "type": "address",
                                  "value": "questionMasterCopy"
                                },
                                "id": 1081,
                                "name": "Identifier",
                                "src": "11409:18:1"
                              }
                            ],
                            "id": 1082,
                            "name": "FunctionCall",
                            "src": "11399:29:1"
                          }
                        ],
                        "id": 1083,
                        "name": "Assignment",
                        "src": "11391:37:1"
                      }
                    ],
                    "id": 1084,
                    "name": "ExpressionStatement",
                    "src": "11391:37:1"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1073,
                                  "type": "bytes memory",
                                  "value": "data"
                                },
                                "id": 1085,
                                "name": "Identifier",
                                "src": "11440:4:1"
                              }
                            ],
                            "id": 1086,
                            "name": "MemberAccess",
                            "src": "11440:11:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1087,
                            "name": "Literal",
                            "src": "11454:1:1"
                          }
                        ],
                        "id": 1088,
                        "name": "BinaryOperation",
                        "src": "11440:15:1"
                      },
                      {
                        "attributes": {
                          "externalReferences": [
                            {
                              "data": {
                                "declaration": 1073,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "11607:4:1",
                                "valueSize": 1
                              }
                            },
                            {
                              "data": {
                                "declaration": 1073,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "11588:4:1",
                                "valueSize": 1
                              }
                            },
                            {
                              "proxy": {
                                "declaration": 1076,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "11574:5:1",
                                "valueSize": 1
                              }
                            }
                          ],
                          "operations": "{\n    if eq(call(gas(), proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) { revert(0, 0) }\n}"
                        },
                        "children": [],
                        "id": 1089,
                        "name": "InlineAssembly",
                        "src": "11533:119:1"
                      }
                    ],
                    "id": 1090,
                    "name": "IfStatement",
                    "src": "11436:216:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Proxy_$1227",
                                  "typeString": "contract Proxy"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 488,
                              "type": "function (contract Proxy)",
                              "value": "ProxyCreation"
                            },
                            "id": 1091,
                            "name": "Identifier",
                            "src": "11664:13:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1076,
                              "type": "contract Proxy",
                              "value": "proxy"
                            },
                            "id": 1092,
                            "name": "Identifier",
                            "src": "11678:5:1"
                          }
                        ],
                        "id": 1093,
                        "name": "FunctionCall",
                        "src": "11664:20:1"
                      }
                    ],
                    "id": 1094,
                    "name": "EmitStatement",
                    "src": "11659:25:1"
                  }
                ],
                "id": 1095,
                "name": "Block",
                "src": "11383:306:1"
              }
            ],
            "id": 1096,
            "name": "FunctionDefinition",
            "src": "11298:391:1"
          },
          {
            "attributes": {
              "documentation": "@dev Getter for a question struct\n @param _question The question chain is\n @return Bool for if the booth was initialized\n @return Bool for if the booth was deactivated\n @return The address of the question contract\n @return The festival chain id the question is associated with\n @return The maximum tokens given in this question per answer",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getQuestion",
              "scope": 1135,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_question",
                      "scope": 1134,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 1097,
                        "name": "ElementaryTypeName",
                        "src": "12089:7:1"
                      }
                    ],
                    "id": 1098,
                    "name": "VariableDeclaration",
                    "src": "12089:17:1"
                  }
                ],
                "id": 1099,
                "name": "ParameterList",
                "src": "12088:19:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1134,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1100,
                        "name": "ElementaryTypeName",
                        "src": "12129:4:1"
                      }
                    ],
                    "id": 1101,
                    "name": "VariableDeclaration",
                    "src": "12129:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1134,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1102,
                        "name": "ElementaryTypeName",
                        "src": "12135:4:1"
                      }
                    ],
                    "id": 1103,
                    "name": "VariableDeclaration",
                    "src": "12135:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1134,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1104,
                        "name": "ElementaryTypeName",
                        "src": "12141:7:1"
                      }
                    ],
                    "id": 1105,
                    "name": "VariableDeclaration",
                    "src": "12141:7:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1134,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 1106,
                        "name": "ElementaryTypeName",
                        "src": "12150:7:1"
                      }
                    ],
                    "id": 1107,
                    "name": "VariableDeclaration",
                    "src": "12150:7:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1134,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1108,
                        "name": "ElementaryTypeName",
                        "src": "12159:7:1"
                      }
                    ],
                    "id": 1109,
                    "name": "VariableDeclaration",
                    "src": "12159:7:1"
                  }
                ],
                "id": 1110,
                "name": "ParameterList",
                "src": "12128:39:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1110
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(bool,bool,address,bytes32,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inited",
                              "referencedDeclaration": 441,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1111,
                                    "name": "Identifier",
                                    "src": "12189:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1098,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1112,
                                    "name": "Identifier",
                                    "src": "12199:9:1"
                                  }
                                ],
                                "id": 1113,
                                "name": "IndexAccess",
                                "src": "12189:20:1"
                              }
                            ],
                            "id": 1114,
                            "name": "MemberAccess",
                            "src": "12189:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "deactivated",
                              "referencedDeclaration": 443,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1115,
                                    "name": "Identifier",
                                    "src": "12224:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1098,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1116,
                                    "name": "Identifier",
                                    "src": "12234:9:1"
                                  }
                                ],
                                "id": 1117,
                                "name": "IndexAccess",
                                "src": "12224:20:1"
                              }
                            ],
                            "id": 1118,
                            "name": "MemberAccess",
                            "src": "12224:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "contractAddress",
                              "referencedDeclaration": 445,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1119,
                                    "name": "Identifier",
                                    "src": "12264:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1098,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1120,
                                    "name": "Identifier",
                                    "src": "12274:9:1"
                                  }
                                ],
                                "id": 1121,
                                "name": "IndexAccess",
                                "src": "12264:20:1"
                              }
                            ],
                            "id": 1122,
                            "name": "MemberAccess",
                            "src": "12264:36:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "festival",
                              "referencedDeclaration": 447,
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1123,
                                    "name": "Identifier",
                                    "src": "12308:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1098,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1124,
                                    "name": "Identifier",
                                    "src": "12318:9:1"
                                  }
                                ],
                                "id": 1125,
                                "name": "IndexAccess",
                                "src": "12308:20:1"
                              }
                            ],
                            "id": 1126,
                            "name": "MemberAccess",
                            "src": "12308:29:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "maxVoteTokens",
                              "referencedDeclaration": 449,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Culturestake.QuestionStruct storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 407,
                                      "type": "mapping(bytes32 => struct Culturestake.QuestionStruct storage ref)",
                                      "value": "questions"
                                    },
                                    "id": 1127,
                                    "name": "Identifier",
                                    "src": "12345:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1098,
                                      "type": "bytes32",
                                      "value": "_question"
                                    },
                                    "id": 1128,
                                    "name": "Identifier",
                                    "src": "12355:9:1"
                                  }
                                ],
                                "id": 1129,
                                "name": "IndexAccess",
                                "src": "12345:20:1"
                              }
                            ],
                            "id": 1130,
                            "name": "MemberAccess",
                            "src": "12345:34:1"
                          }
                        ],
                        "id": 1131,
                        "name": "TupleExpression",
                        "src": "12181:204:1"
                      }
                    ],
                    "id": 1132,
                    "name": "Return",
                    "src": "12174:211:1"
                  }
                ],
                "id": 1133,
                "name": "Block",
                "src": "12168:222:1"
              }
            ],
            "id": 1134,
            "name": "FunctionDefinition",
            "src": "12068:322:1"
          }
        ],
        "id": 1135,
        "name": "ContractDefinition",
        "src": "322:12070:1"
      }
    ],
    "id": 1136,
    "name": "SourceUnit",
    "src": "0:12392:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-13T12:03:18.588Z",
  "devdoc": {
    "author": "Sarah Friend @ana0",
    "methods": {
      "burnNonce(address,uint256)": {
        "details": "Destructive method that burns the nonce - marked onlyQuestions to prevent griefing",
        "params": {
          "_booth": "The booth using the nonce (nonces are stored per booth)",
          "_nonce": "The nonce"
        }
      },
      "checkBoothSignature(bytes32,bytes32[],uint256,uint8,bytes32,bytes32)": {
        "details": "Used by server to validate vote data - the booth signs the answers array and a nonce",
        "params": {
          "_answers": "An array of answer ids",
          "_festival": "The festival chain id",
          "_nonce": "A random number added to the answers array by the booth - prevents a booth signature from being used for more than one vote package",
          "sigR": "Booth signature data",
          "sigS": "Booth signature data",
          "sigV": "Booth signature data"
        },
        "return": "True if the signature provided is a signature of an active booth, signing the correct data, and active on the claimed festival"
      },
      "constructor": {
        "details": "The owners array is used in the Admin contract this inherits from",
        "params": {
          "_owners": "An array of all addresses that have admin permissions over this contract",
          "_questionMasterCopy": "The address of the master copy that holds the logic for each question"
        }
      },
      "deactivateFestival(bytes32)": {
        "details": "Destructive method, questions from deactivated festivals cannot be voted on",
        "params": {
          "_festival": "The chain id of the festival"
        }
      },
      "deactivateQuestion(bytes32)": {
        "details": "Destructive method, deactivated questions cannot be voted on and do not pass the onlyQuestions modifier",
        "params": {
          "_question": "The question chain id"
        }
      },
      "deactivateVotingBooth(address)": {
        "details": "Destructive method, signatures from deactivated booths can not be used to vote",
        "params": {
          "_booth": "The booth address"
        }
      },
      "getFestival(bytes32)": {
        "details": "Getter for a festival struct",
        "params": {
          "_festival": "The chain id of the festival"
        },
        "return": "Bool for if the festival was initializedBool for the if the festival was deactivatedTimestamp for festival start timeTimestamp for festival end time"
      },
      "getHash(bytes32[],uint256)": {
        "params": {
          "_answers": "An array of answer ids",
          "_nonce": "A random number added to the answers array by the booth"
        },
        "return": "Keccak sha3 of the packed answers array and nonce"
      },
      "getQuestion(bytes32)": {
        "details": "Getter for a question struct",
        "params": {
          "_question": "The question chain is"
        },
        "return": "Bool for if the booth was initializedBool for if the booth was deactivatedThe address of the question contractThe festival chain id the question is associated withThe maximum tokens given in this question per answer"
      },
      "getVotingBooth(address)": {
        "details": "Getter for a voting booth struct",
        "params": {
          "_booth": "The booth address"
        },
        "return": "Bool for if the booth was initializedBool for the if the booth was deactivatedChain id of the festival the booth was registered to"
      },
      "initFestival(bytes32,uint256,uint256)": {
        "details": "Creates a festival",
        "params": {
          "_endTime": "Timestamp for festival end",
          "_festival": "The chain id of the festival",
          "_startTime": "Timestamp for festival start"
        }
      },
      "initQuestion(bytes32,uint256,bytes32)": {
        "details": "Deploys a question contract",
        "params": {
          "_festival": "The festival chain id",
          "_maxVoteTokens": "The amount of vote tokens given to each voter per answer",
          "_question": "The question chain id"
        }
      },
      "initVotingBooth(bytes32,address)": {
        "details": "Registers a voting booth with this contract",
        "params": {
          "_booth": "The booth address",
          "_festival": "The festival chain is"
        }
      },
      "isActiveFestival(bytes32)": {
        "details": "Used by server to validate vote data",
        "params": {
          "_festival": "The festival chain id"
        },
        "return": "True if the festival is currently open for voting"
      },
      "isValidVotingNonce(address,uint256)": {
        "details": "Used by the server to validate vote data",
        "params": {
          "_booth": "The booth address",
          "_nonce": "The nonce"
        },
        "return": "True if the challenged booth has not used this nonce"
      },
      "isVoteRelayer(address)": {
        "details": "Used by question contracts to validate the vote relayer",
        "params": {
          "_sender": "The address being challenged"
        },
        "return": "True if the address given is the current vote relayer"
      },
      "setQuestionMasterCopy(address)": {
        "details": "Provided the setup parameters of a question contract don't change, the logic on future questions can be updated",
        "params": {
          "_newQuestionMasterCopy": "The address of the master copy to use for new questions"
        }
      },
      "setVoteRelayer(address)": {
        "details": "The vote relayer is the server key that sends votes to question contracts. It should be cycled periodically and must be set before any votes can take place",
        "params": {
          "_newVoteRelayer": "The address of the new vote relayer"
        }
      }
    },
    "title": "Culturestake admin hub"
  },
  "userdoc": {
    "methods": {},
    "notice": "Deploys questions and manages festivals and voting booths within the culturestake system"
  }
}