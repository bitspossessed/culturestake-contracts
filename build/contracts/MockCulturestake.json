{
  "contractName": "MockCulturestake",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_questionMasterCopy",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "AddedOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        }
      ],
      "name": "DeactivateFestival",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "question",
          "type": "bytes32"
        }
      ],
      "name": "DeactivateQuestion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "boothAddress",
          "type": "address"
        }
      ],
      "name": "DeactivateVotingBooth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "InitFestival",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "question",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "questionAddress",
          "type": "address"
        }
      ],
      "name": "InitQuestion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "festival",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "boothAddress",
          "type": "address"
        }
      ],
      "name": "InitVotingBooth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Proxy",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "ProxyCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RemovedOwner",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "burnNonce",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_answers",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "sigV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "sigS",
          "type": "bytes32"
        }
      ],
      "name": "checkBoothSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "deactivateFestival",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_question",
          "type": "bytes32"
        }
      ],
      "name": "deactivateQuestion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        }
      ],
      "name": "deactivateVotingBooth",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "getFestival",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_answers",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_question",
          "type": "bytes32"
        }
      ],
      "name": "getQuestion",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        }
      ],
      "name": "getVotingBooth",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "initFestival",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_question",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_maxVoteTokens",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "initQuestion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        }
      ],
      "name": "initVotingBooth",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        }
      ],
      "name": "isActiveFestival",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_booth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "isValidVotingNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "isVoteRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "questionMasterCopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "questionsByAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newQuestionMasterCopy",
          "type": "address"
        }
      ],
      "name": "setQuestionMasterCopy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVoteRelayer",
          "type": "address"
        }
      ],
      "name": "setVoteRelayer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "swapOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voteRelayer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_festival",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_answers",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "sigV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "sigS",
          "type": "bytes32"
        }
      ],
      "name": "checkBoothSignatureAndBurnNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_questionMasterCopy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"}],\"name\":\"DeactivateFestival\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question\",\"type\":\"bytes32\"}],\"name\":\"DeactivateQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boothAddress\",\"type\":\"address\"}],\"name\":\"DeactivateVotingBooth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"InitFestival\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"questionAddress\",\"type\":\"address\"}],\"name\":\"InitQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"festival\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boothAddress\",\"type\":\"address\"}],\"name\":\"InitVotingBooth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract Proxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"burnNonce\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_answers\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"}],\"name\":\"checkBoothSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_answers\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"}],\"name\":\"checkBoothSignatureAndBurnNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"deactivateFestival\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_question\",\"type\":\"bytes32\"}],\"name\":\"deactivateQuestion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"}],\"name\":\"deactivateVotingBooth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"getFestival\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_answers\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_question\",\"type\":\"bytes32\"}],\"name\":\"getQuestion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"}],\"name\":\"getVotingBooth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"initFestival\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_question\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_maxVoteTokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"initQuestion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"}],\"name\":\"initVotingBooth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_festival\",\"type\":\"bytes32\"}],\"name\":\"isActiveFestival\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_booth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"isValidVotingNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isVoteRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"questionMasterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"questionsByAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newQuestionMasterCopy\",\"type\":\"address\"}],\"name\":\"setQuestionMasterCopy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVoteRelayer\",\"type\":\"address\"}],\"name\":\"setVoteRelayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"swapOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voteRelayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"burnNonce(address,uint256)\":{\"details\":\"Destructive method that burns the nonce - marked onlyQuestions to prevent griefing\",\"params\":{\"_booth\":\"The booth using the nonce (nonces are stored per booth)\",\"_nonce\":\"The nonce\"}},\"checkBoothSignature(bytes32,bytes32[],uint256,uint8,bytes32,bytes32)\":{\"details\":\"Used by server to validate vote data - the booth signs the answers array and a nonce\",\"params\":{\"_answers\":\"An array of answer ids\",\"_festival\":\"The festival chain id\",\"_nonce\":\"A random number added to the answers array by the booth - prevents a booth signature from being used for more than one vote package\",\"sigR\":\"Booth signature data\",\"sigS\":\"Booth signature data\",\"sigV\":\"Booth signature data\"},\"return\":\"True if the signature provided is a signature of an active booth, signing the correct data, and active on the claimed festival\"},\"deactivateFestival(bytes32)\":{\"details\":\"Destructive method, questions from deactivated festivals cannot be voted on\",\"params\":{\"_festival\":\"The chain id of the festival\"}},\"deactivateQuestion(bytes32)\":{\"details\":\"Destructive method, deactivated questions cannot be voted on and do not pass the onlyQuestions modifier\",\"params\":{\"_question\":\"The question chain id\"}},\"deactivateVotingBooth(address)\":{\"details\":\"Destructive method, signatures from deactivated booths can not be used to vote\",\"params\":{\"_booth\":\"The booth address\"}},\"getFestival(bytes32)\":{\"details\":\"Getter for a festival struct\",\"params\":{\"_festival\":\"The chain id of the festival\"},\"return\":\"Bool for if the festival was initializedBool for the if the festival was deactivatedTimestamp for festival start timeTimestamp for festival end time\"},\"getHash(bytes32[],uint256)\":{\"params\":{\"_answers\":\"An array of answer ids\",\"_nonce\":\"A random number added to the answers array by the booth\"},\"return\":\"Keccak sha3 of the packed answers array and nonce\"},\"getQuestion(bytes32)\":{\"details\":\"Getter for a question struct\",\"params\":{\"_question\":\"The question chain is\"},\"return\":\"Bool for if the booth was initializedBool for if the booth was deactivatedThe address of the question contractThe festival chain id the question is associated withThe maximum tokens given in this question per answer\"},\"getVotingBooth(address)\":{\"details\":\"Getter for a voting booth struct\",\"params\":{\"_booth\":\"The booth address\"},\"return\":\"Bool for if the booth was initializedBool for the if the booth was deactivatedChain id of the festival the booth was registered to\"},\"initFestival(bytes32,uint256,uint256)\":{\"details\":\"Creates a festival\",\"params\":{\"_endTime\":\"Timestamp for festival end\",\"_festival\":\"The chain id of the festival\",\"_startTime\":\"Timestamp for festival start\"}},\"initQuestion(bytes32,uint256,bytes32)\":{\"details\":\"Deploys a question contract\",\"params\":{\"_festival\":\"The festival chain id\",\"_maxVoteTokens\":\"The amount of vote tokens given to each voter per answer\",\"_question\":\"The question chain id\"}},\"initVotingBooth(bytes32,address)\":{\"details\":\"Registers a voting booth with this contract\",\"params\":{\"_booth\":\"The booth address\",\"_festival\":\"The festival chain is\"}},\"isActiveFestival(bytes32)\":{\"details\":\"Used by server to validate vote data\",\"params\":{\"_festival\":\"The festival chain id\"},\"return\":\"True if the festival is currently open for voting\"},\"isValidVotingNonce(address,uint256)\":{\"details\":\"Used by the server to validate vote data\",\"params\":{\"_booth\":\"The booth address\",\"_nonce\":\"The nonce\"},\"return\":\"True if the challenged booth has not used this nonce\"},\"isVoteRelayer(address)\":{\"details\":\"Used by question contracts to validate the vote relayer\",\"params\":{\"_sender\":\"The address being challenged\"},\"return\":\"True if the address given is the current vote relayer\"},\"setQuestionMasterCopy(address)\":{\"details\":\"Provided the setup parameters of a question contract don't change, the logic on future questions can be updated\",\"params\":{\"_newQuestionMasterCopy\":\"The address of the master copy to use for new questions\"}},\"setVoteRelayer(address)\":{\"details\":\"The vote relayer is the server key that sends votes to question contracts. It should be cycled periodically and must be set before any votes can take place\",\"params\":{\"_newVoteRelayer\":\"The address of the new vote relayer\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/media/000/Documents/culturestake/culturestake-contracts/contracts/mocks/MockCulturestake.sol\":\"MockCulturestake\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/000/Documents/culturestake/culturestake-contracts/contracts/Admin.sol\":{\"keccak256\":\"0x8326857dafa2e97d0161c93de4d7fafc2ed4a610291e28a2e653880504bcce6c\",\"urls\":[\"bzz-raw://f6e54b738aa89b9aae7eee22c274ad249a0082d35687209cd9b9d4f9dc8f59d1\",\"dweb:/ipfs/QmWcafj9DYRuExCjLLWSNrihVeWRjvbFnwBJi6KRNhMM8g\"]},\"/media/000/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol\":{\"keccak256\":\"0x54249fe04256377dd3e1a7b1ecdca9291691685a34b81c858f5f201499c7d649\",\"urls\":[\"bzz-raw://3b6fc8dbdae185fc35496fea35292b318646f3ca3ab07a2751fb0fff96907718\",\"dweb:/ipfs/QmUgL9Sw2mrKbEYBYpD8kcmPD77zMLqh4i21psMkpjVUvL\"]},\"/media/000/Documents/culturestake/culturestake-contracts/contracts/Proxy.sol\":{\"keccak256\":\"0x4cb0484ebdc4e2a48717550dfc93d97680bc515ddc291050b611b8c1d3aa95e4\",\"urls\":[\"bzz-raw://c2f2dec4b0ca39dbb9d476fac2db214bc346fc24722b0475471a02a752f818ff\",\"dweb:/ipfs/QmTNJX3A6E72VzMk59DaQm5pemdPd3eBYEEUFN5yyBP9aJ\"]},\"/media/000/Documents/culturestake/culturestake-contracts/contracts/Question.sol\":{\"keccak256\":\"0xa5795dc25def82782a79866836e77c65ced495be51b10a5aa854e0a18d1e5dd6\",\"urls\":[\"bzz-raw://30698515b3d394f0ccd314a61f56c96b0d7914f821144b684fd0266d9961b788\",\"dweb:/ipfs/QmNZzScpvTnRSzhPEYpyAZByB3UZFZ4t2DUQN8xMupAGkA\"]},\"/media/000/Documents/culturestake/culturestake-contracts/contracts/interfaces/CulturestakeI.sol\":{\"keccak256\":\"0xc19be1cc31057671a9c233d69634c0b13b65a4d2b4f879d768b453d843c0934f\",\"urls\":[\"bzz-raw://87b2668eb8ecd93d68b7e104e68cd25ab5d63f2bb8eef91948ab3507829ae3fb\",\"dweb:/ipfs/QmR1cPxWzuSBDF5A1v32H8fzwvvCEF8xaFvWrGQmVtxw52\"]},\"/media/000/Documents/culturestake/culturestake-contracts/contracts/mocks/MockCulturestake.sol\":{\"keccak256\":\"0x376e74a0cd366a95e41657da93c35318bf19c494f3201bd95a096ccdb3e210ed\",\"urls\":[\"bzz-raw://ae07678c84fd644667d6f0736e11dd28f685ecf645b8d0634143ece140eeefd6\",\"dweb:/ipfs/QmaUUU7SqVK8T2hmiMkeRBbGpQyR1oND5gLmGYo6NL5w82\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "55:681:6:-;;;103:133;8:9:-1;5:2;;;30:1;27;20:12;5:2;103:133:6;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;103:133:6;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;103:133:6;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;103:133:6;;;;;;;;;;;;;;;;;;;;;;187:7;196:19;2084:7:1;315:20:0;327:7;315:11;;;:20;;:::i;:::-;260:82;2120:19:1;2099:18;;:40;;;;;;;;;;;;;;;;;;2004:140;;103:133:6;;55:681;;470:741:0;585:20;175:3;585:38;;638:9;650:1;638:13;;633:487;657:7;:14;653:1;:18;633:487;;;737:13;753:7;761:1;753:10;;;;;;;;;;;;;;737:26;;802:1;785:19;;:5;:19;;;;:47;;;;;175:3;808:24;;:5;:24;;;;785:47;777:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:1;933:27;;:6;:13;940:5;933:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;925:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:5;1011:6;:20;1018:12;1011:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1068:5;1053:20;;1092:17;1103:5;1092:17;;;;;;;;;;;;;;;;;;;;;;633:487;673:3;;;;;;;633:487;;;;175:3;1129:6;:20;1136:12;1129:20;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1190:7;:14;1177:10;:27;;;;470:741;;:::o;55:681:6:-;;;;;;;",
  "deployedSourceMap": "55:681:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:681:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;621:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;242:93:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;584:33:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5360:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5360:159:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5360:159:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5360:159:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5360:159:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5360:159:1;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3076:166:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3076:166:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4401:770:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4401:770:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4401:770:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4401:770:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4401:770:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4401:770:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6777:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6777:155:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;7193:194;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7193:194:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:503;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3298:503:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11816:322;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11816:322:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9346:225;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9346:225:1;;;;;;;;;;;;;;;;;:::i;:::-;;1217:480:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1217:480:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;9789:1036:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9789:1036:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;529:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;529:51:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2734:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2734:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;8459:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8459:155:1;;;;;;;;;;;;;;;;;:::i;:::-;;6249:396;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6249:396:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7909:407;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7909:407:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3248:465:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3248:465:0;;;;;;;;;;;;;;;;;339:395:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;339:395:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;339:395:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;339:395:6;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;339:395:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;339:395:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3030:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3030:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5998:109;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5998:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2363:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2363:135:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;8918:264;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8918:264:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2211:859:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2211:859:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7578:143:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7578:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1703:502:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1703:502:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;621:26:1;;;;;;;;;;;;;:::o;242:93:6:-;287:7;313:15;306:22;;242:93;:::o;584:33:1:-;;;;;;;;;;;;;:::o;5360:159::-;5453:7;5496:8;5506:6;5485:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5485:28:1;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5485:28:1;;;5475:39;;;;;;5468:46;;5360:159;;;;:::o;3076:166:0:-;3153:4;175:3;3180:24;;:5;:24;;;;:55;;;;;3233:1;3208:27;;:6;:13;3215:5;3208:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;3180:55;3173:62;;3076:166;;;:::o;4401:770:1:-;4581:7;4598:9;4610:25;4618:8;4628:6;4610:7;:25::i;:::-;4598:37;;4643:22;4668:30;4678:1;4681:4;4687;4693;4668:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4668:30:1;;;;;;;;4643:55;;4740:12;:28;4753:14;4740:28;;;;;;;;;;;;;;;:35;;;;;;;;;;;;4735:59;;4792:1;4777:17;;;;;;4735:59;4845:12;:28;4858:14;4845:28;;;;;;;;;;;;;;;:40;;;;;;;;;;;;4841:63;;;4902:1;4887:17;;;;;;4841:63;5000:9;4959:12;:28;4972:14;4959:28;;;;;;;;;;;;;;;:37;;;:50;4953:76;;5027:1;5012:17;;;;;;4953:76;5076:42;5095:14;5111:6;5076:18;:42::i;:::-;5071:66;;5135:1;5120:17;;;;;;5071:66;5152:14;5145:21;;;;4401:770;;;;;;;;;:::o;6777:155::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6883:4:1;6848:12;:20;6861:6;6848:20;;;;;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;6920:6;6898:29;;;;;;;;;;;;6777:155;:::o;7193:194::-;7254:4;7260;7266:7;7289:12;:20;7302:6;7289:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;7318:12;:20;7331:6;7318:20;;;;;;;;;;;;;;;:32;;;;;;;;;;;;7352:12;:20;7365:6;7352:20;;;;;;;;;;;;;;;:29;;;7281:101;;;;;;7193:194;;;;;:::o;3298:503::-;3364:4;3422:9;:20;3432:9;3422:20;;;;;;;;;;;:27;;;;;;;;;;;;3417:46;;3458:5;3451:12;;;;3417:46;3524:9;:20;3534:9;3524:20;;;;;;;;;;;:32;;;;;;;;;;;;3520:50;;;3565:5;3558:12;;;;3520:50;3649:15;3616:9;:20;3626:9;3616:20;;;;;;;;;;;:30;;;:48;3612:66;;;3673:5;3666:12;;;;3612:66;3750:15;3719:9;:20;3729:9;3719:20;;;;;;;;;;;:28;;;:46;3715:64;;;3774:5;3767:12;;;;3715:64;3792:4;3785:11;;3298:503;;;;:::o;11816:322::-;11877:4;11883;11889:7;11898;11907;11937:9;:20;11947:9;11937:20;;;;;;;;;;;:27;;;;;;;;;;;;11972:9;:20;11982:9;11972:20;;;;;;;;;;;:32;;;;;;;;;;;;12012:9;:20;12022:9;12012:20;;;;;;;;;;;:36;;;;;;;;;;;;12056:9;:20;12066:9;12056:20;;;;;;;;;;;:29;;;12093:9;:20;12103:9;12093:20;;;;;;;;;;;:34;;;11922:211;;;;;;;;;;11816:322;;;;;;;:::o;9346:225::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9452:4:1;9417:9;:20;9427:9;9417:20;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;9521:5;9462:18;:56;9481:9;:20;9491:9;9481:20;;;;;;;;;;;:36;;;;;;;;;;;;9462:56;;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;9556:9;9537:29;;;;;;;;;;9346:225;:::o;1217:480:0:-;388:19;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:1;1347:19;;:5;:19;;;;:47;;;;;175:3;1370:24;;:5;:24;;;;1347:47;1339:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:1;1487:27;;:6;:13;1494:5;1487:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1479:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:6;:23;175:3;1572:23;;;;;;;;;;;;;;;;;;;;;;;;;1556:6;:13;1563:5;1556:13;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1631:5;1605:6;:23;175:3;1605:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1646:10;;:12;;;;;;;;;;;;;1673:17;1684:5;1673:17;;;;;;;;;;;;;;;;;;;;;;1217:480;:::o;9789:1036:1:-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9921:9:1;:20;9931:9;9921:20;;;;;;;;;;;:27;;;;;;;;;;;;9913:36;;;;;;10029:9;:20;10039:9;10029:20;;;;;;;;;;;:27;;;;;;;;;;;;10028:28;10020:37;;;;;;10121:17;10171:10;10191:4;10198:9;10209:14;10225:9;10141:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10141:99:1;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;10141:99:1;10121:119;;10309:22;10334:17;10346:4;10334:11;:17::i;:::-;10309:42;;10495:4;10447:18;:45;10474:16;10447:45;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;10569:4;10539:9;:20;10549:9;10539:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;10611:9;10579;:20;10589:9;10579:20;;;;;;;;;;;:29;;:41;;;;10673:16;10626:9;:20;10636:9;10626:20;;;;;;;;;;;:36;;;:64;;;;;;;;;;;;;;;;;;10733:14;10696:9;:20;10706:9;10696:20;;;;;;;;;;;:34;;:51;;;;10802:16;10759:61;;10783:9;10772;10759:61;;;;;;;;;;456:1:0;;9789:1036:1;;;:::o;529:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;2734:107::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2821:15:1;2807:11;;:29;;;;;;;;;;;;;;;;;;2734:107;:::o;8459:155::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8565:4:1;8530:9;:20;8540:9;8530:20;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;8599:9;8580:29;;;;;;;;;;8459:155;:::o;6249:396::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6396:9:1;:20;6406:9;6396:20;;;;;;;;;;;:27;;;;;;;;;;;;6388:36;;;;;;6474:12;:20;6487:6;6474:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;6473:28;6465:37;;;;;;6540:4;6510:12;:20;6523:6;6510:20;;;;;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;6584:9;6552:12;:20;6565:6;6552:20;;;;;;;;;;;;;;;:29;;:41;;;;6633:6;6606:34;;6622:9;6606:34;;;;;;;;;;6249:396;;:::o;7909:407::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8093:9:1;:20;8103:9;8093:20;;;;;;;;;;;:27;;;;;;;;;;;;8092:28;8084:37;;;;;;8157:4;8127:9;:20;8137:9;8127:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8200:10;8167:9;:20;8177:9;8167:20;;;;;;;;;;;:30;;:43;;;;8247:8;8216:9;:20;8226:9;8216:20;;;;;;;;;;;:28;;:39;;;;8279:9;8266:45;8290:10;8302:8;8266:45;;;;;;;;;;;;;;;;;;;;;;;;7909:407;;;:::o;3248:465:0:-;3314:16;3346:22;3385:10;;3371:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3371:25:0;;;;3346:50;;3440:13;3456:1;3440:17;;3467:20;3490:6;:23;175:3;3490:23;;;;;;;;;;;;;;;;;;;;;;;;;3467:46;;3523:162;175:3;3529:31;;:12;:31;;;3523:162;;3591:12;3576:5;3582;3576:12;;;;;;;;;;;;;:27;;;;;;;;;;;3632:6;:20;3639:12;3632:20;;;;;;;;;;;;;;;;;;;;;;;;;3617:35;;3666:8;;;;;;;3523:162;;;3701:5;3694:12;;;;;3248:465;:::o;339:395:6:-;526:4;538:22;563:66;583:9;594:8;604:6;612:4;618;624;563:19;:66::i;:::-;538:91;;669:1;643:28;;:14;:28;;;;635:37;;;;;;678:34;689:14;705:6;678:10;:34::i;:::-;725:4;718:11;;;339:395;;;;;;;;:::o;3030:107:1:-;3091:4;3121:11;;;;;;;;;;;3110:22;;:7;:22;;;3103:29;;3030:107;;;:::o;5998:109::-;1639:18;:30;1658:10;1639:30;;;;;;;;;;;;;;;;;;;;;;;;;1631:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6076:26;6087:6;6095;6076:10;:26::i;:::-;5998:109;;:::o;2363:135::-;388:19:0;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:22:1;2450:18;;:43;;;;;;;;;;;;;;;;;;2363:135;:::o;8918:264::-;8979:4;8985;8991:7;9000;9030:9;:20;9040:9;9030:20;;;;;;;;;;;:27;;;;;;;;;;;;9065:9;:20;9075:9;9065:20;;;;;;;;;;;:32;;;;;;;;;;;;9105:9;:20;9115:9;9105:20;;;;;;;;;;;:30;;;9143:9;:20;9153:9;9143:20;;;;;;;;;;;:28;;;9015:162;;;;;;;;8918:264;;;;;:::o;2211:859:0:-;388:19;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:1;2382:22;;:8;:22;;;;:53;;;;;175:3;2408:27;;:8;:27;;;;2382:53;2374:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:1;2528:30;;:6;:16;2535:8;2528:16;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;2520:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:1;2691:22;;:8;:22;;;;:53;;;;;175:3;2717:27;;:8;:27;;;;2691:53;2683:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:8;2797:29;;:6;:17;2804:9;2797:17;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;2789:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:6;:16;2905:8;2898:16;;;;;;;;;;;;;;;;;;;;;;;;;2879:6;:16;2886:8;2879:16;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2944:8;2924:6;:17;2931:9;2924:17;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2989:1;2962:6;:16;2969:8;2962:16;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3006:22;3019:8;3006:22;;;;;;;;;;;;;;;;;;;;;;3043:20;3054:8;3043:20;;;;;;;;;;;;;;;;;;;;;;2211:859;;;:::o;7578:143:1:-;7659:4;7680:12;:20;7693:6;7680:20;;;;;;;;;;;;;;;:27;;:35;7708:6;7680:35;;;;;;;;;;;;;;;;;;;;;7679:36;7671:45;;7578:143;;;;:::o;1703:502:0:-;388:19;396:10;388:7;:19::i;:::-;380:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:1;1894:19;;:5;:19;;;;:47;;;;;175:3;1917:24;;:5;:24;;;;1894:47;1886:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2015:5;1994:26;;:6;:17;2001:9;1994:17;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;1986:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:6;:13;2100:5;2093:13;;;;;;;;;;;;;;;;;;;;;;;;;2073:6;:17;2080:9;2073:17;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;2140:1;2116:6;:13;2123:5;2116:13;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2152:10;;:12;;;;;;;;;;;;;;2179:19;2192:5;2179:19;;;;;;;;;;;;;;;;;;;;;;1703:502;;:::o;11046:391:1:-;11116:11;11157:18;;;;;;;;;;;11147:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11147:29:1;11139:37;;11202:1;11188:4;:11;:15;11184:216;;;11369:1;11365;11362;11355:4;11349:11;11342:4;11336;11332:15;11329:1;11322:5;11317:3;11312:55;11309:62;11306:2;;;11384:1;11381;11374:12;11306:2;11290:110;11412:20;11426:5;11412:20;;;;;;;;;;;;;;;;;;;;;;11046:391;;;:::o;5680:114::-;5785:4;5747:12;:20;5760:6;5747:20;;;;;;;;;;;;;;;:27;;:35;5775:6;5747:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;5680:114;;:::o;55:681:6:-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport \"../Culturestake.sol\";\n\ncontract MockCulturestake is Culturestake {\n    constructor(address[] memory _owners, address _questionMasterCopy)\n    Culturestake(_owners, _questionMasterCopy)\n    public {\n\n    }\n\n    function getTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n  function checkBoothSignatureAndBurnNonce(\n    bytes32 _festival,\n    bytes32[] memory _answers,\n    uint256 _nonce,\n    uint8 sigV,\n    bytes32 sigR,\n    bytes32 sigS\n  ) public returns (bool) {\n    address addressFromSig = checkBoothSignature(_festival, _answers, _nonce, sigV, sigR, sigS);\n    require(addressFromSig != address(0));\n    _burnNonce(addressFromSig, _nonce);\n    return true;\n  }\n}",
  "sourcePath": "/media/000/Documents/culturestake/culturestake-contracts/contracts/mocks/MockCulturestake.sol",
  "ast": {
    "absolutePath": "/media/000/Documents/culturestake/culturestake-contracts/contracts/mocks/MockCulturestake.sol",
    "exportedSymbols": {
      "MockCulturestake": [
        1716
      ]
    },
    "id": 1717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1645,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/media/000/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol",
        "file": "../Culturestake.sol",
        "id": 1646,
        "nodeType": "ImportDirective",
        "scope": 1717,
        "sourceUnit": 1118,
        "src": "24:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1647,
              "name": "Culturestake",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1117,
              "src": "84:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Culturestake_$1117",
                "typeString": "contract Culturestake"
              }
            },
            "id": 1648,
            "nodeType": "InheritanceSpecifier",
            "src": "84:12:6"
          }
        ],
        "contractDependencies": [
          388,
          1117
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1716,
        "linearizedBaseContracts": [
          1716,
          1117,
          388
        ],
        "name": "MockCulturestake",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1660,
              "nodeType": "Block",
              "src": "228:8:6",
              "statements": []
            },
            "documentation": null,
            "id": 1661,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1656,
                    "name": "_owners",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1651,
                    "src": "187:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1657,
                    "name": "_questionMasterCopy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1653,
                    "src": "196:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1658,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1655,
                  "name": "Culturestake",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1117,
                  "src": "174:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Culturestake_$1117_$",
                    "typeString": "type(contract Culturestake)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "174:42:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "name": "_owners",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "115:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1649,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "115:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1650,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "115:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "name": "_questionMasterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "141:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "114:55:6"
            },
            "returnParameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:0:6"
            },
            "scope": 1716,
            "src": "103:133:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1669,
              "nodeType": "Block",
              "src": "296:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1666,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "313:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "313:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1665,
                  "id": 1668,
                  "nodeType": "Return",
                  "src": "306:22:6"
                }
              ]
            },
            "documentation": null,
            "id": 1670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:2:6"
            },
            "returnParameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1664,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1670,
                  "src": "287:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:9:6"
            },
            "scope": 1716,
            "src": "242:93:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1714,
              "nodeType": "Block",
              "src": "532:202:6",
              "statements": [
                {
                  "assignments": [
                    1689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1689,
                      "name": "addressFromSig",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "538:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1688,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "538:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1698,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1691,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "583:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1692,
                        "name": "_answers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "594:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1693,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "604:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1694,
                        "name": "sigV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1679,
                        "src": "612:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1695,
                        "name": "sigR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "618:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1696,
                        "name": "sigS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "624:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1690,
                      "name": "checkBoothSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "563:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32[] memory,uint256,uint8,bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "538:91:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1700,
                          "name": "addressFromSig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "643:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "669:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "661:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "643:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1921,
                        1922
                      ],
                      "referencedDeclaration": 1921,
                      "src": "635:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "ExpressionStatement",
                  "src": "635:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1708,
                        "name": "addressFromSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "689:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1709,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "705:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1707,
                      "name": "_burnNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "678:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "678:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "725:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1687,
                  "id": 1713,
                  "nodeType": "Return",
                  "src": "718:11:6"
                }
              ]
            },
            "documentation": null,
            "id": 1715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBoothSignatureAndBurnNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "385:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1675,
                  "name": "_answers",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "408:25:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1673,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "408:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1674,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "408:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1677,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "439:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1679,
                  "name": "sigV",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "459:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "name": "sigR",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "475:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "name": "sigS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "493:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "379:130:6"
            },
            "returnParameters": {
              "id": 1687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1686,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "526:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "525:6:6"
            },
            "scope": 1716,
            "src": "339:395:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1717,
        "src": "55:681:6"
      }
    ],
    "src": "0:736:6"
  },
  "legacyAST": {
    "absolutePath": "/media/000/Documents/culturestake/culturestake-contracts/contracts/mocks/MockCulturestake.sol",
    "exportedSymbols": {
      "MockCulturestake": [
        1716
      ]
    },
    "id": 1717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1645,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/media/000/Documents/culturestake/culturestake-contracts/contracts/Culturestake.sol",
        "file": "../Culturestake.sol",
        "id": 1646,
        "nodeType": "ImportDirective",
        "scope": 1717,
        "sourceUnit": 1118,
        "src": "24:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1647,
              "name": "Culturestake",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1117,
              "src": "84:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Culturestake_$1117",
                "typeString": "contract Culturestake"
              }
            },
            "id": 1648,
            "nodeType": "InheritanceSpecifier",
            "src": "84:12:6"
          }
        ],
        "contractDependencies": [
          388,
          1117
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1716,
        "linearizedBaseContracts": [
          1716,
          1117,
          388
        ],
        "name": "MockCulturestake",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1660,
              "nodeType": "Block",
              "src": "228:8:6",
              "statements": []
            },
            "documentation": null,
            "id": 1661,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1656,
                    "name": "_owners",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1651,
                    "src": "187:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1657,
                    "name": "_questionMasterCopy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1653,
                    "src": "196:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1658,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1655,
                  "name": "Culturestake",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1117,
                  "src": "174:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Culturestake_$1117_$",
                    "typeString": "type(contract Culturestake)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "174:42:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "name": "_owners",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "115:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1649,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "115:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1650,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "115:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "name": "_questionMasterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "141:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "114:55:6"
            },
            "returnParameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:0:6"
            },
            "scope": 1716,
            "src": "103:133:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1669,
              "nodeType": "Block",
              "src": "296:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1666,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "313:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "313:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1665,
                  "id": 1668,
                  "nodeType": "Return",
                  "src": "306:22:6"
                }
              ]
            },
            "documentation": null,
            "id": 1670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:2:6"
            },
            "returnParameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1664,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1670,
                  "src": "287:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:9:6"
            },
            "scope": 1716,
            "src": "242:93:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1714,
              "nodeType": "Block",
              "src": "532:202:6",
              "statements": [
                {
                  "assignments": [
                    1689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1689,
                      "name": "addressFromSig",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "538:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1688,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "538:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1698,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1691,
                        "name": "_festival",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "583:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1692,
                        "name": "_answers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "594:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1693,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "604:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1694,
                        "name": "sigV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1679,
                        "src": "612:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1695,
                        "name": "sigR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "618:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1696,
                        "name": "sigS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "624:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1690,
                      "name": "checkBoothSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "563:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32[] memory,uint256,uint8,bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "538:91:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1700,
                          "name": "addressFromSig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "643:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "669:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "661:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "643:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1921,
                        1922
                      ],
                      "referencedDeclaration": 1921,
                      "src": "635:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "ExpressionStatement",
                  "src": "635:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1708,
                        "name": "addressFromSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "689:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1709,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "705:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1707,
                      "name": "_burnNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "678:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "678:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "725:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1687,
                  "id": 1713,
                  "nodeType": "Return",
                  "src": "718:11:6"
                }
              ]
            },
            "documentation": null,
            "id": 1715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBoothSignatureAndBurnNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "name": "_festival",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "385:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1675,
                  "name": "_answers",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "408:25:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1673,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "408:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1674,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "408:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1677,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "439:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1679,
                  "name": "sigV",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "459:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "name": "sigR",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "475:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "name": "sigS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "493:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "379:130:6"
            },
            "returnParameters": {
              "id": 1687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1686,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "526:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "525:6:6"
            },
            "scope": 1716,
            "src": "339:395:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1717,
        "src": "55:681:6"
      }
    ],
    "src": "0:736:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-08-18T14:32:42.978Z",
  "devdoc": {
    "methods": {
      "burnNonce(address,uint256)": {
        "details": "Destructive method that burns the nonce - marked onlyQuestions to prevent griefing",
        "params": {
          "_booth": "The booth using the nonce (nonces are stored per booth)",
          "_nonce": "The nonce"
        }
      },
      "checkBoothSignature(bytes32,bytes32[],uint256,uint8,bytes32,bytes32)": {
        "details": "Used by server to validate vote data - the booth signs the answers array and a nonce",
        "params": {
          "_answers": "An array of answer ids",
          "_festival": "The festival chain id",
          "_nonce": "A random number added to the answers array by the booth - prevents a booth signature from being used for more than one vote package",
          "sigR": "Booth signature data",
          "sigS": "Booth signature data",
          "sigV": "Booth signature data"
        },
        "return": "True if the signature provided is a signature of an active booth, signing the correct data, and active on the claimed festival"
      },
      "deactivateFestival(bytes32)": {
        "details": "Destructive method, questions from deactivated festivals cannot be voted on",
        "params": {
          "_festival": "The chain id of the festival"
        }
      },
      "deactivateQuestion(bytes32)": {
        "details": "Destructive method, deactivated questions cannot be voted on and do not pass the onlyQuestions modifier",
        "params": {
          "_question": "The question chain id"
        }
      },
      "deactivateVotingBooth(address)": {
        "details": "Destructive method, signatures from deactivated booths can not be used to vote",
        "params": {
          "_booth": "The booth address"
        }
      },
      "getFestival(bytes32)": {
        "details": "Getter for a festival struct",
        "params": {
          "_festival": "The chain id of the festival"
        },
        "return": "Bool for if the festival was initializedBool for the if the festival was deactivatedTimestamp for festival start timeTimestamp for festival end time"
      },
      "getHash(bytes32[],uint256)": {
        "params": {
          "_answers": "An array of answer ids",
          "_nonce": "A random number added to the answers array by the booth"
        },
        "return": "Keccak sha3 of the packed answers array and nonce"
      },
      "getQuestion(bytes32)": {
        "details": "Getter for a question struct",
        "params": {
          "_question": "The question chain is"
        },
        "return": "Bool for if the booth was initializedBool for if the booth was deactivatedThe address of the question contractThe festival chain id the question is associated withThe maximum tokens given in this question per answer"
      },
      "getVotingBooth(address)": {
        "details": "Getter for a voting booth struct",
        "params": {
          "_booth": "The booth address"
        },
        "return": "Bool for if the booth was initializedBool for the if the booth was deactivatedChain id of the festival the booth was registered to"
      },
      "initFestival(bytes32,uint256,uint256)": {
        "details": "Creates a festival",
        "params": {
          "_endTime": "Timestamp for festival end",
          "_festival": "The chain id of the festival",
          "_startTime": "Timestamp for festival start"
        }
      },
      "initQuestion(bytes32,uint256,bytes32)": {
        "details": "Deploys a question contract",
        "params": {
          "_festival": "The festival chain id",
          "_maxVoteTokens": "The amount of vote tokens given to each voter per answer",
          "_question": "The question chain id"
        }
      },
      "initVotingBooth(bytes32,address)": {
        "details": "Registers a voting booth with this contract",
        "params": {
          "_booth": "The booth address",
          "_festival": "The festival chain is"
        }
      },
      "isActiveFestival(bytes32)": {
        "details": "Used by server to validate vote data",
        "params": {
          "_festival": "The festival chain id"
        },
        "return": "True if the festival is currently open for voting"
      },
      "isValidVotingNonce(address,uint256)": {
        "details": "Used by the server to validate vote data",
        "params": {
          "_booth": "The booth address",
          "_nonce": "The nonce"
        },
        "return": "True if the challenged booth has not used this nonce"
      },
      "isVoteRelayer(address)": {
        "details": "Used by question contracts to validate the vote relayer",
        "params": {
          "_sender": "The address being challenged"
        },
        "return": "True if the address given is the current vote relayer"
      },
      "setQuestionMasterCopy(address)": {
        "details": "Provided the setup parameters of a question contract don't change, the logic on future questions can be updated",
        "params": {
          "_newQuestionMasterCopy": "The address of the master copy to use for new questions"
        }
      },
      "setVoteRelayer(address)": {
        "details": "The vote relayer is the server key that sends votes to question contracts. It should be cycled periodically and must be set before any votes can take place",
        "params": {
          "_newVoteRelayer": "The address of the new vote relayer"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}